{"meta":{"title":"Kang's Blog","subtitle":"爱分享，乐学习","description":"康的博客","author":"Kang","url":"https://kangblogs.top","root":"/"},"pages":[{"title":"","date":"2020-06-17T09:54:16.098Z","updated":"2020-06-17T09:38:00.840Z","comments":true,"path":"baidu_verify_QFH1ukdGTO.html","permalink":"https://kangblogs.top/baidu_verify_QFH1ukdGTO.html","excerpt":"","text":"QFH1ukdGTO"},{"title":"实时疫情地图","date":"2021-01-17T15:48:30.000Z","updated":"2021-01-17T16:14:20.616Z","comments":false,"path":"COVID-19/index.html","permalink":"https://kangblogs.top/COVID-19/index.html","excerpt":"","text":""},{"title":"那些年，我们看过的影番","date":"2020-06-23T10:48:54.000Z","updated":"2020-08-11T16:56:17.296Z","comments":true,"path":"bangumi/index.html","permalink":"https://kangblogs.top/bangumi/index.html","excerpt":"","text":"电影🎬"},{"title":"哔哔","date":"2021-02-07T06:20:48.000Z","updated":"2021-07-28T11:44:00.632Z","comments":false,"path":"bb/index.html","permalink":"https://kangblogs.top/bb/index.html","excerpt":"","text":"ispeakBber .init({ el: '#speak-bber', name: 'Kang', // 显示的昵称 envId: 'blogtwikoo-3gf370k188d41786', // 环境id region: 'ap-shanghai', // 腾讯云地址，默认为上海 limit: 5, // 每次加载的条数，默认为5 avatar: 'https://cdn.jsdelivr.net/gh/flipped-1121/BlogPictures/flipped-1121-PIC/d9f7d24483a94201c6bb6528ddfe5b88.png', fromcolor:'rgb(245, 150, 170)', loadingImg: 'https://7.dusays.com/2021/03/04/d2d5e983e2961.gif', // 自定义loading的图片，示例值为默认值 dbName: 'talks' // 数据的名称，默认talks，避免有人的命名不是这个，所以加入此配置字段。 }) .then(function() { console.log('bb 加载完成') })"},{"title":"游戏・抓住小猫","date":"2020-08-14T08:29:50.951Z","updated":"2020-08-14T08:29:50.951Z","comments":true,"path":"cat/index.html","permalink":"https://kangblogs.top/cat/index.html","excerpt":"","text":"点击圆圈，圈住小猫 有技巧的，快来挑战一下！！！ #catch-the-cat{ display: flex; justify-content: center; } @media screen and (max-width: 636px) { #catch-the-cat canvas { height: 100% !important; width: 100% !important; } } $(document).ready(function(){ //Check if the current URL contains '#' if(document.URL.indexOf(\"#\")==-1){ // Set the URL to whatever it was plus \"#\". url = document.URL+\"#\"; location = \"#\"; //Reload the page location.reload(true); } }); window.game = new CatchTheCatGame({ w: 16, h: 16, r: 20, backgroundColor: 0xeeeeee, parent: 'catch-the-cat', statusBarAlign: 'center', credit: 'https://kangblogs.top' });"},{"title":"categories","date":"2020-06-14T08:47:06.000Z","updated":"2020-06-14T08:47:29.504Z","comments":true,"path":"categories/index.html","permalink":"https://kangblogs.top/categories/index.html","excerpt":"","text":""},{"title":"心情","date":"2021-03-19T14:07:00.709Z","updated":"2021-03-19T14:07:00.709Z","comments":false,"path":"causerie/index.html","permalink":"https://kangblogs.top/causerie/index.html","excerpt":"","text":"new Artitalk({ appId: 'CIfHpJjrQ2vFjzhuQlCBgbVB-MdYXbMMI', // Your LeanCloud appId appKey: 'eu781PKMgp8YDvgdsUjIhJiM', // Your LeanCloud appKey color1: \"linear-gradient(90deg,rgba(247,149,51,.1) 0,rgba(243,112,85,.1) 15%,rgba(239,78,123,.1) 30%,rgba(161,102,171,.1) 44%,rgba(80,115,184,.1) 58%,rgba(16,152,173,.1) 72%,rgba(7,179,155,.1) 86%,rgba(109,186,130,.1) 100%)\", color2: \"linear-gradient(90deg,rgba(247,149,51,.1) 0,rgba(243,112,85,.1) 15%,rgba(239,78,123,.1) 30%,rgba(161,102,171,.1) 44%,rgba(80,115,184,.1) 58%,rgba(16,152,173,.1) 72%,rgba(7,179,155,.1) 86%,rgba(109,186,130,.1) 100%)\", color3: \"efefef\" })"},{"title":"友情链接","date":"2020-06-23T10:49:52.000Z","updated":"2021-03-01T17:24:53.048Z","comments":true,"path":"link/index.html","permalink":"https://kangblogs.top/link/index.html","excerpt":"","text":"// if(typeof(Friend)=='undefined'){ // 这个地址按照你的地址填写，主要是为了防止pjax不加载重新刷新页面 // location.href='/link' // } var obj = { // 容器选择器 el: '#friend1', // gitee主人id owner: 'flipped1121', // gitee仓库 repo: 'friends', // 排序方式 direction_sort: 'asc', // 按标签排序 sort_container: ['卡片专属', '菜鸡专属', '同校PY', '大佬们'], // 标签描述 labelDescr: { 大佬们: \"这是一群大佬哦！\", 菜鸡专属: \"这是一群菜鸡哦！\", 同校PY: \"同校好友\", 卡片专属: \"大佬专属\" }, // 头像加载失败时显示的图像(可不填，有默认值) fail_img: '' } document.querySelector('.flink').insertAdjacentHTML('afterbegin',\"\") new Friend(obj) 友链自助"},{"title":"那些年，我们听过的音乐","date":"2020-06-23T10:47:47.000Z","updated":"2020-06-24T07:05:42.392Z","comments":false,"path":"music/index.html","permalink":"https://kangblogs.top/music/index.html","excerpt":"","text":"静静地聆听这个世界 &nbsp; &nbsp; 释放内心的悸动 &nbsp;"},{"title":"标签","date":"2020-06-14T08:47:17.000Z","updated":"2021-02-22T15:53:36.989Z","comments":false,"path":"tags/index.html","permalink":"https://kangblogs.top/tags/index.html","excerpt":"","text":""},{"title":"永远相信美好的事即将发生","date":"2020-06-25T15:41:30.000Z","updated":"2021-02-08T05:28:22.554Z","comments":false,"path":"photos/index.html","permalink":"https://kangblogs.top/photos/index.html","excerpt":"","text":"壁纸 美化你的桌面 随拍 记录美好时光"},{"title":"记录美好时光","date":"2020-06-25T15:41:30.000Z","updated":"2020-12-07T12:54:05.365Z","comments":false,"path":"photos/memory/index.html","permalink":"https://kangblogs.top/photos/memory/index.html","excerpt":"","text":"家乡 &nbsp; 安理"},{"title":"美化你的桌面","date":"2020-06-25T15:41:30.000Z","updated":"2020-12-01T16:55:04.702Z","comments":false,"path":"photos/wallpaper/index.html","permalink":"https://kangblogs.top/photos/wallpaper/index.html","excerpt":"","text":""},{"title":"About","date":"2020-06-16T15:47:54.000Z","updated":"2021-09-24T10:42:43.218Z","comments":false,"path":"about/index.html","permalink":"https://kangblogs.top/about/index.html","excerpt":"","text":"Kang's Blog | About document.onkeydown = function () { if (window.event && window.event.keyCode == 123) { event.keyCode = 0; event.returnValue = false; return false; } }; 您的浏览器不支持 audio 标签，无法播放音乐！ 江湖名称：KANG 常驻之地：China 丨安徽丨淮南 初度之辰：2000 努力学习：C 丨 Python 丨 Java 技能丨 Skill HTML/CSS/JS &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30% C &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;60% Java &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;60% Python &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30% HEXO/GIT &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;40% PS/PR/AE &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;65% 简介 | Introduction ● 学历：本科物联网工程专业大三学生 ● 目标：Java 工程师 or 算法工程师 ● 博客：爱分享，乐学习 ● 兴趣： 分享 学习 交友 ● 其他：虽然很菜，但是在努力学习中！ 🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸 &nbsp; 当杨花落尽 马失前蹄 与其感叹世事无常 时节交替 不如忘却身后的影子 面对那属于你的太阳 当你面朝大海 心向暖阳 春已到 花即开 &nbsp; 当星河璀璨 万籁俱寂 与其无奈闲人几何 美景无人赏 不如拭去眼角的秋霜 微笑于那醉人的月光 当你身临空域 胸中涌浪 星已亮 光即照 &nbsp; 当花草皆烬 雁过雪飘 与其感伤情错于人 世故弄今糟 不如拈灰造墨 潇洒看今朝 当你手握枯笔 思绪横跳 文已成 情即烧 &nbsp; 🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸🌸 联系我 | Contact me Copyright © 2020-2021 KANG'S BLOG. All rights reserved. if ('addEventListener' in window) { window.addEventListener('load', function () { document.body.className = document.body.className.replace(/\\bis-loading\\b/, ''); }); document.body.className += (navigator.userAgent.match(/(MSIE|rv:11\\.0)/) ? ' is-ie' : ''); } uniform mat4 uProjection; uniform mat4 uModelview; uniform vec3 uResolution; uniform vec3 uOffset; uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start attribute vec3 aPosition; attribute vec3 aEuler; attribute vec2 aMisc; //x:size, y:fade varying vec3 pposition; varying float psize; varying float palpha; varying float pdist; //varying mat3 rotMat; varying vec3 normX; varying vec3 normY; varying vec3 normZ; varying vec3 normal; varying float diffuse; varying float specular; varying float rstop; varying float distancefade; void main(void) { // Projection is based on vertical angle vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0); gl_Position = uProjection * pos; gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5; pposition = pos.xyz; psize = aMisc.x; pdist = length(pos.xyz); palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z); vec3 elrsn = sin(aEuler); vec3 elrcs = cos(aEuler); mat3 rotx = mat3( 1.0, 0.0, 0.0, 0.0, elrcs.x, elrsn.x, 0.0, -elrsn.x, elrcs.x ); mat3 roty = mat3( elrcs.y, 0.0, -elrsn.y, 0.0, 1.0, 0.0, elrsn.y, 0.0, elrcs.y ); mat3 rotz = mat3( elrcs.z, elrsn.z, 0.0, -elrsn.z, elrcs.z, 0.0, 0.0, 0.0, 1.0 ); mat3 rotmat = rotx * roty * rotz; normal = rotmat[2]; mat3 trrotm = mat3( rotmat[0][0], rotmat[1][0], rotmat[2][0], rotmat[0][1], rotmat[1][1], rotmat[2][1], rotmat[0][2], rotmat[1][2], rotmat[2][2] ); normX = trrotm[0]; normY = trrotm[1]; normZ = trrotm[2]; const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237); float tmpdfs = dot(lit, normal); if(tmpdfs < 0.0) { normal = -normal; tmpdfs = dot(lit, normal); } diffuse = 0.4 + tmpdfs; vec3 eyev = normalize(-pos.xyz); if(dot(eyev, normal) > 0.0) { vec3 hv = normalize(eyev + lit); specular = pow(max(dot(hv, normal), 0.0), 20.0); } else { specular = 0.0; } rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0); rstop = pow(rstop, 0.5); //-0.69315 = ln(0.5) distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y)); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start const vec3 fadeCol = vec3(0.08, 0.03, 0.06); varying vec3 pposition; varying float psize; varying float palpha; varying float pdist; //varying mat3 rotMat; varying vec3 normX; varying vec3 normY; varying vec3 normZ; varying vec3 normal; varying float diffuse; varying float specular; varying float rstop; varying float distancefade; float ellipse(vec2 p, vec2 o, vec2 r) { vec2 lp = (p - o) / r; return length(lp) - 1.0; } void main(void) { vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0; vec3 d = vec3(0.0, 0.0, -1.0); float nd = normZ.z; //dot(-normZ, d); if(abs(nd) < 0.0001) discard; float np = dot(normZ, p); vec3 tp = p + d * np / nd; vec2 coord = vec2(dot(normX, tp), dot(normY, tp)); //angle = 15 degree const float flwrsn = 0.258819045102521; const float flwrcs = 0.965925826289068; mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs); vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm; float r; if(flwrp.x < 0.0) { r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5); } else { r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5); } if(r > rstop) discard; vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r); float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35)); col *= vec3(1.0, grady, grady); col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3)); col = col * diffuse + specular; col = mix(fadeCol, col, distancefade); float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0; alpha = smoothstep(0.0, 1.0, alpha) * palpha; gl_FragColor = vec4(col * 0.5, alpha); } uniform vec3 uResolution; attribute vec2 aPosition; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_Position = vec4(aPosition, 0.0, 1.0); texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5); screenCoord = aPosition.xy * vec2(uResolution.z, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform vec2 uTimes; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec3 col; float c; vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0); c = exp(-pow(length(tmpv) * 1.8, 2.0)); col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c); gl_FragColor = vec4(col * 0.5, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 col = texture2D(uSrc, texCoord); gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; uniform vec4 uBlurDir; //dir(x, y), stride(z, w) varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 col = texture2D(uSrc, texCoord); col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta); col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta); col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta); col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta); gl_FragColor = col / 5.0; } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_FragColor = texture2D(uSrc, texCoord); } uniform vec3 uResolution; attribute vec2 aPosition; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_Position = vec4(aPosition, 0.0, 1.0); texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5); screenCoord = aPosition.xy * vec2(uResolution.z, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform sampler2D uBloom; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 srccol = texture2D(uSrc, texCoord) * 2.0; vec4 bloomcol = texture2D(uBloom, texCoord); vec4 col; col = srccol + bloomcol * (vec4(1.0) + srccol); col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5); col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2) gl_FragColor = vec4(col.rgb, 1.0); gl_FragColor.a = 1.0; }"},{"title":"Box","date":"2020-07-05T09:34:43.000Z","updated":"2020-10-15T12:45:40.180Z","comments":false,"path":"box/index.html","permalink":"https://kangblogs.top/box/index.html","excerpt":"","text":"KANG'S BLOG 丨导航 开发社区 代码托管 语言文档 技能训练 在线平台 HOT 高校平台 游戏编程 Pythoner 文档资料 博客收藏 学习资源 组织社区 爬虫相关 HOT 学习教程 在线视频 博客论坛 学习平台 常用工具 站长工具 HOT IT 工具箱 文件处理 HOT 设计素材 效率软件 HOT 服务平台 云服务商 众包平台 更多导航 关于本页 隐藏 / 显示侧边栏 博客首页 友情链接 博客相册 关于博主 (function(a,h,g,f,e,d,c,b){b=function(){d=h.createElement(g);c=h.getElementsByTagName(g)[0];d.src=e;d.charset=\"utf-8\";d.async=1;c.parentNode.insertBefore(d,c)};a[\"SeniverseWeatherWidgetObject\"]=f;a[f]||(a[f]=function(){(a[f].q=a[f].q||[]).push(arguments)});a[f].l=+new Date();if(a.attachEvent){a.attachEvent(\"onload\",b)}else{a.addEventListener(\"load\",b,false)}}(window,document,\"script\",\"SeniverseWeatherWidget\",\"//cdn.sencdn.com/widget2/static/js/bundle.js?t=\"+parseInt((new Date().getTime() / 100000000).toString(),10))); window.SeniverseWeatherWidget('show', { flavor: \"slim\", location: \"WX4FBXXFKE4F\", geolocation: true, language: \"auto\", unit: \"c\", theme: \"auto\", token: \"a39cd5a0-4024-4cb2-85c6-0250317058db\", hover: \"enabled\", container: \"tp-weather-widget\" }) 开发社区 Stack Overflow 全球最受程序员欢迎的开发社区 CSDN 全球最大中文 IT 社区，为 IT 专业技术人员提供最全面的信息传播和服务平台 博客园 代码改变世界 V2EX V2EX = way to explore 掘金 一个帮助开发者成长的社区 SegmentFault 改变并提升人们获取知识的方式和效率，帮助更多的开发者获得成长与成功 开源中国 国内最大的开源技术社区 ITeye ITeye 软件开发交流社区 - Java 编程 Spring 框架 Ajax 技术 agile 敏捷软件开发 ruby on rails 实践 51CTO 技术成就梦想 ITPUB 全球最大的学习分享平台 知乎 国内最受欢迎的知识性问答社区 简书 创作你的创作 云 + 社区 来自腾讯的开发者技术分享社区 云栖社区 阿里云面向开发者的开放型技术平台 代码托管 Github 全球最大的面向开源及私有软件项目的托管平台 Gitlab 支持无限的公有项目和私有项目的代码托管平台 Bitbucket 同时支持 Git 和 Mercurial 这两个版本控制软件，免费的私有仓库，支持 5 人以内的合作开发 SourceForge 又称 SF.net，是开源软件开发者进行开发管理的集中式场所 Coding 国内首个一站式云端软件服务平台 Gitee 国内最大的开源社区 OSChina 的代码托管平台 阿里云代码托管 阿里云旗下代码托管平台 百度效率云 百度云旗下的 Git 代码托管平台 语言文档 Zeal 脱机文档浏览器，包含 196 种语言 API 文档，支持 Windows、Linux 和 macOS Dash 适用于 Mac OS 平台的软件编程文档管理工具，可以浏览 API 文档，以及管理代码片段工具。自带了丰富的 API 文档，涉及各种主流的编程语言和框架 DevDocs 在快速，有条理和可搜索的界面中结合了多个 API 文档，可以在移动设备上离线运行，并且可以安装在 Chrome 上 C/C++ C/C++ API 文档 C# C# API 文档 Java Java API 文档 .NET .NET API 文档 PHP PHP API 文档 JavaScript JavaScript API 文档 Python Python API 文档 Android Android API 文档 iOS iOS API 文档 SQL SQL API 文档 Swift Swift API 文档 Ruby Ruby API 文档 GO GO API 文档 R R API 文档 MATLAB MATLAB API 文档 Node.js Node.js API 文档 HTML HTML API 文档 CSS CSS API 文档 Redis Redis API 文档 MongoDB MongoDB API 文档 Django Django API 文档 在线平台 LeetCode 全球极客挚爱的技术成长平台 Topcoder 全世界规模最大的程序竞赛网站，也会有一些算法竞赛，适合一些高端的或者搞 ACM 的，也会举办一些比赛 Codeforces 俄罗斯最大的算法比赛网站 Hihocoder 技术团队来自原北京大学 POJ (PKU Online Judge) 开发团队，收集了全球范围内很多地区、高校举办的比赛试题， 提供 365 天 * 24 小时的在线提交、评判程序的服务 LintCode 被称作中文版的 leetcode，也是可以做为编程能力提升的一个中转站 SPOJ 波兰的算法刷题网站 NEUQ OJ 一个在线的判题平台 洛谷 创办于 2013 年，致力于为参加 noip、noi、acm 的选手提供清爽、快捷的编程体验 牛客网 中国最大的 IT 题库 C 语言网 在这里可以参加包括 ACM、NOI 在内的各种 C/C++/java 程序比赛，也可以 DIY 举办各类程序比赛活动！ 计蒜客 计蒜客 OI 题库致力于为参加 noi、noip、信息学竞赛的选手提供优秀的 Online Judge 系统 高校平台 POJ 北京大学程序在线评测系统 FDU OJ 复旦大学程序在线评测系统 TJ OJ 同济大学程序在线评测系统 USTC OJ 中国科学技术大学程序在线评测系统 ZOJ 浙江大学程序在线评测系统 HDU OJ 杭州电子科技大学程序在线评测系统 CSU-ACM 中南大学程序在线评测系统 HOJX 哈尔滨工业大学程序在线评测系统 HRBUST OJ 哈尔滨理工大学程序在线评测系统 PowerOJ 西南科技大学程序在线评测系统 SCU OJ 四川大学程序在线评测系统 FZU CoidngOJ 福州大学程序在线评测系统 NBUT OJ 宁波工程学院程序在线评测系统 Lutece 电子科技大学程序在线评测系统 武汉大学 ACM 协会 武汉大学 ACM 协会 ZJUT OJ 浙江工业大学程序在线评测系统 游戏编程 CheckiO 面向初学者和高级程序员的编码游戏，使用 Python 和 JavaScript 解决棘手的挑战和有趣的任务，从而提高您的编码技能 Coding Games 支持包括 PHP、C、JavaScript 在内的 20 多种编程语言。用户界面功能强大，可以定制 Codewars 一个外国的在线练习编程的网站，做题的过程类似打怪，做题升级，而且可以看到别人的解法，里面有很多巧妙的写法可以学习 CodeCombat 一个面向学生的游戏和 CS 学习平台。这是一个社区项目，有数百玩家自愿提供支持。支持语言包括 Java、JS、Python、Lua、CoffeeScript Screeps 在游戏中学习 JavaScript。世界上第一款针对程序员的 MMO 沙盒游戏 VIM Adventures 玩游戏的时候学 VIM Cyber-Dojo 一个提供给程序员们练习写程序的地方。支持语言包括 JavaScript、Java、Python、PHP、Ruby 和很多其他语言 Elevator Saga 电梯编程游戏，跟随关卡解决所有挑站，使用语言为 JavaScript Ruby Quiz 一个 Ruby 程序员提供的每周编程挑战项目 hacker.org 这项挑战由一系列本设计来强化你黑客技巧的解密、诡计、测试、烧脑环节组成。想要通关本系列，你必须学会解密、编码、渗透 Ruby Warrior 玩游戏学 Ruby，通过 Ruby 脚本来控制一个 Warrior 通过每一关，每一关的代码难度都会有所增加，使玩家逐渐了解 Ruby 基本的函数、控制、变量、数组等语言特性的用法 文档资料 Python 官方文档 Python 官方文档 Python 标准库 Python 标准库 Python Requests Python Requests 文档 Python Urllib Python Urllib 文档 Python Selenium Python Selenium 中文翻译文档 正则表达式 Python 正则表达式官方文档 Beautiful Soup Beautiful Soup 文档 Scrapy Scrapy 爬虫框架官方文档 PySpider PySpider 爬虫框架官方文档 Matplotlib Matplotlib 2D 绘图库 官方中文文档 Numpy Numpy 科学计算 官方中文文档 Pandas Pandas 结构化数据分析 官方中文文档 博客收藏 廖雪峰 廖雪峰的官方网站 - 研究互联网产品和技术，提供原创中文精品教程 崔庆才 崔庆才的个人博客，专注 PHP,Python, 爬虫，深度学习，机器学习，数据分析 莫烦 Python 专注 Python、机器学习、深度学习 唐松 专注 Python 网络爬虫，数据科学，数据挖掘，数据分析 捕蛇者说 编程、程序员、Python FxxkPython 学习 python 的正确姿势 wistbean Python 大佬 Piglei Python 大佬 TendCode Python 大佬 追梦人物的博客 Python Django 大佬 the5fire 《Django 企业开发实战》作者，关注 Python、Django、Vim、Linux、Web 开发 小明明 S À DOMICILE 《Python Web 开发实战》作者，Python 大佬 Python 之禅 Python 大佬 Python 知识圈 Python 知识圈 - 实用的 Python 教程网站 Python 教程网 小詹学 Python，专注 Python 学习 烂笔头 j_hao104 Python 大佬 咸鱼日常 专注 Python 爬虫，有许多 JS 逆向文章 AnSheng Python 全栈大佬 夏溪辰 云栖社区特邀爬虫工程师，Python 大佬 高级农民工 Python 大佬 云爬虫技术研究笔记 Lateautumn4lin 爬虫开发工程师，多年反爬虫破解经验，沉迷数据分析和黑客增长，CSDN 博客专家，华为云享专家 云爬虫技术研究笔记 (CSDN) Lateautumn4lin 爬虫开发工程师，多年反爬虫破解经验，沉迷数据分析和黑客增长，CSDN 博客专家，华为云享专家 Jack Cui CSDN 博客专家，Python 大佬 学习资源 Python 爬虫人工智能学习教程 Python 爬虫人工智能学习教程分享 Python 中文学习大本营 Python 中文学习大本营 Python 资源大全中文版 Python 资源大全中文版 爱湃森 各种 Python 教程 组织社区 PyChina Python 中国社区 PyCon China 中国 Python 开发者大会 蠎周刊 蠎周刊 - 汇集全球蠎事儿 爬虫相关 镀金的天空 GlidedSky 镀金的天空，在线爬虫练习题库 夜幕爬虫安全论坛 一个专注于爬虫与 PC/Web/ 移动端安全领域技术交流的社区，社区由夜幕团队 NightTeam 创办，旨在提升开发者对爬虫与软件安全防护的理解 西刺免费代理 IP 每日更新免费 HTTP 代理，所有代理均为 6675 端口高匿代理，可隐藏 IP 爬虫 IP 代理池 爬虫 IP 代理池 云打码 采用全球领先的秒传识别系统，50% 图片零秒识别，人工平均处理时间 0-3 秒 超级鹰 专业的验证码云端识别服务，让验证码识别更快速、更准确、更强大 八爪鱼采集器 一款使用简单、功能强大的网络爬虫工具，完全可视化操作，无需编写代码，内置海量模板，支持任意网络数据抓取 Python 逆向 Python 逆向相关资源 Python 爬虫集合 Python 爬虫集合 Python 入门网络爬虫之精华版 Python 入门网络爬虫之精华版 爬虫项目进阶实战 Python3 爬虫项目进阶实战、JS 加解密、逆向教程、css 加密、字体加密 Python 模拟登陆一些大型网站 Python 模拟登陆一些大型网站 系统化学习 Python 爬虫 系统化学习 Python 爬虫 Python3 网络爬虫实战 Python3 网络爬虫实战 在线视频 腾讯课堂 腾讯推出的专业在线教育平台，聚合大量优质教育机构和名师 网易云课堂 网易旗下一个专注职业技能提升的在线学习平台。立足于实用性的要求，与多家教育培训机构和行业的专家、讲师建立合作 中国大学 MOOC 中国大学 MOOC (慕课)，国家精品课程在线学习平台 黑马程序员 致力于培养中级程序员，是业内以口碑闻名的 IT 教育培训机构 课工场 更可靠的 IT 就业教育平台，针对大学生量身定制人工智能、大数据、云计算、区块链、Java 大数据开发等大学生 IT 培训课程 极客学院 极客学院作为中国专业 IT 职业在线教育平台，拥有海量高清 IT 职业课程，涵盖 30 + 个技术领域 慕课网 慕课网（IMOOC）是 IT 技能学习平台。慕课网 (IMOOC) 提供了丰富的移动端开发、php 开发、web 前端、android 开发以及 html5 等视频教程资源公开课 尚硅谷 尚硅谷 Java 培训，谷粉与老学员为你推荐的 Java 培训、Web 前端培训、前端培训、大数据培训、Python 培训；0 基础入学，学员就业起薪屡创新高！ 实验楼 国内领先的 IT 在线编程及在线实训学习平台，专业导师提供精选的实践项目，创新的技术使得学习者无需配置繁琐的本地环境，随时在线流畅使用 优达学城 Udacity 是来自硅谷的前沿技术平台，为广大学子提供 WEB 前端开发、Python/JAVA 编程、IOS/Android 开发、人工智能开发等一系列在线课程及实战项目，满足学员灵活的学习需求 51CTO 学院 51CTO 学院 IT 职业在线教育平台是依托 12 年行业品牌、1400 万 IT 技术用户建立的专业 IT 技能学习培训平台，已签约 1000 多位技术专家发布了 12 万个自学式实战视频教程 CSDN 学院 CSDN 学院作为 IT 在线教育平台，涵盖人工智能、考试认证、移动开发、大数据技术领域职业课程 老男孩 IT 教育 隶属北京一天天教育科技有限公司，是一直专注于 Linux 培训、Linux 系统及架构师培训、Python 培训、网络安全培训，大数据实战的高端培训机构 千锋教育 千锋教育 - 坚持教育初心，坚持面授品质，IT 培训良心品牌 博客论坛 鱼 C 工作室 鱼 C 工作室 - 免费编程视频教学 | Python 教学 | Web 开发教学 | 全栈开发教学 | C 语言教学 | 汇编教学 | Win32 开发 | 加密与解密 | Linux 教学 吾爱破解 致力于软件安全与病毒分析的前沿，丰富的技术版块交相辉映，由无数热衷于软件加密解密及反病毒爱好者共同维护 廖雪峰 廖雪峰的官方网站 - 研究互联网产品和技术，提供原创中文精品教程 崔庆才 崔庆才的个人博客，专注 PHP,Python, 爬虫，深度学习，机器学习，数据分析 莫烦 Python 专注 Python、机器学习、深度学习 唐松 专注 Python 网络爬虫，数据科学，数据挖掘，数据分析 阮一峰 上海财经大学世界经济博士研究生，计算机科普博主，对自由软件有着坚定不移的信念 学习平台 菜鸟教程 提供了编程的基础技术教程，介绍了 HTML、CSS、Javascript、Python，Java，Ruby，C，PHP , MySQL 等各种编程语言的基础知识 W3school 领先的 Web 技术教程 C 语言网 C 语言网 - 领先实用的编程在线学习网站 前端网 前端网，最好的自学 web 前端网站 牛客网 牛客网 - 互联网求职神器和备考学习平台 How2J How2J 的 Java 教程，内容涵盖 J2SE、WEB 前端、J2EE、框架技术等全面的 Java 内容 站长工具 新浪短网址 多种后缀短网址生成 百度短网址 百度旗下专业的网址缩短服务 站长工具 - 站长之家 站长工具，SEO 工具，权重查询，收录查询，PR 查询，ICP 备案查询，whois 查询，友情链接查询，反向链接查询，网站测试，IP 查询，Alexa 查询 阿里云 whois 查询 whois 查询，域名 whois, 域名注册信息，whois 查询工具，whois 信息，域名信息 NnameBeta 国际域名搜索、域名注册、国别域名注册、域名比价 Domcomp 域名比价，Domain Name Price and Availability. 仿站工具箱 在线仿站工具箱 超级 SEO 外链工具 网站自动化宣传机器 / 免费的超级外链工具可批量增加外链 百度站长平台 百度搜索资源平台 - 让网站更具价值 搜狗站长平台 搜狗站长平台 - 全面掌握在搜狗搜索中的数据表现 360 站长平台 360 站长平台 - 给网站带来更多流量和展现 Google 站长平台 Google 网站站长 - 支持、学习、互动交流和 Search Console – Google Bing 网站管理员工具 Bing 网站管理员工具 百度广告联盟 百度广告联盟为您的流量增值 Google AdSense Google 广告平台 百度统计 百度统计 — 最大的中文网站分析平台 友盟 + 国内领先的第三方全域数据智能服务商 ICP/IP 地址 / 域名信息备案管理系统 工业和信息化部 ICP/IP 地址 / 域名信息备案管理系统 全国互联网安全管理服务平台 公安备案网 - 全国互联网安全管理服务平台 IT 工具箱 在线工具 - 程序员的工具箱 站长工具、代码格式化、压缩、加密、解密、下载链接转换等 在线工具 - OSCHINA.NET 社区 常用文档、常用对照表、代码处理、Html/Js/Css 工具、加密 / 转码工具等 记磊工具箱 Dns 检测、CSS 格式化、超级 Ping、端口扫描等 孟坤工具箱 css 一键美化、文本差异比较、代码高亮等 Syntax Highlight Syntax Highlight Code In Word Documents，在 Word 文档中插入漂亮的代码 Text to ASCII Art Generator Text to ASCII Art Generator，字符串转成 ASCII 码图案 MDEditor 开源在线 Markdown 编辑器 临时邮箱 匿名注册不常用的网站 / 论坛，保护隐私免骚扰 SM.MS SM 免费图床，每个文件最大支持 5MB 路过图床 免费公共图床，支持最大 10MB、批量上传 Greasy Fork 安全、实用的用户脚本大全 Hello World 大全 收集了大约 481 种 Hello World 程序，涵盖了目前已知的所有编程语言，另加上 67 人类语言 动画展示各种路径搜索算法 动画展示各种路径搜索算法 IT eBooks 可以下载 IT 电子书籍的网站（英文） GEEKTyper 在线模拟黑客工作的虚拟桌面系统，提供多种黑客工作的场景 免费计算机编程类中文书籍 免费计算机编程类中文书籍 EaseUS Partition Master 磁盘分区管理软件，不用重装系统，就可以重新划分磁盘空间 文件处理 Convertio 在线文件转换工具，支持超过 309 种不同的文档、图像、电子表格、电子书、文档、演示文稿、音频和视频格式 Office-Converter 免费在线转换视频，在线音频转换，在线图形转换，在线文档转换和在线压缩格式 TinyPNG PNG/JPG 图片在线压缩利器 Squoosh Google 开源在线压缩、调整工具，支持 WebP ILoveIMG 永远免费的在线图片处理工具，可在线编辑，压缩、裁剪、转换、水印等 Smallpdf Smallpdf - A Free Solution to all your PDF Problems,PDF 压缩、转换、分割、合并等 PHOTOMOSH 故障艺术在线生成，可以输出 jpg、gif 和视频 稿定抠图 免费在线抠图软件，图片快速换背景 - 抠白底图 U 钙网 完全免费的 LOGO 在线设计制作工具 SVGOMG SVG 在线压缩平台 在线图片透明圆角处理 在线图片透明圆角处理 草料二维码 国内创建二维码在线应用 Logaster 在线免费创建简单 logo 及名片设计 Preloaders Loading 懒加载动画在线制作 Loading 制作 GIF、SVG、CSS 加载动画图标 waifu2x 图片智能无损放大 2 倍，适合动漫、插画等 智图 腾讯 ISUX 前端团队开发的一个专门用于图片压缩和图片格式转换的平台 音乐免费下载 全网音乐免费下载工具 OK 资源采集 OK 资源采集 - 最新影视资源大全 网易见外工作台 针对视频、图片、文档、音频都可以进行翻译转写操作，每天两小时免费使用 HiPDF 一站式解决所有 PDF 相关的问题 视频鱼 在线下载各大网站视频的网站 ScreenToGif 开源、轻量级却非常强大的录屏软件，快速将屏幕录制成高清 GIF 设计素材 Iconfont 阿里巴巴矢量图标库，提供矢量图标下载、在线存储、格式转换等功能 Font Awesome 一个基于 CSS 和 LESS 的字体和图标工具包 Flaticon 海量扁平化免费的图标库 icons8 独特系统平台风格和 web 图标库，下载免费图标，音乐 千图网 海量原创设计模板免费下载 昵图网 国内海量平面免费素材下载 千库网 免费 png 图片背景素材下载 Pexels 才华横溢的摄影作者在这里免费分享最精彩的素材照片和视频 必应壁纸 必应每日高清壁纸 Piqsels 精美的免版税图库 私藏字体 优质字体免费下载站 第一 PPT 网 免费 PPT 模板下载 吾道幻灯片 全新的 office 生产力工具，支持演示文稿、PPT 模板、协同办公，可以帮助用户轻松创建具有视觉吸引力的幻灯片 Mixkit 免费、高质量、可商用的视频素材分享网站 The Stocks 对各大图片网站进行整合，免费优质图片下载 极简壁纸 高质量精品壁纸网站 NASA Image and Video Library 美国国家航天局的官方库，从此太空类的素材再也不是问题 Unsplash 质量超高的免费图片素材库，无需注册，直接下载 WordArt 文字云工具 效率软件 分流抢票 全程自动抢票，自动抢候补，自动识别验证码，多线程秒单、稳定捡漏，支持多天、多车次、多席别、多乘客等功能 PanDownload 百度网盘下载神器 Quicker 为常用操作建立捷径，PC 快捷动作面板，让效率触手可及！ 万彩办公大师 免费、轻松处理文档 / 音视频 / 图片的工具 LICEcap 简洁易用的动画屏幕录制软件，它可将屏幕录像的内容直接保存为高质量（每帧颜色数量可超过 256）GIF 动态图片格式 Snipaste 简单但强大的截图工具，支持截图 + 贴图 FSCapture 一个强大的，轻量级的，功能齐全的屏幕捕获工具 Everything 速度最快的的文件搜索工具 DeskPins 顶置任意窗口 TrafficMonitor 一个用于显示当前网速、CPU 及内存利用率的桌面悬浮窗软件 PicGo 由 electronic-vue 构建的简单而精美的图片上传工具 PowerToys 微软为 Windows 系统推出的一系列免费实用小工具合集 Dism++ 一款根据微软底层的架构结构设计的一个系统维护工具，全球第一款基于 CBS 的 Dism GUI 实现 ColorPix 屏幕取色小工具 CCleaner 一款免费的系统优化和隐私保护工具 GifCam 集录制与剪辑为一体的屏幕 GIF 动画制作工具，录制后的动画可以逐帧编辑 EV 录屏 一款免费并且不添加水印的录屏工具 Fliqlo 一款极简主义的时钟屏保软件 Fences 栅栏管理桌面，使桌面更加整洁有条理 Q-dir 多窗口文件整理工具 WGestures 鼠标手势工具 XMind 一个全功能的思维导图和头脑风暴软件 速盘 免登录，自动查询提取码，极速的度盘下载工具 f.lux 国外开源的护眼软件，通过根据时间调节屏幕颜色，减少蓝光对视力的影响 云服务商 阿里云 阿里云 - 为了无法计算的价值 腾讯云 腾讯云 - 产业智变 云启未来 百度云 百度云 - 计算无限可能 华为云 华为云 - + 智能，见未来 京东云 京东云 - 遇见无限可能 西部数码 西部数码 - 云服务器、虚拟主机、域名注册 17 年知名云计算服务提供商！ 景安云 景安云 - 专业的数据中心服务商 七牛云 七牛云 - 国内领先的企业级云服务商 又拍云 又拍云 - 加速在线业务 - CDN - 云存储 美橙互联 美橙互联 - 域名注册、企业建站、云服务器、企业网络推广整体解决方案服务商！ UCloud UCloud - 中立 安全 可信赖的云计算服务商 AWS AWS 云服务 - 专业的大数据和云计算服务以及云解决方案提供商 Microsoft Azure Azure. Invent with purpose. GoDaddy GoDaddy - 提供域名注册和互联网主机服务的美国公司 Cloudflare Cloudflare - 网络性能和安全公司 jsDelivr jsDelivr - A free, fast, and reliable Open Source CDN for npm and GitHub 众包平台 猿急送 专注于 IT 众包领域，职位内容大多集中于 UI 设计、产品设计、程序开发、产品运营等需求 开源众包 开源中国旗下外包网站，项目大多是团队的整包项目，适合多人组团接单 外包大师 PMCAFF 旗下的一个众包开发平台，目前以技术开发为主，以众包开发和自有开发相结合形式运营 人人开发 集可视化开发，应用市场，威客众包，PaaS 云于一体的企业级应用服务平台 快码 提供智能硬件、各种智能共享项目解决方案，为互联网创业者提供 APP、小程序、公众号开发。 我爱方案网 专注于硬件类外包，电子方案开发供应链众包平台，软件外包，方案，硬件开发方案，硬件设计开发 英选 提供可信赖的定制开发外包服务，包括企业品牌官网、电商系统及创新定制产品开发 智筹 为企业 &amp; 创业者提供互联网高级人才直租服务。按次直租，解决临时、突发问题；按月直租，建立长期兼职合作；按任务直租，解决有明确预算的外包任务 开发邦 互联网软件定制开发与软件外包开发服务，十年互联网软件定制开发经验 码市 Coding 推出的互联网软件外包服务平台，意在连接需求方与广大开发者。让项目的需求方快速的找到合适的开发者，完成项目开发工作 自由职客 自由职客是权威的 IT 互联网行业灵活用工交易平台，外包，众包，兼职，招聘，erp，sap 解放号 解放号众包平台提供软件开发外包、人力驻场服务等软件项目外包服务。解放号的软件项目交付全流程可视化监控与全生命周期管理能力 程序员客栈 领先的程序员自由工作平台，38 万 + 优秀开发者，您的专属云端开发团队，BAT 级别的开发者，标准化的服务和交付 码易 智网易联旗下 IT 软件服务平台，集软件商城、企业应用、电商软件、crm 软件、商务服务平台于一体的一站式软件外包开发服务平台 电鸭社区 电鸭社区旨在推动自由工作方式在国内渐进式发展，区别于传统方式的工作职位，倡导「只工作，不上班」的工作心态 Sxsoft 中国最早的外包服务平台，18 年口碑服务，20 万程序员、100 + 专业软件开发公司，专注解决各类软件开发需求 实现网 为企业提供 BAT 等名企背景的、靠谱的开发设计兼职人才和自由职业者，满足企业项目外包、驻场开发、远程兼职、技术咨询等短期人力需求 智城外包网 零佣金开发资源平台，认证担保，全程无忧，专业的软件外包网和项目外包、项目开发、人力外派、短期招聘、人力资源交易平台 更多导航 创造狮导航 创造狮，一个创意工作者的导航，专注分享正版优质设计、前端、产品、运营的书签导航，设计教程、设计规范、颜色搭配、灵感创意、前端框架、开发者工具、互联网新品推荐、运营数据分析、自媒体和工具利器好用的分类导航大全 大数据导航 大数据导航，以大数据产业为主，大数据工具为辅，给用户提供一个更加快速找到大数据相关的工具平台 优设导航 优设网站导航为设计师提供 ps 教程、UI 设计、素材下载、高清图库、配色方案、用户体验、网页设计等全方位设计师网站导航指引 牛导航 实用工具导航 聚 BT 聚 BT - 聚合最优质的 BT、磁力资源 ShareHub ShareHub - 资源和工具的集合 狼牌工作网址导航 工具，资源，方法，All IN ONE 的办公工作网址导航 $(document).ready(function() { $(document).on('click', '.has-sub', function(){ var _this = $(this) if(!$(this).hasClass('expanded')) { setTimeout(function(){ _this.find('ul').attr(\"style\",\"\") }, 300); } else { $('.has-sub ul').each(function(id,ele){ var _that = $(this) if(_this.find('ul')[0] != ele) { setTimeout(function(){ _that.attr(\"style\",\"\") }, 300); } }) } }) $('.user-info-menu .hidden-sm').click(function(){ if($('.sidebar-menu').hasClass('collapsed')) { $('.has-sub.expanded > ul').attr(\"style\",\"\") } else { $('.has-sub.expanded > ul').show() } }) $(\"#main-menu li ul li\").click(function() { $(this).siblings('li').removeClass('active'); // 删除其他兄弟元素的样式 $(this).addClass('active'); // 添加当前元素的样式 }); $(\"a.smooth\").click(function(ev) { ev.preventDefault(); public_vars.$mainMenu.add(public_vars.$sidebarProfile).toggleClass('mobile-is-visible'); ps_destroy(); $(\"html, body\").animate({ scrollTop: $($(this).attr(\"href\")).offset().top - 30 }, { duration: 500, easing: \"swing\" }); }); return false; }); var href = \"\"; var pos = 0; $(\"a.smooth\").click(function(e) { $(\"#main-menu li\").each(function() { $(this).removeClass(\"active\"); }); $(this).parent(\"li\").addClass(\"active\"); e.preventDefault(); href = $(this).attr(\"href\"); pos = $(href).position().top - 30; }); !function(e){var c=Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\"));function i(){for(var r=0;r"}],"posts":[{"title":"数电学习・格雷码","slug":"Blog-21","date":"2021-02-22T16:00:18.000Z","updated":"2021-02-22T16:00:21.000Z","comments":true,"path":"posts/e7d047d4.html","link":"","permalink":"https://kangblogs.top/posts/e7d047d4.html","excerpt":"","text":"前言 格雷码（Gray Code）又被称反射二进制码（Reflected Binary Code）或（Reflected Binary），是由贝尔实验室的 Frank Gray 在 1940 年提出，用于在 PCM（脉冲编码调变）方法传送讯号时防止出错，并于 1953 年 3 月 17 日取得美国专利。格雷码是一个数列集合，相邻两数间只有一个位元改变，为无权数码，且格雷码的顺序不是唯一的。","categories":[],"tags":[{"name":"数电","slug":"数电","permalink":"https://kangblogs.top/tags/%E6%95%B0%E7%94%B5/"},{"name":"格雷码","slug":"格雷码","permalink":"https://kangblogs.top/tags/%E6%A0%BC%E9%9B%B7%E7%A0%81/"}]},{"title":"今日校园自动提交・AUST","slug":"Blog-20","date":"2021-01-15T16:54:43.000Z","updated":"2021-03-18T13:43:21.000Z","comments":true,"path":"posts/e157cbc8.html","link":"","permalink":"https://kangblogs.top/posts/e157cbc8.html","excerpt":"","text":"由于子墨大佬的教程已足够详细，不再赘叙。传送门：教程。此只提供文件以减少校友配置的时间。 更新 时间 更新内容 2021.03.18 添加 UAheaders = { 'User-Agent': 'Mozilla/5.0 (iPad; U; CPU OS 3_2_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B500 Safari/531.21.10' } 2021.01.31 “辅导员满意度测评”😀😀😀 2021.01.22 删除 Server 酱通知 2021.01.18 删除多余参数 user['user']['email'] 2021.01.16 新添 Submit 版本 说明 此为 AUST（安徽理工大学）专版。其实就是为了方便校友 基于腾讯云函数 使用了自建 api。大佬造好的轮子。 新增消息通知 Server 酱 新增消息通知 Qmsg 酱 所用代码config.ymlgenerate.pyindex.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#登陆相关配置login: #开放的模拟登陆api服务器地址 api: \"http://121.196.172.243:8080/wisedu-unified-login-api-v1.0/api/login\"#用户组配置users: #单个用户配置 - user: #username 学号或者工号 username: '2019******' #password 密码 password: '*************' #address 地址，定位信息 address: 中国**省**市 #email 接受通知消息的邮箱 email: ************@qq.com #lon 当前位置经度，可以访问http://zuobiao.ay800.com/s/27/index.php获取 lon: '11*.******' #lat 当前位置纬度 lat: '3*.******' #school 学校全称 school: 安徽理工大学#今日校园相关配置cpdaily: #表单组默认选项配置 defaults: #表单默认选项配置，按顺序，注意，只有标必填项的才处理，不会配置就执行generate.py - default: title: 今天你的所在地是？ type: 1 value: **省/**市/**市 - default: title: 今天你的体温是多少？ type: 2 value: 37.2℃及以下 - default: title: 今天你的身体状况是？ type: 2 value: 健康 - default: title: 近14天你或你的共同居住人是否有疫情中、高风险区域人员接触史？ type: 2 value: 否 - default: title: 近14天你或你的共同居住人是否和确诊、疑似病人接触过？ type: 2 value: 否 - default: title: 近14天你或你的共同居住人是否是确诊、疑似病例？ type: 2 value: 否 - default: title: 你或你的共同居住人目前是否被医学隔离？ type: 2 value: 否 - default: title: 今天你当地的健康码颜色是？ type: 2 value: 绿色 - default: title: 本人是否承诺以上所填报的全部内容均属实、准确，不存在任何隐瞒与不实的情况，更无遗漏之处 type: 2 value: 是123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263# -*- coding: utf-8 -*-import index as appimport yaml# 生成默认配置def generate(): config = app.config user = config['users'][0] apis = app.getCpdailyApis(user) session = app.getSession(user, apis['login-url']) form = dict(app.queryForm(session, apis))['form'] # app.log(form) defaults = [] sort = 1 for formItem in form: if formItem['isRequired'] == 1: default = {} one = {} default['title'] = formItem['title'] default['type'] = formItem['fieldType'] print('问题%d：' % sort + default['title']) if default['type'] == 1 or default['type'] == 5: default['value'] = input(\"请输入文本：\") if default['type'] == 2: fieldItems = formItem['fieldItems'] num = 1 for fieldItem in fieldItems: print('\\t%d ' % num + fieldItem['content']) num += 1 choose = int(input(\"请输入序号：\")) if choose &lt; 1 or choose &gt; num: print('输入错误，请重新执行此脚本') exit(-1) default['value'] = fieldItems[choose - 1]['content'] if default['type'] == 3: fieldItems = formItem['fieldItems'] num = 1 for fieldItem in fieldItems: print('\\t%d ' % num + fieldItem['content']) num += 1 chooses = list(map(int, input('请输入序号（可输入多个，请用空格隔开）：').split())) default['value'] = '' for i in range(0, len(chooses)): choose = chooses[i] if choose &lt; 1 or choose &gt; num: print('输入错误，请重新执行此脚本') exit(-1) if i != len(chooses) - 1: default['value'] += fieldItems[choose - 1]['content'] + ',' else: default['value'] += fieldItems[choose - 1]['content'] if default['type'] == 4: default['value'] = input(\"请输入图片名称：\") one['default'] = default defaults.append(one) sort += 1 print('======================分隔线======================') print(yaml.dump(defaults, allow_unicode=True))if __name__ == \"__main__\": generate()123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369# -*- coding: utf-8 -*-import sysimport requestsimport jsonimport yamlimport oss2from urllib.parse import urlparsefrom datetime import datetime, timedelta, timezonefrom urllib3.exceptions import InsecureRequestWarningimport smtplibfrom email.mime.text import MIMETextfrom email.utils import formataddr# debug模式debug = Falseif debug: requests.packages.urllib3.disable_warnings(InsecureRequestWarning)# 读取yml配置def getYmlConfig(yaml_file='config.yml'): file = open(yaml_file, 'r', encoding=\"utf-8\") file_data = file.read() file.close() config = yaml.load(file_data, Loader=yaml.FullLoader) return dict(config)# 全局配置config = getYmlConfig(yaml_file='config.yml')# 获取今日校园apidef getCpdailyApis(user): headers = { 'User-Agent': 'Mozilla/5.0 (iPad; U; CPU OS 3_2_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B500 Safari/531.21.10' } apis = {} user = user['user'] schools = requests.get(url='https://mobile.campushoy.com/v6/config/guest/tenant/list', headers=headers, verify=not debug).json()[ 'data'] flag = True for one in schools: if one['name'] == user['school']: if one['joinType'] == 'NONE': log(user['school'] + ' 未加入今日校园') exit(-1) flag = False params = { 'ids': one['id'] } res = requests.get(url='https://mobile.campushoy.com/v6/config/guest/tenant/info', params=params, headers=headers, verify=not debug) data = res.json()['data'][0] joinType = data['joinType'] idsUrl = data['idsUrl'] ampUrl = data['ampUrl'] if 'campusphere' in ampUrl or 'cpdaily' in ampUrl: parse = urlparse(ampUrl) host = parse.netloc res = requests.get(parse.scheme + '://' + host) parse = urlparse(res.url) apis[ 'login-url'] = idsUrl + '/login?service=' + parse.scheme + r\"%3A%2F%2F\" + host + r'%2Fportal%2Flogin' apis['host'] = host ampUrl2 = data['ampUrl2'] if 'campusphere' in ampUrl2 or 'cpdaily' in ampUrl2: parse = urlparse(ampUrl2) host = parse.netloc res = requests.get(parse.scheme + '://' + host) parse = urlparse(res.url) apis[ 'login-url'] = idsUrl + '/login?service=' + parse.scheme + r\"%3A%2F%2F\" + host + r'%2Fportal%2Flogin' apis['host'] = host break if flag: log(user['school'] + ' 未找到该院校信息，请检查是否是学校全称错误') exit(-1) log(apis) return apis# 获取当前utc时间，并格式化为北京时间def getTimeStr(): utc_dt = datetime.utcnow().replace(tzinfo=timezone.utc) bj_dt = utc_dt.astimezone(timezone(timedelta(hours=8))) return bj_dt.strftime(\"%Y-%m-%d %H:%M:%S\")# 输出调试信息，并及时刷新缓冲区def log(content): print(getTimeStr() + ' ' + str(content)) sys.stdout.flush()# 登陆并返回sessiondef getSession(user, loginUrl): user = user['user'] params = { 'login_url': loginUrl, # 保证学工号和密码正确下面两项就不需要配置 'needcaptcha_url': '', 'captcha_url': '', 'username': user['username'], 'password': user['password'] } cookies = {} # 借助上一个项目开放出来的登陆API，模拟登陆 res = requests.post(config['login']['api'], params, verify=not debug) cookieStr = str(res.json()['cookies']) log(cookieStr) if cookieStr == 'None': log(res.json()) return None # 解析cookie for line in cookieStr.split(';'): name, value = line.strip().split('=', 1) cookies[name] = value session = requests.session() session.cookies = requests.utils.cookiejar_from_dict(cookies) return session# 查询表单def queryForm(session, apis): host = apis['host'] headers = { 'Accept': 'application/json, text/plain, */*', 'User-Agent': 'Mozilla/5.0 (Linux; Android 4.4.4; OPPO R11 Plus Build/KTU84P) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Safari/537.36 yiban/8.1.11 cpdaily/8.1.11 wisedu/8.1.11', 'content-type': 'application/json', 'Accept-Encoding': 'gzip,deflate', 'Accept-Language': 'zh-CN,en-US;q=0.8', 'Content-Type': 'application/json;charset=UTF-8' } queryCollectWidUrl = 'https://{host}/wec-counselor-collector-apps/stu/collector/queryCollectorProcessingList'.format( host=host) params = { 'pageSize': 6, 'pageNumber': 1 } res = session.post(queryCollectWidUrl, headers=headers, data=json.dumps(params), verify=not debug) if len(res.json()['datas']['rows']) &lt; 1: return None collectWid = res.json()['datas']['rows'][0]['wid'] formWid = res.json()['datas']['rows'][0]['formWid'] detailCollector = 'https://{host}/wec-counselor-collector-apps/stu/collector/detailCollector'.format( host=host) res = session.post(url=detailCollector, headers=headers, data=json.dumps({\"collectorWid\": collectWid}), verify=not debug) schoolTaskWid = res.json()['datas']['collector']['schoolTaskWid'] getFormFields = 'https://{host}/wec-counselor-collector-apps/stu/collector/getFormFields'.format( host=host) res = session.post(url=getFormFields, headers=headers, data=json.dumps( {\"pageSize\": 100, \"pageNumber\": 1, \"formWid\": formWid, \"collectorWid\": collectWid}), verify=not debug) form = res.json()['datas']['rows'] return {'collectWid': collectWid, 'formWid': formWid, 'schoolTaskWid': schoolTaskWid, 'form': form}# 填写formdef fillForm(session, form, host): sort = 1 for formItem in form[:]: # 只处理必填项 if formItem['isRequired'] == 1: default = config['cpdaily']['defaults'][sort - 1]['default'] if formItem['title'] != default['title']: log('第%d个默认配置不正确，请检查' % sort) exit(-1) # 文本直接赋值 if formItem['fieldType'] == 1 or formItem['fieldType'] == 5: formItem['value'] = default['value'] # 单选框需要删掉多余的选项 if formItem['fieldType'] == 2: # 填充默认值 formItem['value'] = default['value'] fieldItems = formItem['fieldItems'] for i in range(0, len(fieldItems))[::-1]: if fieldItems[i]['content'] != default['value']: del fieldItems[i] # 多选需要分割默认选项值，并且删掉无用的其他选项 if formItem['fieldType'] == 3: fieldItems = formItem['fieldItems'] defaultValues = default['value'].split(',') for i in range(0, len(fieldItems))[::-1]: flag = True for j in range(0, len(defaultValues))[::-1]: if fieldItems[i]['content'] == defaultValues[j]: # 填充默认值 formItem['value'] += defaultValues[j] + ' ' flag = False if flag: del fieldItems[i] # 图片需要上传到阿里云oss if formItem['fieldType'] == 4: fileName = uploadPicture(session, default['value'], host) formItem['value'] = getPictureUrl(session, fileName, host) log('必填问题%d：' % sort + formItem['title']) log('答案%d：' % sort + formItem['value']) sort += 1 else: form.remove(formItem) # print(form) return form# 上传图片到阿里云ossdef uploadPicture(session, image, host): url = 'https://{host}/wec-counselor-collector-apps/stu/collector/getStsAccess'.format( host=host) res = session.post(url=url, headers={ 'content-type': 'application/json'}, data=json.dumps({}), verify=not debug) datas = res.json().get('datas') fileName = datas.get('fileName') accessKeyId = datas.get('accessKeyId') accessSecret = datas.get('accessKeySecret') securityToken = datas.get('securityToken') endPoint = datas.get('endPoint') bucket = datas.get('bucket') bucket = oss2.Bucket(oss2.Auth(access_key_id=accessKeyId, access_key_secret=accessSecret), endPoint, bucket) with open(image, \"rb\") as f: data = f.read() bucket.put_object(key=fileName, headers={ 'x-oss-security-token': securityToken}, data=data) res = bucket.sign_url('PUT', fileName, 60) # log(res) return fileName# 获取图片上传位置def getPictureUrl(session, fileName, host): url = 'https://{host}/wec-counselor-collector-apps/stu/collector/previewAttachment'.format( host=host) data = { 'ossKey': fileName } res = session.post(url=url, headers={ 'content-type': 'application/json'}, data=json.dumps(data), verify=not debug) photoUrl = res.json().get('datas') return photoUrl# 提交表单def submitForm(formWid, address, collectWid, schoolTaskWid, form, session, host): headers = { 'User-Agent': 'Mozilla/5.0 (Linux; Android 4.4.4; OPPO R11 Plus Build/KTU84P) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Safari/537.36 okhttp/3.12.4', 'CpdailyStandAlone': '0', 'extension': '1', 'Cpdaily-Extension': 'eZbW2qLZT0G0VbYqnj5mz5UCyZiuS+Mht0ro4VCSTgTancCpi4ru3IpfZibLN2Q4JR3dl7wYTXnTi5dzfAwbYcs5FB4VPqOTrcYNVjoRY9h9J7sxA1MWIWZxiEC7iuzXwAeEjrGmnHnX3P7mprZW66fbhNsIrM938cVo6aK7fgdQx6vGY7OVJBS+kqwk/xE2ipLqV0ro4QNZ9u/6G9MUbyd7QghLIM9PIRJTrd6TzoYPFBHqDHIY57dHHUBUC8RzfvreU/2o5sY=', 'Content-Type': 'application/json; charset=utf-8', # 请注意这个应该和配置文件中的host保持一致 'Host': host, 'Connection': 'Keep-Alive', 'Accept-Encoding': 'gzip' } # 默认正常的提交参数json params = {\"formWid\": formWid, \"address\": address, \"collectWid\": collectWid, \"schoolTaskWid\": schoolTaskWid, \"form\": form, \"uaIsCpadaily\": True} # print(params) submitForm = 'https://{host}/wec-counselor-collector-apps/stu/collector/submitForm'.format( host=host) r = session.post(url=submitForm, headers=headers, data=json.dumps(params), verify=not debug) msg = r.json()['message'] return msgtitle_text = '今日校园疫结果通知'# server酱通知# def sendServerChan(msg):# log('正在发送Server酱。。。')# SCKEY = \"SCU103057*****************************\" # 这里填Server酱官方提供的SCKEY# url = \"https://sc.ftqq.com/%s.send\" % (SCKEY)# res = requests.post(url, data={'text': title_text, 'desp': getTimeStr() + \"\\n\" + str(msg)})# code = res.json()['errmsg']# if code == 'success':# log('发送Server酱通知成功。。。')# else:# log('发送Server酱通知失败。。。')# log('Server酱返回结果' + code)# Qmsg酱通知def sendQmsgChan(msg): log('正在发送Qmsg酱。。。') QmsgKey = \"1aacce**********************\" # 这里填Qmsg酱官方提供的KEY url_send = \"https://qmsg.zendee.cn/send/%s\" % (QmsgKey) url_group = \"https://qmsg.zendee.cn/group/%s\" % (QmsgKey) headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36' } payload = {'msg': '%s今日校园疫情上报自动填表结果通知' % (getTimeStr() + '\\n') + '\\n' + str(msg)} res = requests.post(url_send, params=payload, headers=headers) # 私聊消息推送 res_group = requests.post(url_group, params=payload, headers=headers) # 群消息推送 sucmsg = res.json()['success'] if sucmsg == True: log('Qmsg酱通知成功') else: log('推送失败') log(res.json())def main_handler(event, context): try: for user in config['users']: log('当前用户：' + str(user['user']['username'])) apis = getCpdailyApis(user) log('脚本开始执行。。。') log('开始模拟登陆。。。') session = getSession(user, apis['login-url']) if session != None: log('模拟登陆成功。。。') log('正在查询最新待填写问卷。。。') params = queryForm(session, apis) if str(params) == 'None': log('获取最新待填写问卷失败，可能是辅导员还没有发布。。。') # sendServerChan('没有新问卷') sendQmsgChan('没有新问卷') exit(-1) log('查询最新待填写问卷成功。。。') log('正在自动填写问卷。。。') form = fillForm(session, params['form'], apis['host']) log('填写问卷成功。。。') log('正在自动提交。。。') msg = submitForm(params['formWid'], user['user']['address'], params['collectWid'], params['schoolTaskWid'], form, session, apis['host']) if msg == 'SUCCESS': log('自动提交成功！') # sendServerChan('🎉自动提交成功！o(*≧▽≦)ツ') sendQmsgChan('🎉自动提交成功！o(*≧▽≦)ツ') elif msg == '该收集已填写无需再次填写': log('今日已提交！') # sendServerChan('🤔今日已提交！') sendQmsgChan('🤔今日已提交！') else: log('自动提交失败。。。') log('错误是' + msg) # sendServerChan('自动提交失败！错误是' + str(msg)) sendQmsgChan('自动提交失败！错误是' + str(msg)) exit(-1) else: log('模拟登陆失败。。。') log('原因可能是学号或密码错误，请检查配置后，重启脚本。。。') exit(-1) except Exception as e: # sendServerChan(\"出现问题了！\" + str(e)) sendQmsgChan(\"出现问题了！\" + str(e)) raise e else: return 'success'# 配合Windows计划任务等使用if __name__ == '__main__': print(main_handler({}, {})) 层依赖 dependency.zip，点击下载 注意 在 config.yml 中添加今日校园的账户信息😀、邮箱📪、address、经纬度以及第一个问题的所在地 在 index.py 中添加自己的 SCKEY（281 行左右） 在 index.py 中添加自己的 QmsgKEY（295 行左右） 有条件的可以自建 api Congratulations!","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://kangblogs.top/tags/Python/"},{"name":"今日校园","slug":"今日校园","permalink":"https://kangblogs.top/tags/%E4%BB%8A%E6%97%A5%E6%A0%A1%E5%9B%AD/"},{"name":"云函数","slug":"云函数","permalink":"https://kangblogs.top/tags/%E4%BA%91%E5%87%BD%E6%95%B0/"}]},{"title":"今日校园自动签到・AUST","slug":"Blog-19","date":"2020-12-10T10:57:19.000Z","updated":"2021-04-17T06:42:12.000Z","comments":true,"path":"posts/2de425e.html","link":"","permalink":"https://kangblogs.top/posts/2de425e.html","excerpt":"","text":"由于子墨大佬的教程已足够详细，不再赘叙。传送门：教程 更新 时间 更新内容 2021.04.17 在填充表单函数中添加版本号 form['signVersion'] = '1.0.0' 2021.03.27 写死 apis = { 'login-url': 'https://aust.campusphere.net/iap/login?service=https%3A%2F%2Faust.campusphere.net%2Fportal%2Flogin', 'host': 'aust.campusphere.net'} 2021.03.18 添加 UAheaders = { 'User-Agent': 'Mozilla/5.0 (iPad; U; CPU OS 3_2_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B500 Safari/531.21.10' } 2021.01.10 修改 config.yml 开放的模拟登陆 api 服务器地址 (line 4)http://121.196.172.243:8080/wisedu-unified-login-api-v1.0/api/login 2021.01.06 填充表单 fillForm 函数 (line 212) 新增参数 form['uaIsCpadaily'] = True DES 加密 DESEncrypt 函数 (line 248)key 值修改为 b3L26XNL 说明 此为 AUST（安徽理工大学）专版。其实就是为了方便校友 基于腾讯云函数 使用了自建 api。大佬造好的轮子。 新增消息通知 Server 酱 新增消息通知 Qmsg 酱 所用代码config.ymlgenerate.pyindex.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#登陆相关配置login: #开放的模拟登陆api服务器地址 api: \"http://121.196.172.243:8080/wisedu-unified-login-api-v1.0/api/login\" # 有条件的可以自建#用户组配置users: #单个用户配置 - user: #username 学号或者工号 username: '' #password 密码 password: '' #address 地址，定位信息 address: 中国安徽省淮南市田家庵区 #email 接受通知消息的邮箱 email: #school 学校全称 school: 安徽理工大学 #lon 经度 lon: '117.029931' #lat 纬度 lat: '32.555161' #abnormalReason 反馈信息 abnormalReason: #photo 签到照片，不需要可不填，或者直接删除 photo: #多用户配置，将下面的注释去掉即可，如果有表单内容有图片，不建议使用多用户配置#今日校园相关配置cpdaily: #是否检查问题,true检查，false不检查 check: false #附加信息组默认选项配置，没有可留空 defaults: #附加信息组默认选项配置，按顺序，可留空 - default: title: 您目前的体温是多少 type: 2 value: 腋下温度37.3℃以下 - default: title: 有无发热、干咳等呼吸道症状 type: 2 value: 无 - default: title: 有无呕吐、腹泻等消化道症状 type: 2 value: 无 - default: title: 有无其他身体不适症状 type: 2 value: 无123456789101112131415161718192021222324252627282930313233343536373839404142434445# -*- coding: utf-8 -*-import index as appimport yamlconfig = app.config# 生成默认配置def generate(): user = config['users'][0] apis = app.getCpdailyApis(user) session = app.getSession(user, apis) params = app.getUnSignedTasks(session, apis) task = app.getDetailTask(session, params, apis) extraFields = task['extraField'] if len(extraFields) &lt; 1: app.log('没有附加问题需要填写') exit(-1) defaults = [] for i in range(0, len(extraFields)): extraField = extraFields[i] extraFieldItems = extraField['extraFieldItems'] print('额外问题%d ' % (i + 1) + extraField['title']) default = {} one = {} for j in range(0, len(extraFieldItems)): extraFieldItem = extraFieldItems[j] print('\\t%d ' % (j + 1) + extraFieldItem['content']) choose = int(input(\"请输入对应的序号：\")) if choose &lt; 1 or choose &gt; len(extraFieldItems): app.log('输入错误') exit(-1) one['title'] = extraField['title'] one['value'] = extraFieldItems[choose - 1]['content'] if extraFieldItem['isOtherItems'] == 1: text = input('\\t' + extraFieldItems[choose - 1]['content'] + '，请输入额外文本：') one['other'] = text default['default'] = one defaults.append(default) print('======================分隔线======================') print(yaml.dump(defaults, allow_unicode=True))if __name__ == \"__main__\": generate()123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362# -*- coding: utf-8 -*-import sysimport jsonimport uuidimport oss2import yamlimport base64import requestsfrom pyDes import des, CBC, PAD_PKCS5from datetime import datetime, timedelta, timezonefrom urllib.parse import urlparsefrom urllib3.exceptions import InsecureRequestWarning# debug模式debug = Falseif debug: requests.packages.urllib3.disable_warnings(InsecureRequestWarning)# 读取yml配置def getYmlConfig(yaml_file='config.yml'): file = open(yaml_file, 'r', encoding=\"utf-8\") file_data = file.read() file.close() config = yaml.load(file_data, Loader=yaml.FullLoader) return dict(config)# 全局配置config = getYmlConfig(yaml_file='config.yml')# 获取当前utc时间，并格式化为北京时间def getTimeStr(): utc_dt = datetime.utcnow().replace(tzinfo=timezone.utc) bj_dt = utc_dt.astimezone(timezone(timedelta(hours=8))) return bj_dt.strftime(\"%Y-%m-%d %H:%M:%S\")# 输出调试信息，并及时刷新缓冲区def log(content): print(getTimeStr() + ' ' + str(content)) sys.stdout.flush()# 获取今日校园apidef getCpdailyApis(user): headers = { 'User-Agent': 'Mozilla/5.0 (iPad; U; CPU OS 3_2_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B500 Safari/531.21.10' } apis = {} user = user['user'] schools = requests.get(url='https://mobile.campushoy.com/v6/config/guest/tenant/list', headers=headers, verify=not debug).json()[ 'data'] flag = True for one in schools: if one['name'] == user['school']: if one['joinType'] == 'NONE': log(user['school'] + ' 未加入今日校园') exit(-1) flag = False params = { 'ids': one['id'] } res = requests.get(url='https://mobile.campushoy.com/v6/config/guest/tenant/info', params=params, headers=headers, verify=not debug) data = res.json()['data'][0] joinType = data['joinType'] idsUrl = data['idsUrl'] ampUrl = data['ampUrl'] if 'campusphere' in ampUrl or 'cpdaily' in ampUrl: parse = urlparse(ampUrl) host = parse.netloc res = requests.get(parse.scheme + '://' + host) parse = urlparse(res.url) apis[ 'login-url'] = idsUrl + '/login?service=' + parse.scheme + r\"%3A%2F%2F\" + host + r'%2Fportal%2Flogin' apis['host'] = host ampUrl2 = data['ampUrl2'] if 'campusphere' in ampUrl2 or 'cpdaily' in ampUrl2: parse = urlparse(ampUrl2) host = parse.netloc res = requests.get(parse.scheme + '://' + host) parse = urlparse(res.url) apis[ 'login-url'] = idsUrl + '/login?service=' + parse.scheme + r\"%3A%2F%2F\" + host + r'%2Fportal%2Flogin' apis['host'] = host break if flag: log(user['school'] + ' 未找到该院校信息，请检查是否是学校全称错误') exit(-1) log(apis) return apis# 登陆并获取sessiondef getSession(user, apis): user = user['user'] params = { # 'login_url': 'http://authserverxg.swu.edu.cn/authserver/login?service=https://swu.cpdaily.com/wec-counselor-sign-apps/stu/sign/getStuSignInfosInOneDay', 'login_url': apis['login-url'], 'needcaptcha_url': '', 'captcha_url': '', 'username': user['username'], 'password': user['password'] } cookies = {} # 借助上一个项目开放出来的登陆API，模拟登陆 res = requests.post(url=config['login']['api'], data=params, verify=not debug) # cookieStr可以使用手动抓包获取到的cookie，有效期暂时未知，请自己测试 # cookieStr = str(res.json()['cookies']) cookieStr = str(res.json()['cookies']) log(cookieStr) if cookieStr == 'None': log(res.json()) exit(-1) # log(cookieStr) # 解析cookie for line in cookieStr.split(';'): name, value = line.strip().split('=', 1) cookies[name] = value session = requests.session() session.cookies = requests.utils.cookiejar_from_dict(cookies, cookiejar=None, overwrite=True) return session# 获取最新未签到任务def getUnSignedTasks(session, apis): headers = { 'Accept': 'application/json, text/plain, */*', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36', 'content-type': 'application/json', 'Accept-Encoding': 'gzip,deflate', 'Accept-Language': 'zh-CN,en-US;q=0.8', 'Content-Type': 'application/json;charset=UTF-8' } # 第一次请求每日签到任务接口，主要是为了获取MOD_AUTH_CAS res = session.post( url='https://{host}/wec-counselor-sign-apps/stu/sign/getStuSignInfosInOneDay'.format(host=apis['host']), headers=headers, data=json.dumps({}), verify=not debug) # 第二次请求每日签到任务接口，拿到具体的签到任务 res = session.post( url='https://{host}/wec-counselor-sign-apps/stu/sign/getStuSignInfosInOneDay'.format(host=apis['host']), headers=headers, data=json.dumps({}), verify=not debug) if len(res.json()['datas']['unSignedTasks']) &lt; 1: log('当前没有未签到任务') exit(-1) # log(res.json()) latestTask = res.json()['datas']['unSignedTasks'][0] return { 'signInstanceWid': latestTask['signInstanceWid'], 'signWid': latestTask['signWid'] }# 获取签到任务详情def getDetailTask(session, params, apis): headers = { 'Accept': 'application/json, text/plain, */*', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36', 'content-type': 'application/json', 'Accept-Encoding': 'gzip,deflate', 'Accept-Language': 'zh-CN,en-US;q=0.8', 'Content-Type': 'application/json;charset=UTF-8' } res = session.post( url='https://{host}/wec-counselor-sign-apps/stu/sign/detailSignInstance'.format(host=apis['host']), headers=headers, data=json.dumps(params), verify=not debug) data = res.json()['datas'] return data# 填充表单def fillForm(task, session, user, apis): user = user['user'] form = {} if task['isPhoto'] == 1: fileName = uploadPicture(session, user['photo'], apis) form['signPhotoUrl'] = getPictureUrl(session, fileName, apis) else: form['signPhotoUrl'] = '' if task['isNeedExtra'] == 1: extraFields = task['extraField'] defaults = config['cpdaily']['defaults'] extraFieldItemValues = [] for i in range(0, len(extraFields)): default = defaults[i]['default'] extraField = extraFields[i] if config['cpdaily']['check'] and default['title'] != extraField['title']: log('第%d个默认配置项错误，请检查' % (i + 1)) exit(-1) extraFieldItems = extraField['extraFieldItems'] for extraFieldItem in extraFieldItems: if extraFieldItem['content'] == default['value']: extraFieldItemValue = {'extraFieldItemValue': default['value'], 'extraFieldItemWid': extraFieldItem['wid']} # 其他，额外文本 if extraFieldItem['isOtherItems'] == 1: extraFieldItemValue = {'extraFieldItemValue': default['other'], 'extraFieldItemWid': extraFieldItem['wid']} extraFieldItemValues.append(extraFieldItemValue) # log(extraFieldItemValues) # 处理带附加选项的签到 form['extraFieldItems'] = extraFieldItemValues # form['signInstanceWid'] = params['signInstanceWid'] form['signInstanceWid'] = task['signInstanceWid'] form['longitude'] = user['lon'] form['latitude'] = user['lat'] form['isMalposition'] = task['isMalposition'] form['abnormalReason'] = user['abnormalReason'] form['position'] = user['address'] form['uaIsCpadaily'] = True form['signVersion'] = '1.0.0' return form# 上传图片到阿里云ossdef uploadPicture(session, image, apis): url = 'https://{host}/wec-counselor-sign-apps/stu/sign/getStsAccess'.format(host=apis['host']) res = session.post(url=url, headers={'content-type': 'application/json'}, data=json.dumps({}), verify=not debug) datas = res.json().get('datas') fileName = datas.get('fileName') accessKeyId = datas.get('accessKeyId') accessSecret = datas.get('accessKeySecret') securityToken = datas.get('securityToken') endPoint = datas.get('endPoint') bucket = datas.get('bucket') bucket = oss2.Bucket(oss2.Auth(access_key_id=accessKeyId, access_key_secret=accessSecret), endPoint, bucket) with open(image, \"rb\") as f: data = f.read() bucket.put_object(key=fileName, headers={'x-oss-security-token': securityToken}, data=data) res = bucket.sign_url('PUT', fileName, 60) # log(res) return fileName# 获取图片上传位置def getPictureUrl(session, fileName, apis): url = 'https://{host}/wec-counselor-sign-apps/stu/sign/previewAttachment'.format(host=apis['host']) data = { 'ossKey': fileName } res = session.post(url=url, headers={'content-type': 'application/json'}, data=json.dumps(data), verify=not debug) photoUrl = res.json().get('datas') return photoUrl# DES加密def DESEncrypt(s, key='b3L26XNL'): key = key iv = b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\" k = des(key, CBC, iv, pad=None, padmode=PAD_PKCS5) encrypt_str = k.encrypt(s) return base64.b64encode(encrypt_str).decode()# 提交签到任务def submitForm(session, user, form, apis): user = user['user'] # Cpdaily-Extension extension = { \"lon\": user['lon'], \"model\": \"OPPO R11 Plus\", \"appVersion\": \"8.1.14\", \"systemVersion\": \"4.4.4\", \"userId\": user['username'], \"systemName\": \"android\", \"lat\": user['lat'], \"deviceId\": str(uuid.uuid1()) } headers = { # 'tenantId': '1019318364515869', 'User-Agent': 'Mozilla/5.0 (Linux; Android 4.4.4; OPPO R11 Plus Build/KTU84P) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Safari/537.36 okhttp/3.12.4', 'CpdailyStandAlone': '0', 'extension': '1', 'Cpdaily-Extension': DESEncrypt(json.dumps(extension)), 'Content-Type': 'application/json; charset=utf-8', 'Accept-Encoding': 'gzip', # 'Host': 'swu.cpdaily.com', 'Connection': 'Keep-Alive' } res = session.post(url='https://{host}/wec-counselor-sign-apps/stu/sign/submitSign'.format(host=apis['host']), headers=headers, data=json.dumps(form), verify=not debug) message = res.json()['message'] if message == 'SUCCESS': log('自动签到成功') sendMessageByWeChat('自动签到成功', 'SUCCESS🎉\\n今日校园打卡成功了o(*≧▽≦)ツ') sendMessageByQQ('自动签到成功', 'SUCCESS🎉\\n今日校园打卡成功了o(*≧▽≦)ツ') else: log('自动签到失败，原因是：' + message) sendMessageByWeChat('自动签到失败，原因是：' + message, '🤔该收集已填写无需再次填写') sendMessageByQQ('自动签到失败，原因是：' + message, '🤔该收集已填写无需再次填写') exit(-1)# 发送Server酱通知def sendMessageByWeChat(send, msg): if send != '': log('正在用Server酱进行推送') key = \"SCU103057T*********************************\" # 这里填Server酱官方提供的SCKEY url = \"https://sc.ftqq.com/%s.send\" % (key) headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'} payload = {'text': '今日校园疫情上报自动填表结果通知', 'desp': getTimeStr() + '\\n\\r' + str(msg)} res = requests.post(url, params=payload, headers=headers) errmsg = res.json()['errmsg'] if errmsg == 'success': log('Server酱通知成功') else: log('推送失败') log(res.json())# 发送Qmsg酱通知def sendMessageByQQ(send, msg): if send != '': log('正在用Qmsg酱进行推送') key = \"1aacc*************************\" # 这里填Qmsg酱官方提供的KEY url_send = \"https://qmsg.zendee.cn/send/%s\" % (key) url_group = \"https://qmsg.zendee.cn/group/%s\" % (key) headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'} payload = {'msg': '%s今日校园疫情上报自动填表结果通知' % (getTimeStr() + '\\n') + '\\n' + str(msg)} res = requests.post(url_send, params=payload, headers=headers) # 私聊消息推送 res_group = requests.post(url_group, params=payload, headers=headers) # 群消息推送 sucmsg = res.json()['success'] if sucmsg == True: log('Qmsg酱通知成功') else: log('推送失败') log(res.json())# 主函数def main(): for user in config['users']: apis = getCpdailyApis(user) session = getSession(user, apis) params = getUnSignedTasks(session, apis) task = getDetailTask(session, params, apis) form = fillForm(task, session, user, apis) # form = getDetailTask(session, user, params, apis) submitForm(session, user, form, apis)# 提供给腾讯云函数调用的启动函数def main_handler(event, context): try: main() except Exception as e: raise e else: return 'success'if __name__ == '__main__': # print(extension) print(main_handler({}, {})) 层依赖 dependency.zip，点击下载 注意 在 config.yml 中添加今日校园的账户信息😀和以及自己的邮箱📪 在 index.py 中添加自己的 SCKEY（299 行左右） 在 index.py 中添加自己的 KEY（317 行左右） 有条件的可以自建 api Congratulations!","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://kangblogs.top/tags/Python/"},{"name":"今日校园","slug":"今日校园","permalink":"https://kangblogs.top/tags/%E4%BB%8A%E6%97%A5%E6%A0%A1%E5%9B%AD/"},{"name":"云函数","slug":"云函数","permalink":"https://kangblogs.top/tags/%E4%BA%91%E5%87%BD%E6%95%B0/"}]},{"title":"Java 学习・前期准备","slug":"Blog-18","date":"2020-10-07T14:54:49.000Z","updated":"2020-11-14T11:45:11.000Z","comments":true,"path":"posts/e7bbd878.html","link":"","permalink":"https://kangblogs.top/posts/e7bbd878.html","excerpt":"","text":"初识 Java前言 Java 是一种面向对象的编程语言。在学习语法细节前，对其历史、现状和特性有所了解是有裨益的。 什么是 Java 语言Java 语言是 Sun 公司于 1990 年开发的，当时 Green 项目小组的研究人员正在致力于为未来的智能设备开发一种新的编程语言。由于该小组的成员 James Gosling 对 C++ 语言在执行过程中的表现非常不满，就把自己封闭在办公室里编写了一种新的语言，并将其命名为 Oak（Oak 就是 Java 语言的前身），这个名字源于 Gosling 办公室窗外的一棵橡树（Oak）。此时的 Oak 已经具备安全性、网络通信、面向对象、多线程等特性，是一款相当优秀的程序语言。后来，在注册 Oak 商标时，发现它已经被另一家公司注册，所以不得不改名。要取什么名字呢？工程师们边喝咖啡边讨论着，看看手上的咖啡，联想到印度尼西亚有一个盛产咖啡的岛屿（中文名叫爪哇），于是将其改名为 Java。 Java 语言的历史随着 Internet 的迅速发展，Web 应用日益广泛，Java 语言也得到了迅速发展。1994 年，Gosling 用 Java 语言开发了一个实时性较高、可靠、安全、有交互功能的新型 Web 浏览器，它不依赖于任何硬件平台和软件平台。该浏览器被命名为 HotJava，并于 1995 年在业界发表，引起了巨大的轰动，Java 语言的地位随之得到了肯定。1995 年 5 月 23 日，JDK（Java Development Kit）1.0a2 版本正式对外发布。此后，Java 语言的发展异常迅速。2009 年 4 月 20 日，Sun 公司被 Oracle 公司收购。 Java 的运行机制Java 语言编写的程序既是编译型的，又是解释型的。程序代码经过编译之后转换为一种称为 Java 字节码的中间语言，并由 Java 虚拟机（JVM）将这些字节码进行解释和运行。编译只进行一次，而解释在每次运行程序时都会进行。编译后的字节码采用一种针对 JVM 优化过的机器码形式保存，虚拟机将字节码解释为机器码，然后在计算机上运行。 Java 语言现状借助 Java，程序开发人员可以自由地使用现有的硬件和软件系统平台。由于 Java 是独立于平台的，它还可以应用于计算机之外的领域。Java 程序可以在便携式计算机、电视、电话、手机和其他设备上运行。Java 的用途数不胜数，它拥有无可比拟的能力，使用它所节省的时间和费用十分可观。Java 应用领域主要包括以下几方面。 桌面应用系统开发 嵌入式系统开发 电子商务应用开发 企业级应用开发 交互式系统开发 多媒体系统开发 分布式系统开发 Web 应用系统开发 Java 无处不在，可应用在任何地方、任何领域，目前已拥有几百万用户，发展速度要快与在它之前任何一种计算机语言。Java 能够给企业和最终用户带来数不尽的好处。Oracle 公司董事长和首席执行官 Larru Ellision 说过：“Java 正在进入企业、家庭和学校。它正在像 Internet 本身一样成为普遍存在的技术。”如果仔细观察就会发现，Java 就在我们身边。使用 Java 语言编写的常见开源软件包括 NetBeans 和 Eclipse 集成开发环境、JBoss 和 GlassFish 应用服务器；商业软件包括永中 Office、合金战士 Chrome、Websphere 和 Oracle Database 11g。此外，各手机厂商都为自己的产品提供了 Java 技术的支持，手机上的 Java 程序和游戏已经不胜枚举。为了满足不同开发人员的需求，Java 开发分成了以下 3 个方向。 Java SE：主要用于桌面程序的开发。它是学习 Java EE 和 Java ME 的基础。 Java EE：主要用于网页程序的开发。随着互联网的发展，越来越多的企业使用 Java 语言来开发自己的官方网站，其中不乏一些世界 500 强的企业。 Java ME：主要用于嵌入式系统程序的开发。 Java 语言特性Java 语言的作者们编写了具有广泛影响的 Java 白皮书，里面详细介绍了他们的设计目标以及实现成果。此外，还用简短的篇幅介绍了 Java 语言的特性。下面将对其进行简要介绍。 简单Java 语言的语法简单明了，容易掌握，而且是纯面向对象的语言。Java 语言的简单性主要体现在以下几点： 语法规则和 C++ 类似。从某种意义上讲，Java 语言是由 C 和 C++ 语言转变而来，所以 C 程序设计人员可以很容易地掌握 Java 语言的语法。 Java 语言对 C++ 进行了简化和提高。例如，Java 使用接口取代了多重继承，并取消了指针，因为指针和多重继承通常使程序变得复杂。Java 语言还通过实现垃圾自动收集，大大简化了程序设计人员的资源释放管理工作。 Java 提供了丰富的类库和 API 文档以及第三方开发包，另外，还有大量的基于 Java 的开源项目，现在 JDK 也开放源代码了，读者可以通过分析项目的源代码，提高自己的编程水平。 面向对象Java 语言本身是一种面向对象的程序设计语言。Java 提倡万物皆对象，语法中不能在类外面定义单独的变量和方法，也就是说，Java 语言最外部的数据类型是对象，所有的元素都要通过类和对象来访问。 分布式Java 的分布性包括操作分布和数据分布，其中操作分布是指在多个不同的主机上布置相关操作，而数据分布是将数据分别存放在多个不同的主机上，这些主机是网络中的不同成员。Java 可以凭借 URL 对象访问网络对象，访问方式与访问本地系统相同。 可移植性Java 程序具有与体系结构无关的特性，从而使 Java 程序可以方便地移植到网络的不同计算机中。同时，Java 的类库中也实现了针对不同平台的接口，使这些类库也可以移植。 解释性运行 Java 程序需要解释器。任何移植了 Java 解释器的计算机或其他设备都可以用 Java 字节码进行解释执行。字节码独立于平台，它本身携带了许多编译信息，使得连接过程更加简单，开发过程也就更加迅速，更具探索性。 安全性Java 语言删除了类似 C 语言中的指针和内存释放等语法，从而有效地避免了非法操作内存。Java 程序代码要经过代码校验、指针校验等很多的测试步骤才能够运行，所以未经允许的 Java 程序不可能出现损害系统平台的行为，而且使用 Java 可以编写防病毒和防修改的系统。 健壮性Java 的设计目标之一是编写多方面可靠的应用程序，Java 将检查程序在编译和运行时的错误，以及消除错误。类型检查能帮助用户检查出许多在开发早期出现的错误。同时，很多集成开发工具 IDE（如 Eclipse、NetBeans）的出现使编译和运行 Java 程序更加容易。 多线程多线程机制能够使应用程序在同一时间并行执行多项任务，而且相应的同步机制可以保证不同线程能够正确地共享数据。使用多线程，可以带来更好的交互能力和实时行为。 高性能Java 编译后的字节码是在解释器中运行的，所以它的速度比多数交互式应用程序提高了很多。另外，字节码可以在程序运行时被翻译成特定平台的机器指令，从而进一步提高运行速度。 动态Java 在很多方面比 C 和 C++ 更能够适应发展的环境，可以动态调整库中方法和变量的增加，而客户端却不需要作任何更改。在 Java 中，动态调整是非常简单、直接的。 搭建开发环境JDK 的下载、安装和配置开发 Java 程序必须安装 JDK (Java Developers Kits) 开发环境。它包含演示程序和样例、Java 公共 API 类的源代码、Java 运行环境、编译调试等开发工具。 下载 JDK由于 Sun 公司被 Oracle 收购，因此 JDK 可以在 Oracle 公司的官方网站下载。Oracle下面以 JDK8 为例介绍 Windows64 位下载 JDK 的方法，具体步骤如下。 浏览器地址栏输入 https://www.oracle.com/cn/java/technologies/javase-downloads.html 下滑到 Java SE 8，点击 JDK Download 点击下载对应版本，这里以 WIN-64 为例。首次使用需要注册并登录 Oracle 账号 安装 JDK 在 JDK 中，已经包含了 JRE。JDK 用于开发 Java 程序，JRE 用于运行 Java 程序 双击下载的 jdk-8u261-windows-x64.exe，接着 Windows 式下一步。 如需更改安装位置，点击更改，接着下一步。注：请记住该安装位置，后续配置环境变量会用到。 点击下一步，安装中。 配置 JDK安装完 JDK 之后，必须配置环境变量方可使用 Java 环境。在 Windows 操作系统中，主要配置 3 个环境变量，分别是 JAVA_HOME、Path 和 CLASSPATH。其中 JAVA_HOME 用来指定 JDK 的安装路径；Path 用来使系统能够在任何路径下都可以识别 Java 命令；CLASSPATH 用来加载 Java 类库的路径。在 Windows 7 系统中配置环境变量的步骤如下。 在 “计算机” 图标上单击鼠标右键，在弹出的快捷菜单中选择属性命令，在弹出的属性对话框左侧单击高级系统设置超链接，将打开系统属性对话框。 单击环境变量按钮，将弹出 “环境变量” 对话框，单击系统变量栏下的 “新建” 按钮，创建新的系统变量。弹出 “新建系统变量” 对话框，分别输入变量名 JAVA_HOME 和变量值（即 JDK 的安装路径），其中变量值是笔者的 JDK 安装路径，读者需要根据自己的计算机环境进行修改。单击确定按钮，关闭 “新建系统变量” 对话框。 在环境变量对话框中双击 Path 变量，对其进行修改。将原变量值最前面的 C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath; 删除，并输入 %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;（注意，最后的 “;” 不要丢掉，它用于分割不同的变量值）。单击确定按钮完成环境变量的设置。 在 “环境变量” 对话框中，单击 “系统变量” 栏下的新建按钮，新建一个 CLASSPATH 变量，变量值为.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar;。在 Windows 系统中，环境变量需要使用英文的分号进行分隔；在 Linux 系统中，环境变量需要使用英文的冒号进行分隔。要注意全角和半角的区别。 接着一路确定，就到了激动人心的验证是否配置成功的环节。 测试开发环境JDK 配置完成后，需确认是否配置准确。在 Windows 系统中测试 JDK 环境需要选择 “开始”/“运行” 命令（没有 “运行” 命令可以按 Windows+R 组合键），然后在 “运行” 对话框中输入 “cmd” 并单击 “确定” 按钮启动控制台。在控制台中输入 javac 命令，按 Enter 键，将输出如下图所示的 JDK 的编译器信息，其中包括修改命令的语法和参数选项等信息。这说明 JDK 环境搭建成功。Congratulations! JDK、JRE 和 JVM 之间的关系 Hello World!第一个 Java 程序 又到了激动人心的 Hello World在完成 JDK 的下载和安装后，就可以开始编写 Java 程序了。下面将编写第一个 Java 程序，其效果是在 DOS 控制台上显示 “Hello World!”。 编写源代码使用 Java 编程的第一步是编写源代码，这里需要使用到文本编辑器。目前有各种各样的文本编辑器，如 “记事本” 工具、Sublime Text 等。这里使用 Windows 系统自带的 “记事本” 工具。 先进行一番设置 正式开始在电脑任意磁盘新建一文件夹，用于存放 Java 代码，方便后续管理。新建完成后在此文件夹下新建一文本文档，编辑以下为内容： 12345public class HelloWorld{ public static void main(String[] args){ System.out.println(\"Hello World!\"); }} Ctrl+S 保存。并重命名为 HelloWorld.java 编译源代码点击 Java 文件所处界面的文件管理器路径框并输入 cmd，并回车 Enter。在弹出的运行框中输入指令 javac HelloWorld.java, 并回车 Enter。编译过后，无返回错误且目标文件夹下多出一个名为 HelloWold.class 的文件，则说明编译成功。 运行执行 java HelloWorld。Congratulations! IDETips学习 Java 语言程序设计必须选择一个功能强大、使用简单、能够辅助程序设计的 IDE（Integrated Development Environment）。虽然使用记事本和 JDK 编译工具已经可以编写 Java 程序，但是在项目开发过程中必须使用大型的集成开发工具（IDE）来编写 Java 程序，这样可以避免编码错误，方便管理项目结构，而且使用 IDE 工具的代码辅助功能可以快速地输入程序代码。好用的 IDE 可以大量节省程序开发所需的时间和精力。 IDE 之 EclipseEclipse 是由 IBM 公司投资 4000 万美元开发的集成开发工具。它基于 Java 语言编写，并且是开放源代码的、可扩展的，也是目前流行的 Java 集成开发工具之一。另外，IBM 公司捐出 Eclipse 源代码，组建了 Eclipse 联盟，由该联盟负责这种工具的后续开发。Eclipse 为编程人员提供了一流的 Java 程序开发环境，它的平台体系结构是在插件概念的基础上构建的，插件是 Eclipse 平台最具特色的特征之一。 下载 Eclipse 这里以 64 位 Windows 为例 打开浏览器，首先在地址栏中输入 http://www.eclipse.org，按 Enter 键开始访问 Eclipse 的官网首页，然后单击 Eclipse 官网首页上的 Download 按钮。再一直 Download 下去。若下载无响应，请更换镜像源 安装 Eclipse 双击下载的安装包，选择 Eclipse IDE for Java Developers， 设置安装位置 点击 INSTALL—&gt;Accept Now，等待安装完成。 配置 Eclipse 双击 Eclipse 快捷方式，配置工作空间，并点击 Launch。每次启动 Eclipse 时都会出现设置工作空间的对话框，通过选中 Use this as the default and do not ask again 复选框可以设置默认工作空间，这样 Eclipse 启动时就不会再询问工作空间的设置了。 这里附上汉化教程，酌情选择是否汉化。 在浏览器的地址栏中输入 http://www.eclipse.org/babel，并按 Enter 键，进入 Babel 项目组首页。单击页面右侧导航中的 Downloads 超链接或者单击页面下方的绿色箭头都可以进入语言包的下载页面。 在下载页面的 Babel Language Packs 标题下选择对应 Eclipse 版本的超链接下载语言包，进入 Eclipse 的 Babel 语言包下载页面，在该页面中包含了对应各国语言的资源包，而每个语言的资源包又按插件与功能模块分为多个 zip 压缩包。在页面中找到简体中文的语言包分类，可以单独选择 Eclipse 的语言包下载，也可以下载全部语言包。例如，单独下载 Eclipse 的语言包，可以单击 BabelLanguagePack-eclipse-zh_4.16.0.v20200711020001.zip (84.09%) 超链接，下载后的文件名为 BabelLanguagePack-eclipse-zh_4.16.0.v20200711020001.zip。下载 Eclipse 多国语言包时，一定要注意语言包所匹配的 Eclipse 版本，否则可能无法实现 Eclipse 的国际化。 若下载无响应，请更换镜像源 将下载的所有语言包解压缩并将 features 和 plugins 两个文件夹复制到 Eclipse 安装目录中的 dropins 文件夹下，这样在启动 Eclipse 时便会自动加载语言包。Congratulations! HelloWorld!新建一个 Java 项目（文件 —&gt; 新建 —&gt;Java项目），名称随意。新建一个 Java 类（右击刚新建的Java项目–&gt; 新建 —&gt; 类），命名为 HelloWorld。并编写刚学会的打印 HelloWorld! 的代码。Ctrl+F11 编译并运行。 IDE 之 IDEA“你怎么还在用 Eclipse？？？”，“因为它免费啊！”。现在介绍一款 Java 开发利器 —IntelliJ IDEA，IntelliJ 在业界被公认为最好的 Java 开发工具，尤其在智能代码助手、代码自动提示、重构、JavaEE 支持、各类版本工具 (git、svn 等)、JUnit、CVS 整合、代码分析、 创新的 GUI 设计等方面的功能可以说是超常的。IDEA 是 JetBrains 公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。它的旗舰版本还支持 HTML，CSS，PHP，MySQL，Python 等。免费版只支持 Java,Kotlin 等少数语言。诚然，没有最好的工具，只有适合自己的工具。免费版的 IntelliJ IDEA 已经基本可以满足 Java 学习。 下载 IDEA 这里以 64 位 Windows 为例 打开浏览器，首先在地址栏中输入 https://www.jetbrains.com/zh-cn/idea/download/##section=windows，按 Enter 键开始访问 IDEA 的官网下载页面，这里提供了两个版本：Ultimate，付费版，可免费试用 30 天，学生可申请免费；社区版，免费开源，够用。 安装 IDEA双击安装包，选择安装路径，安装。【不再赘叙】 配置 IDEA 点击 Create New Project ，选择 Java模块，Project SDK 选择 JDK 的安装目录。Next—&gt;Next—&gt; 命名项目名称 —&gt;Finish。 这里附上汉化教程，酌情选择是否汉化。 依次点击文件、设置、Plugins，并搜索 Chinese。点击安装。 HelloWorld!新建一个 Java 类（右击刚新建的 Java 项目下的 src 目录–&gt; 新建 Java类），命名为 HelloWorld。并编写刚学会的打印 HelloWorld! 的代码。Shift+F10 编译并运行。 Congratulations!","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://kangblogs.top/tags/Java/"}]},{"title":"前端学习（八）","slug":"Blog-17","date":"2020-10-05T16:54:47.000Z","updated":"2020-10-05T16:54:50.000Z","comments":true,"path":"posts/58860a6d.html","link":"","permalink":"https://kangblogs.top/posts/58860a6d.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・Demo-02因本人习惯，笔记在 WebStorm 上呈现 源码・一index.htmlDemo02.css123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo02&lt;/title&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./css/Demo02.css\"&gt;&lt;/head&gt;&lt;body&gt;&lt;main&gt; &lt;input class=\"l\" type=\"checkbox\"&gt;&lt;/main&gt;&lt;/body&gt;&lt;/html&gt;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485*, *:before, *:after { box-sizing: border-box; margin: 0; padding: 0;}:root { /* minFontSize + (maxFontSize - minFontSize) * (100vw - minVWidth)/(maxVWidth - minVWidth) */ font-size: calc(64px + (80 - 64) * (100vw - 320px)/(960 - 320));}body, input { font-size: 1em; line-height: 1.5;}body { background: #bbb;}input { display: block; margin-bottom: 1.5em;}main { padding: 1.5em 0 0 0; text-align: center;}.l { background-color: rgba(0,0,0,0.7); border-radius: 0.75em; box-shadow: 0.125em 0.125em 0 0.125em rgba(0,0,0,0.3) inset; color: #fdea7b; display: inline-flex; align-items: center; margin: auto; padding: 0.15em; width: 3em; height: 1.5em; transition: background-color 0.1s 0.3s ease-out, box-shadow 0.1s 0.3s ease-out; -webkit-appearance: none; -moz-appearance: none; appearance: none;}.l:before, .l:after { content: \"\"; display: block;}.l:before { background-color: #d7d7d7; border-radius: 50%; width: 1.2em; height: 1.2em; transition: background-color 0.1s 0.3s ease-out, transform 0.3s ease-out; z-index: 1;}.l:after { background: linear-gradient(transparent 50%, rgba(0,0,0,0.15) 0) 0 50% / 50% 100%, repeating-linear-gradient(90deg,#bbb 0,#bbb,#bbb 20%,#999 20%,#999 40%) 0 50% / 50% 100%, radial-gradient(circle at 50% 50%,#888 25%, transparent 26%); background-repeat: no-repeat; border: 0.25em solid transparent; border-left: 0.4em solid #d8d8d8; border-right: 0 solid transparent; transition: border-left-color 0.1s 0.3s ease-out, transform 0.3s ease-out; transform: translateX(-22.5%); transform-origin: 25% 50%; width: 1.2em; height: 1em;}/* Checked */.l:checked { background-color: rgba(0,0,0,0.45); box-shadow: 0.125em 0.125em 0 0.125em rgba(0,0,0,0.1) inset;}.l:checked:before { background-color: currentColor; transform: translateX(125%)}.l:checked:after { border-left-color: currentColor; transform: translateX(-2.5%) rotateY(180deg);}/* Other States */.l:focus { /* Usually an anti-A11Y practice but set to remove an annoyance just for this demo */ outline: 0;} 效果・一 源码・二index.htmlDemo03.css1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo03&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"css/Demo03.css\"&gt;&lt;/head&gt;&lt;body&gt;&lt;span class=\"switcher switcher-1\"&gt; &lt;input type=\"checkbox\" id=\"switcher-1\"&gt; &lt;label for=\"switcher-1\"&gt;&lt;/label&gt;&lt;/span&gt;&lt;span class=\"switcher switcher-2\"&gt; &lt;input type=\"checkbox\" id=\"switcher-2\"&gt; &lt;label for=\"switcher-2\"&gt;&lt;/label&gt;&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133body { display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; background-color: #CCCCCC;}body span.switcher { position: relative; width: 200px; height: 50px; border-radius: 25px; margin: 20px 0;}body span.switcher input { appearance: none; position: relative; width: 200px; height: 50px; border-radius: 25px; background-color: #1E1E1E; outline: none; font-family: \"Oswald\", sans-serif;}body span.switcher input:before, body span.switcher input:after { z-index: 2; position: absolute; top: 50%; transform: translateY(-50%); color: #FFFFFF;}body span.switcher input:before { content: \"ON\"; left: 20px;}body span.switcher input:after { content: \"OFF\"; right: 20px;}body span.switcher label { z-index: 1; position: absolute; top: 10px; bottom: 5px; border-radius: 20px;}body span.switcher.switcher-1 input { transition: 0.25s -0.1s;}body span.switcher.switcher-1 input:checked { background-color: #FFFFFF;}body span.switcher.switcher-1 input:checked:before { color: #FFFFFF; transition: color 0.5s 0.2s;}body span.switcher.switcher-1 input:checked:after { color: #CCCCCC; transition: color 0.5s;}body span.switcher.switcher-1 input:checked + label { left: 10px; right: 100px; background: #1E1E1E; transition: left 0.5s, right 0.4s 0.2s;}body span.switcher.switcher-1 input:not(:checked) { background: #1E1E1E; transition: background 0.5s -0.1s;}body span.switcher.switcher-1 input:not(:checked):before { color: #CCCCCC; transition: color 0.5s;}body span.switcher.switcher-1 input:not(:checked):after { color: #1E1E1E; transition: color 0.5s 0.2s;}body span.switcher.switcher-1 input:not(:checked) + label { left: 100px; right: 10px; background: #FFFFFF; transition: left 0.4s 0.2s, right 0.5s, background 0.35s -0.1s;}body span.switcher.switcher-2 { overflow: hidden;}body span.switcher.switcher-2 input { transition: background-color 0s 0.5s;}body span.switcher.switcher-2 input:before { color: #1E1E1E;}body span.switcher.switcher-2 input:after { color: #FFFFFF;}body span.switcher.switcher-2 input:checked { background-color: #FFFFFF;}body span.switcher.switcher-2 input:checked + label { background: #FFFFFF; animation: turn-on 0.5s ease-out;}@keyframes turn-on { 0% { left: 100%; } 100% { left: 0%; }}body span.switcher.switcher-2 input:not(:checked) { background: #1E1E1E;}body span.switcher.switcher-2 input:not(:checked) + label { background: #1E1E1E; animation: turn-off 0.5s ease-out;}@keyframes turn-off { 0% { right: 100%; } 100% { right: 0%; }}body span.switcher.switcher-2 label { top: 0px; width: 200px; height: 56px; border-radius: 25px;} 效果・二 源码・三index.htmlDemo04.css1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo04&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./css/Demo04.css\"&gt;&lt;/head&gt;&lt;body&gt;&lt;label class=\"label\"&gt; &lt;div class=\"toggle\"&gt; &lt;input class=\"toggle-state\" type=\"checkbox\" name=\"check\" value=\"check\" /&gt; &lt;div class=\"indicator\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/label&gt;&lt;/body&gt;&lt;/html&gt;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455body { height: 100vh; display: flex; align-items: center; justify-content: center; overflow: hidden; font-family: 'IBM Plex Sans Condensed', sans-serif; font-weight: 300; background-color: #ecf0f3;}.label { display: inline-flex; align-items: center; cursor: pointer; color: #394a56;}.label-text { margin-left: 16px;}.toggle { isolation: isolate; position: relative; height: 30px; width: 60px; border-radius: 15px; overflow: hidden; box-shadow: -8px -4px 8px 0px #ffffff, 8px 4px 12px 0px #d1d9e6, 4px 4px 4px 0px #d1d9e6 inset, -4px -4px 4px 0px #ffffff inset;}.toggle-state { display: none;}.indicator { height: 100%; width: 200%; background: #ecf0f3; border-radius: 15px; transform: translate3d(-75%, 0, 0); transition: transform 0.4s cubic-bezier(0.85, 0.05, 0.18, 1.35); box-shadow: -8px -4px 8px 0px #ffffff, 8px 4px 12px 0px #d1d9e6;}.toggle-state:checked ~ .indicator { transform: translate3d(25%, 0, 0);} 效果・三 源码・四index.htmlDemo05.css123456789101112131415161718192021222324252627282930313233343536&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo05&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./css/Demo05.css\"&gt;&lt;/head&gt;&lt;body&gt;&lt;label class=\"egg-switch\"&gt; &lt;input type=\"checkbox\" checked&gt; &lt;div&gt; &lt;div class=\"flipper\"&gt; &lt;svg&gt; &lt;use xlink:href=\"#flipper\"&gt; &lt;/svg&gt; &lt;/div&gt; &lt;div class=\"egg\"&gt; &lt;div class=\"front\"&gt;&lt;/div&gt; &lt;div class=\"back\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/label&gt;&lt;svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\"&gt; &lt;symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 39 18\" id=\"flipper\" fill=\"currentColor\"&gt; &lt;path d=\"M0.0244740693,1.75473835 C0.00818305726,1.86197078 0,1.97036486 0,2.07892575 L0,15.921377 C0,17.0693688 0.8954305,18 2,18 C2.10445462,18 2.20874874,17.9914953 2.31192515,17.9745638 L17.3119251,15.5130366 C18.2840292,15.3535125 19,14.4826852 19,13.4598497 L19,12.6377416 C19.6666667,11.5984301 20.3333333,11.0787744 21,11.0787744 L39,11.0787744 L39,6.92152835 L21,6.92152835 C20.3333333,6.92152835 19.6666667,6.4018726 19,5.36256109 L19,4.540453 C19,3.51761755 18.2840292,2.64679022 17.3119251,2.48726617 L2.31192515,0.0257389154 C1.2208723,-0.153304839 0.196745571,0.620794577 0.0244740693,1.75473835 Z M12.2049236,12.279252 C12.6185695,12.2575737 12.9714694,12.5753263 12.9931477,12.9889722 C13.0130194,13.3681476 12.747675,13.6962795 12.3847003,13.7650328 L12.2834275,13.7771963 L3.79507644,14.2220519 C3.38143055,14.2437302 3.02853059,13.9259776 3.00685233,13.5123317 C2.98698059,13.1331563 3.25232501,12.8050244 3.61529975,12.7362711 L3.71657251,12.7241076 L12.2049236,12.279252 Z M16.75,5 C16.8683467,5 16.9674868,5.08223341 16.9933973,5.19267729 L17,5.25 L17,12.75 C17,12.8880712 16.8880712,13 16.75,13 C16.6316533,13 16.5325132,12.9177666 16.5066027,12.8073227 L16.5,12.75 L16.5,5.25 C16.5,5.11192881 16.6119288,5 16.75,5 Z M13.7339356,9.6630893 C14.1480861,9.65586028 14.4896817,9.9857353 14.4971398,10.3998858 C14.5035373,10.7795237 14.2269029,11.0981954 13.8617498,11.1542391 L13.7601142,11.1628608 L3.26171343,11.3461111 C2.84756295,11.3533401 2.50596738,11.0234651 2.49850922,10.6093146 C2.49211175,10.2296767 2.76874618,9.91100505 3.13389925,9.85496129 L3.23553482,9.84633957 L13.7339356,9.6630893 Z M3.26171343,6.6630893 L13.7601142,6.84633957 C14.1742647,6.8535686 14.5041397,7.19516417 14.4971402,7.60931465 C14.4902841,7.98895258 14.2026967,8.29777572 13.8358102,8.34104168 L13.7339356,8.34611112 L3.23553482,8.16286085 C2.82138434,8.15563182 2.49150933,7.81403625 2.49850889,7.39988577 C2.50536496,7.02024784 2.79295235,6.7114247 3.15983888,6.66815874 L3.26171343,6.6630893 Z M3.79507644,3.77925197 L12.2834275,4.2241076 C12.6970734,4.24578586 13.0148259,4.59868582 12.9931477,5.01233171 C12.9732759,5.39150712 12.675086,5.69010548 12.306913,5.72054092 L12.2049236,5.7220519 L3.71657251,5.27719627 C3.30292661,5.25551801 2.98517406,4.90261805 3.00685233,4.48897215 C3.02672407,4.10979675 3.32491404,3.81119839 3.69308704,3.78076294 L3.79507644,3.77925197 Z\"&gt;&lt;/path&gt; &lt;/symbol&gt;&lt;/svg&gt;&lt;!-- twitter / dribbble --&gt;&lt;a class=\"dribbble\" href=\"https://dribbble.com/shots/9934807-Egg-Switch\" target=\"_blank\"&gt;&lt;img src=\"https://dribbble.com/assets/logo-small-2x-9fe74d2ad7b25fba0f50168523c15fda4c35534f9ea0b1011179275383035439.png\" alt=\"\"&gt;&lt;/a&gt;&lt;a class=\"twitter\" target=\"_blank\" href=\"https://twitter.com/aaroniker_me\"&gt;&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"72\" height=\"72\" viewBox=\"0 0 72 72\"&gt;&lt;path d=\"M67.812 16.141a26.246 26.246 0 0 1-7.519 2.06 13.134 13.134 0 0 0 5.756-7.244 26.127 26.127 0 0 1-8.313 3.176A13.075 13.075 0 0 0 48.182 10c-7.229 0-13.092 5.861-13.092 13.093 0 1.026.118 2.021.338 2.981-10.885-.548-20.528-5.757-26.987-13.679a13.048 13.048 0 0 0-1.771 6.581c0 4.542 2.312 8.551 5.824 10.898a13.048 13.048 0 0 1-5.93-1.638c-.002.055-.002.11-.002.162 0 6.345 4.513 11.638 10.504 12.84a13.177 13.177 0 0 1-3.449.457c-.846 0-1.667-.078-2.465-.231 1.667 5.2 6.499 8.986 12.23 9.09a26.276 26.276 0 0 1-16.26 5.606A26.21 26.21 0 0 1 4 55.976a37.036 37.036 0 0 0 20.067 5.882c24.083 0 37.251-19.949 37.251-37.249 0-.566-.014-1.134-.039-1.694a26.597 26.597 0 0 0 6.533-6.774z\"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256.egg-switch { --background: #171827; --shadow: rgba(246, 248, 255, .08); --shadow-inner: rgba(13, 15, 24, .8); --egg: #fff; --egg-back: #f4d2ad; --egg-yellow: linear-gradient(135deg, rgba(239,202,51, 1) 50%, rgba(237,139,2, 1) 100%); --egg-shadow: rgba(13, 15, 24, .25); --flipper: #F6F8FF; --flipper-hand: #8A91B4; --flipper-shadow: #646B8C; perspective: 160px; cursor: pointer; -webkit-tap-highlight-color: transparent;}.egg-switch input { display: none;}.egg-switch input + div { width: 64px; height: 32px; border-radius: 16px; position: relative; background: var(--background); box-shadow: inset 0 1px 3px 0 var(--shadow-inner), 0 1px 0 0 var(--shadow);}.egg-switch input + div .egg { position: absolute; left: 4px; top: 4px; z-index: 1; animation: egg 2s linear forwards; transform-style: preserve-3d;}.egg-switch input + div .egg .front:before,.egg-switch input + div .egg .front:after,.egg-switch input + div .egg .back:before,.egg-switch input + div .egg .back:after { content: \"\";}.egg-switch input + div .egg .front:before,.egg-switch input + div .egg .front:after,.egg-switch input + div .egg .back:before,.egg-switch input + div .egg .back:after,.egg-switch input + div .egg .back { position: absolute; border-radius: var(--border-radius, 50%); width: var(--width, var(--size, 24px)); height: var(--height, var(--size, 24px)); left: var(--left, var(--spacing, 0)); top: var(--top, var(--spacing, 0)); background: var(--background, var(--egg));}.egg-switch input + div .egg .front { width: 24px; height: 24px; transform: rotateY(180deg); backface-visibility: hidden;}.egg-switch input + div .egg .front:before { --background: var(--egg);}.egg-switch input + div .egg .front:after { --size: 12px; --spacing: 6px; --background: var(--egg-yellow); transform: translateZ(0); box-shadow: 1px 1px 3px var(--egg-shadow);}.egg-switch input + div .egg .back { --background: none;}.egg-switch input + div .egg .back:before, .egg-switch input + div .egg .back:after { --height: 14px; --background: var(--egg-back);}.egg-switch input + div .egg .back:before { --border-radius: 12px 12px 0 0; clip-path: polygon(0 0, 100% 0, 100% 90%, 75% 100%, 50% 90%, 25% 100%, 0 80%);}.egg-switch input + div .egg .back:after { --border-radius: 0 0 12px 12px; --top: 10px; clip-path: polygon(0 0, 25% 20%, 50% 10%, 75% 20%, 100% 10%, 100% 100%, 0 100%);}.egg-switch input + div .flipper { position: absolute; display: flex; align-items: center; top: 7px; left: 100%; opacity: 0; transform-origin: 20px 50%; transform: translateX(60px) translateY(-32px) rotate(-30deg) scale(0.8); animation: flipper 2s linear;}.egg-switch input + div .flipper:after { content: \"\"; width: 20px; height: 6px; border-radius: 2px 1px 1px 2px; display: block; background: var(--flipper-hand); box-shadow: inset 0 -1px 0 0 var(--flipper-shadow);}.egg-switch input + div .flipper svg { width: 39px; height: 18px; display: block; color: var(--flipper);}.egg-switch input:checked + div .flipper { animation: none;}.egg-switch input:checked + div .egg { animation: crack 2s linear forwards;}.egg-switch input:checked + div .egg .front:before { animation: egg-white 0.8s linear forwards 1.4s;}.egg-switch input:checked + div .egg .back:before, .egg-switch input:checked + div .egg .back:after { --animate-y: -16px; transform: translateZ(-2px); animation: egg-crack 0.8s linear forwards 1.4s;}.egg-switch input:checked + div .egg .back:after { --animate-y: 16px;}@keyframes egg { 0%, 40% { transform: rotateY(180deg) translateX(-32px); } 50% { transform: rotateY(180deg) translateX(-33px); } 75% { transform: translateZ(32px); } 90% { transform: scaleX(0.9); } 100% { transform: scaleX(0.8); }}@keyframes egg-white { 0% { opacity: 0.4; transform: scale(0.4); } 60%, 100% { transform: scale(1); } 100% { opacity: 1; }}@keyframes egg-crack { 0% { transform: translateZ(-2px); } 70% { transform: translateZ(-2px) scale(0.8) rotate(4deg) translateY(var(--animate-y)); } 80% { opacity: 1; } 100% { opacity: 0; transform: translateZ(-2px) scale(0.8) rotate(8deg) translateY(calc(var(--animate-y) * 1.5)); }}@keyframes crack { 0% { transform: rotateY(180deg) scaleX(0.8); } 30% { transform: rotateY(180deg) rotateZ(-16deg) translateX(-8px) translateY(12px) translateZ(-24px) scaleX(0.8); } 40% { transform: rotateY(180deg) rotateZ(-16deg) translateX(-8px) translateY(12px) scaleX(0.8); } 60%, 80% { transform: rotateY(180deg) translateX(-32px) scaleX(0.8); } 100% { transform: rotateY(180deg) translateX(-32px); }}@keyframes flipper { 30% { transform: translateX(-4px); } 40% { transform: translateX(-16px); } 50% { transform: translateX(-24px); } 60% { transform: translateX(-32px) rotateY(50deg) translateZ(16px); } 70% { transform: translateX(14px); } 85%, 100% { transform: translateX(60px); } 15%, 80% { opacity: 1; } 95%, 100% { opacity: 0; }}html { box-sizing: border-box; -webkit-font-smoothing: antialiased;}* { box-sizing: inherit;}*:before, *:after { box-sizing: inherit;}body { min-height: 100vh; display: flex; justify-content: center; align-items: center; background: #2B3044;}body .dribbble { position: fixed; display: block; right: 20px; bottom: 20px;}body .dribbble img { display: block; width: 76px;}body .twitter { position: fixed; display: block; right: 112px; bottom: 14px;}body .twitter svg { width: 24px; height: 24px; fill: white;} 效果・四 学习心得 代码规范所带来的心灵上的享受 逐步变成 “CV 攻城狮” 更加了解代码编写逻辑","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端学习（七）","slug":"Blog-16","date":"2020-08-24T04:56:12.000Z","updated":"2020-10-05T17:22:48.000Z","comments":true,"path":"posts/afed222e.html","link":"","permalink":"https://kangblogs.top/posts/afed222e.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・Demo-01因本人习惯，笔记在 WebStorm 上呈现 index.htmlDemo01.cssDemo01.js123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Demo01&lt;/title&gt; &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./css/Demo01.css\" charset=\"UTF-8\"&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"textcontainer\"&gt; &lt;span class=\"particletext bubbles\"&gt;Bubbles&lt;/span&gt;&lt;/div&gt;&lt;div class=\"textcontainer\"&gt; &lt;span class=\"particletext confetti\"&gt;Confetti&lt;/span&gt;&lt;/div&gt;&lt;div class=\"textcontainer\"&gt; &lt;span class=\"particletext hearts\"&gt;Hearts&lt;/span&gt;&lt;/div&gt;&lt;div class=\"textcontainer\"&gt; &lt;span class=\"particletext fire\"&gt;Fire&lt;/span&gt;&lt;/div&gt;&lt;div class=\"textcontainer\"&gt; &lt;span class=\"particletext lines\"&gt;Lines&lt;/span&gt;&lt;/div&gt;&lt;!--&lt;div class=\"textcontainer\"&gt; &lt;span class=\"particletext sunbeams\"&gt;Beams?&lt;/span&gt;&lt;/div&gt;--&gt;&lt;script type=\"text/javascript\" src=\"./js/Demo01.js\" charset=\"UTF-8\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328body .textcontainer { padding: 40px 0; text-align: center;}body .particletext { text-align: center; font-size: 48px; position: relative;}body .particletext.bubbles &gt; .particle { opacity: 0; position: absolute; background-color: rgba(33, 150, 243, 0.5); -webkit-animation: bubbles 3s ease-in infinite; animation: bubbles 3s ease-in infinite; border-radius: 100%;}body .particletext.hearts &gt; .particle { opacity: 0; position: absolute; background-color: #cc2a5d; -webkit-animation: hearts 3s ease-in infinite; animation: hearts 3s ease-in infinite;}body .particletext.hearts &gt; .particle:before, body .particletext.hearts &gt; .particle:after { position: absolute; content: \"\"; border-radius: 100px; top: 0px; left: 0px; width: 100%; height: 100%; background-color: #cc2a5d;}body .particletext.hearts &gt; .particle:before { -webkit-transform: translateX(-50%); transform: translateX(-50%);}body .particletext.hearts &gt; .particle:after { -webkit-transform: translateY(-50%); transform: translateY(-50%);}body .particletext.lines &gt; .particle { position: absolute; background-color: rgba(244, 67, 54, 0.5); -webkit-animation: lines 3s linear infinite; animation: lines 3s linear infinite;}body .particletext.confetti &gt; .particle { opacity: 0; position: absolute; -webkit-animation: confetti 3s ease-in infinite; animation: confetti 3s ease-in infinite;}body .particletext.confetti &gt; .particle.c1 { background-color: rgba(76, 175, 80, 0.5);}body .particletext.confetti &gt; .particle.c2 { background-color: rgba(156, 39, 176, 0.5);}body .particletext.fire &gt; .particle { position: absolute; background-color: rgba(255, 193, 7, 0.5); border-radius: 40px; border-top-right-radius: 0px; -webkit-animation: fires 0.8s linear infinite; animation: fires 0.8s linear infinite; -webkit-transform: rotate(-45deg); transform: rotate(-45deg); opacity: 0;}body .particletext.fire &gt; .particle:before { position: absolute; content: \"\"; top: 60%; left: 40%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 50%; height: 50%; border-radius: 40px; border-top-right-radius: 0px; background-color: rgba(251, 140, 0, 0.5);}body .particletext.sunbeams &gt; .particle { position: absolute; background-color: rgba(253, 216, 53, 0.5); -webkit-animation: sunbeams 3s linear infinite; animation: sunbeams 3s linear infinite;}@-webkit-keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); }}@keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); }}@-webkit-keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); }}@keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); }}@-webkit-keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); }}@keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); }}@-webkit-keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); }}@keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); }}@-webkit-keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; }}@keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; }}@-webkit-keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%, 14%, 17%, 43%, 53%, 71%, 80%, 94%, 100% { opacity: 0; } 6%, 15%, 24%, 28%, 48%, 55%, 78%, 82%, 99% { opacity: 1; }}@keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%, 14%, 17%, 43%, 53%, 71%, 80%, 94%, 100% { opacity: 0; } 6%, 15%, 24%, 28%, 48%, 55%, 78%, 82%, 99% { opacity: 1; }}1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677function initparticles() { bubbles(); hearts(); lines(); confetti(); fire(); sunbeams();}/*The measurements are ... whack (so to say), for more general text usage I would generate different sized particles for the size of text; consider this pen a POC*/function bubbles() { $.each($(\".particletext.bubbles\"), function(){ var bubblecount = ($(this).width()/50)*10; for(var i = 0; i &lt;= bubblecount; i++) { var size = ($.rnd(40,80)/10); $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(20,80) + '%; left:' + $.rnd(0,95) + '%;width:' + size + 'px; height:' + size + 'px;animation-delay: ' + ($.rnd(0,30)/10) + 's;\"&gt;&lt;/span&gt;'); } });}function hearts() { $.each($(\".particletext.hearts\"), function(){ var heartcount = ($(this).width()/50)*5; for(var i = 0; i &lt;= heartcount; i++) { var size = ($.rnd(60,120)/10); $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(20,80) + '%; left:' + $.rnd(0,95) + '%;width:' + size + 'px; height:' + size + 'px;animation-delay: ' + ($.rnd(0,30)/10) + 's;\"&gt;&lt;/span&gt;'); } });}function lines() { $.each($(\".particletext.lines\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i &lt;= linecount; i++) { $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(-30,30) + '%; left:' + $.rnd(-10,110) + '%;width:' + $.rnd(1,3) + 'px; height:' + $.rnd(20,80) + '%;animation-delay: -' + ($.rnd(0,30)/10) + 's;\"&gt;&lt;/span&gt;'); } });}function confetti() { $.each($(\".particletext.confetti\"), function(){ var confetticount = ($(this).width()/50)*10; for(var i = 0; i &lt;= confetticount; i++) { $(this).append('&lt;span class=\"particle c' + $.rnd(1,2) + '\" style=\"top:' + $.rnd(10,50) + '%; left:' + $.rnd(0,100) + '%;width:' + $.rnd(6,8) + 'px; height:' + $.rnd(3,4) + 'px;animation-delay: ' + ($.rnd(0,30)/10) + 's;\"&gt;&lt;/span&gt;'); } });}function fire() { $.each($(\".particletext.fire\"), function(){ var firecount = ($(this).width()/50)*20; for(var i = 0; i &lt;= firecount; i++) { var size = $.rnd(8,12); $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(40,70) + '%; left:' + $.rnd(-10,100) + '%;width:' + size + 'px; height:' + size + 'px;animation-delay: ' + ($.rnd(0,20)/10) + 's;\"&gt;&lt;/span&gt;'); } });}function sunbeams() { $.each($(\".particletext.sunbeams\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i &lt;= linecount; i++) { $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(-50,0) + '%; left:' + $.rnd(0,100) + '%;width:' + $.rnd(1,3) + 'px; height:' + $.rnd(80,160) + '%;animation-delay: -' + ($.rnd(0,30)/10) + 's;\"&gt;&lt;/span&gt;'); } });}jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m;}initparticles(); 效果 学习心得 Ctrl+C，Ctrl+V 的确很舒服 了解了运行逻辑","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"在博客中利用 Chartjs 插入动态图表","slug":"Blog-15","date":"2020-08-10T03:57:58.000Z","updated":"2020-08-14T07:25:45.000Z","comments":true,"path":"posts/3277fbaa.html","link":"","permalink":"https://kangblogs.top/posts/3277fbaa.html","excerpt":"","text":"该文基本 (全部) 来自于 chatjs 中文文档 由于使用 pjax，导致页面需要二次刷新才会显示图表，故引入了自动刷新的 JS，但这样会导致回退上一个标签页面失败以及该页面 pjax 失效已关闭此页面的 pjax 背景今天在谷歌上逛博客时，突然发现 shen-yu 大佬根据 chatjs 写了一个 Hexo 插件，出于兴趣，打算使用并记录该插件的效果。shen-yu 大佬 shen-yuchatjs 中文文档 chatjs由于插件的安装和图表的使用上面两个链接已介绍得足够详细，本人只做一些图表的演示，并充当一个函数，实现代码的复用 (手动狗头)。 图表折线图效果 var ctx = document.getElementById('chart1919').getContext('2d'); var options = { type: 'line', data: { labels: ['8.4', '8.5', '8.6', '8.7', '8.8', '8.9', '8.10'], datasets: [{ label: 'My First dataset', lineTension: 0, backgroundColor: 'rgb(255, 99, 132)', borderColor: 'rgb(255, 99, 132)', data: [0, 10, 5, 2, 20, 30, 45] }] }, options: { responsive: true, title: { display: true, text: 'Chart.js 折线图' } } }; new Chart(ctx, options); 示例用法12345678910111213141516171819202122{% chart 90% 300 %} //其中 chart 是标签名，endchart 是结束标签，不需要更改，可以通过设置 options 里面的 aspectRatio 属性来调整图表的宽高比例，默认 width 为 100%，height 为 300px。 { type: 'line', data: { // 折线图数据 labels: ['8.4', '8.5', '8.6', '8.7', '8.8', '8.9', '8.10'], // 横坐标 datasets: [{ // 纵坐标变量名称 label: 'My First dataset', lineTension: 0, borderColor: 'rgb(255, 99, 132)', // 线条颜色 data: [0, 10, 5, 2, 20, 30, 45] // 纵坐标 }] }, options: { responsive: true, title: { display: true, text: 'Chart.js 折线图' // 图表名称 } }}{% endchart %} 相关属性 名称 类型 描述 backgroundColor Color/Color[] 线条背景色 borderColor Color/Color[] 线条颜色 borderWidth Number/Number[] 线的宽度 (以像素为单位) borderDash Number[] 破折号的长度和间距。 参考 MDN borderDashOffset Number 偏移量 参考 MDN borderCapStyle String 线帽样式 参考 MDN borderJoinStyle String 线连接风格 参考 MDN cubicInterpolationMode String 离散的点之间的连接方式 fill Boolean/String 折线区域的填充方式 label String 在图例和工具提示中显示的数据集的标签。 lineTension Number 贝塞尔曲线张力。设置为 0 绘制直线。如果使用单调立方插值，则忽略此选项。 pointBackgroundColor Color/Color[] 点的填充色 pointBorderColor Color/Color[] 点的边框色 pointBorderWidth Number/Number[] 点边框宽度 (以像素为单位) pointRadius Number/Number[] 点的半径。如果设置为 0，则不显示。 pointStyle String/String[]/Image/Image[] 数据点的样式 pointHitRadius Number/Number[] 对鼠标事件作出响应的非显示点的像素大小。 pointHoverBackgroundColor Color/Color[] 鼠标悬浮时点背景颜色。 pointHoverBorderColor Color/Color[] 鼠标悬浮时点的边框色 pointHoverBorderWidth Number/Number[] 鼠标悬浮时点的边框宽度 pointHoverRadius Number/Number[] 鼠标悬浮时点的半径大小 showLine Boolean 如果设置 false，则不会为此数据集绘制线条。 spanGaps Boolean 如果为 true，则会在没有或为空数据的点之间绘制线条。如果为 false，则带有 NaN 数据的点会产生一个中断 steppedLine Boolean/String 是否显示为阶梯线 xAxisID String 绘制此数据集的 x 轴的 ID。如果未指定，则默认为第一个找到的 x 轴的 ID。 yAxisID String 绘制该数据集的 y 轴的 ID。如果未指定，则默认为第一个找到的 y 轴的 ID。 柱状图效果・垂直柱状图 var ctx = document.getElementById('chart4369').getContext('2d'); var options = { \"type\":\"bar\", \"data\":{ \"labels\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\"], \"datasets\":[{ \"label\":\"My First Dataset\", \"data\":[65,59,80,81,56,55,40], \"fill\":false, \"backgroundColor\":[\"rgba(255, 99, 132, 0.2)\",\"rgba(255, 159, 64, 0.2)\",\"rgba(255, 205, 86, 0.2)\",\"rgba(75, 192, 192, 0.2)\",\"rgba(54, 162, 235, 0.2)\",\"rgba(153, 102, 255, 0.2)\",\"rgba(201, 203, 207, 0.2)\"], \"borderColor\":[\"rgb(255, 99, 132)\",\"rgb(255, 159, 64)\",\"rgb(255, 205, 86)\",\"rgb(75, 192, 192)\",\"rgb(54, 162, 235)\",\"rgb(153, 102, 255)\",\"rgb(201, 203, 207)\"], \"borderWidth\":1 }] }, \"options\":{ \"scales\":{ \"yAxes\":[{ \"ticks\":{ \"beginAtZero\":true } }] } } }; new Chart(ctx, options); 示例用法・垂直柱状图12345678910111213141516171819202122232425{% chart 90% 300 %}{ \"type\":\"bar\", \"data\":{ \"labels\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\"], \"datasets\":[{ \"label\":\"My First Dataset\", \"data\":[65,59,80,81,56,55,40], \"fill\":false, \"backgroundColor\":[\"rgba(255, 99, 132, 0.2)\",\"rgba(255, 159, 64, 0.2)\",\"rgba(255, 205, 86, 0.2)\",\"rgba(75, 192, 192, 0.2)\",\"rgba(54, 162, 235, 0.2)\",\"rgba(153, 102, 255, 0.2)\",\"rgba(201, 203, 207, 0.2)\"], \"borderColor\":[\"rgb(255, 99, 132)\",\"rgb(255, 159, 64)\",\"rgb(255, 205, 86)\",\"rgb(75, 192, 192)\",\"rgb(54, 162, 235)\",\"rgb(153, 102, 255)\",\"rgb(201, 203, 207)\"], \"borderWidth\":1 }] }, \"options\":{ \"scales\":{ \"yAxes\":[{ \"ticks\":{ \"beginAtZero\":true } }] } }}{% endchart %} 效果・水平柱状图 var ctx = document.getElementById('chart7186').getContext('2d'); var options = { \"type\":\"horizontalBar\", \"data\":{ \"labels\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\"], \"datasets\":[{ \"label\":\"My First Dataset\", \"data\":[65,59,80,81,56,55,40], \"fill\":false, \"backgroundColor\":[\"rgba(255, 99, 132, 0.2)\",\"rgba(255, 159, 64, 0.2)\",\"rgba(255, 205, 86, 0.2)\",\"rgba(75, 192, 192, 0.2)\",\"rgba(54, 162, 235, 0.2)\",\"rgba(153, 102, 255, 0.2)\",\"rgba(201, 203, 207, 0.2)\"], \"borderColor\":[\"rgb(255, 99, 132)\",\"rgb(255, 159, 64)\",\"rgb(255, 205, 86)\",\"rgb(75, 192, 192)\",\"rgb(54, 162, 235)\",\"rgb(153, 102, 255)\",\"rgb(201, 203, 207)\"], \"borderWidth\":1 }] }, \"options\":{ \"scales\":{ \"xAxes\":[{ \"ticks\":{ \"beginAtZero\":true } }] } } }; new Chart(ctx, options); 示例用法・水平柱状图12345678910111213141516171819202122232425{% chart 90% 300 %}{ \"type\":\"horizontalBar\", // 水平柱状图 \"data\":{ \"labels\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\"], \"datasets\":[{ \"label\":\"My First Dataset\", \"data\":[65,59,80,81,56,55,40], \"fill\":false, \"backgroundColor\":[\"rgba(255, 99, 132, 0.2)\",\"rgba(255, 159, 64, 0.2)\",\"rgba(255, 205, 86, 0.2)\",\"rgba(75, 192, 192, 0.2)\",\"rgba(54, 162, 235, 0.2)\",\"rgba(153, 102, 255, 0.2)\",\"rgba(201, 203, 207, 0.2)\"], \"borderColor\":[\"rgb(255, 99, 132)\",\"rgb(255, 159, 64)\",\"rgb(255, 205, 86)\",\"rgb(75, 192, 192)\",\"rgb(54, 162, 235)\",\"rgb(153, 102, 255)\",\"rgb(201, 203, 207)\"], \"borderWidth\":1 }] }, \"options\":{ \"scales\":{ \"xAxes\":[{ \"ticks\":{ \"beginAtZero\":true } }] } }}{% endchart %} 相关属性 名称 类型 描述 label String 在图例和工具提示中显示的数据集标签 xAxisID String 绘制此数据集的 x 轴的 ID。如果未指定，则默认为第一个找到的 x 轴的 ID 。 yAxisID String 绘制该数据集的 y 轴的 ID。如果未指定，则默认为第一个找到的 y 轴的 ID。 backgroundColor Color/Color[] 柱状 / 条形图填充色。 borderColor Color/Color[] 边框色 borderWidth Number/Number[] 边框宽度 (以像素为单位) borderSkipped String 不绘制边框 hoverBackgroundColor Color/Color[] 悬浮时的填充色 hoverBorderColor Color/Color[] 悬浮时的边框色 hoverBorderWidth Number/Number[] 悬浮时边框宽度 雷达图效果 var ctx = document.getElementById('chart3070').getContext('2d'); var options = { \"type\":\"radar\", \"data\":{ \"labels\":[\"Eating\",\"Drinking\",\"Sleeping\",\"Designing\",\"Coding\",\"Cycling\",\"Running\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[65,59,90,81,56,55,40], \"fill\":true, \"backgroundColor\":\"rgba(255, 99, 132, 0.2)\", \"borderColor\":\"rgb(255, 99, 132)\", \"pointBackgroundColor\":\"rgb(255, 99, 132)\", \"pointBorderColor\":\"#fff\", \"pointHoverBackgroundColor\":\"#fff\", \"pointHoverBorderColor\":\"rgb(255, 99, 132)\" }, { \"label\":\"My Second Dataset\", \"data\":[28,48,40,19,96,27,100], \"fill\":true, \"backgroundColor\":\"rgba(54, 162, 235, 0.2)\", \"borderColor\":\"rgb(54, 162, 235)\", \"pointBackgroundColor\":\"rgb(54, 162, 235)\", \"pointBorderColor\":\"#fff\", \"pointHoverBackgroundColor\":\"#fff\", \"pointHoverBorderColor\":\"rgb(54, 162, 235)\" } ] }, \"options\":{ \"elements\":{ \"line\":{ \"tension\":0, \"borderWidth\":3 } } } }; new Chart(ctx, options); 示例用法12345678910111213141516171819202122232425262728293031323334353637383940{% chart 90% 300 %}{ \"type\":\"radar\", \"data\":{ \"labels\":[\"Eating\",\"Drinking\",\"Sleeping\",\"Designing\",\"Coding\",\"Cycling\",\"Running\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[65,59,90,81,56,55,40], \"fill\":true, \"backgroundColor\":\"rgba(255, 99, 132, 0.2)\", \"borderColor\":\"rgb(255, 99, 132)\", \"pointBackgroundColor\":\"rgb(255, 99, 132)\", \"pointBorderColor\":\"#fff\", \"pointHoverBackgroundColor\":\"#fff\", \"pointHoverBorderColor\":\"rgb(255, 99, 132)\" }, { \"label\":\"My Second Dataset\", \"data\":[28,48,40,19,96,27,100], \"fill\":true, \"backgroundColor\":\"rgba(54, 162, 235, 0.2)\", \"borderColor\":\"rgb(54, 162, 235)\", \"pointBackgroundColor\":\"rgb(54, 162, 235)\", \"pointBorderColor\":\"#fff\", \"pointHoverBackgroundColor\":\"#fff\", \"pointHoverBorderColor\":\"rgb(54, 162, 235)\" } ] }, \"options\":{ \"elements\":{ \"line\":{ \"tension\":0, \"borderWidth\":3 } } }}{% endchart %} 相关属性 名称 类型 描述 label String 图例和工具提示中的数据集的标签名 backgroundColor Color/Color[] 填充色 borderColor Color/Color[] 线的颜色 borderWidth Number/Number[] 线宽度 (以像素为单位) borderDash Number[] 破折号的长度和间距 参考 MDN borderDashOffset Number 偏移量 参考 MDN borderCapStyle String 线冒样式 参考 MDN borderJoinStyle String Line joint 样式 参考 MDN fill Boolean/String 区域填充色 lineTension Number 贝塞尔曲线张力。0 为直线。 pointBackgroundColor Color/Color[] 数据点填充色 pointBorderColor Color/Color[] 数据点边框色 pointBorderWidth Number/Number[] 数据点边框宽度 (以像素为单位) pointRadius Number/Number[] 数据点半径。0 为不显示点 pointStyle String/String[]/Image/Image[] 数据点样式 pointHitRadius Number/Number[] 对鼠标事件作出响应的非显示点的像素大小。 pointHoverBackgroundColor Color/Color[] 鼠标悬浮时，数据点背景颜色 pointHoverBorderColor Color/Color[] 鼠标悬浮时，数据点边框色 pointHoverBorderWidth Number/Number[] 鼠标悬浮时数据点的边框宽度 pointHoverRadius Number/Number[] 鼠标悬停时，数据点的半径大小 环状 / 饼状图效果・环状图 var ctx = document.getElementById('chart5358').getContext('2d'); var options = { \"type\":\"doughnut\", \"data\":{ \"labels\":[\"Red\",\"Blue\",\"Yellow\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[300,50,100], \"backgroundColor\":[\"rgb(255, 99, 132)\",\"rgb(54, 162, 235)\",\"rgb(255, 205, 86)\"] } ] } }; new Chart(ctx, options); 示例用法・环状图123456789101112131415{% chart 90% 300 %}{ \"type\":\"doughnut\", \"data\":{ \"labels\":[\"Red\",\"Blue\",\"Yellow\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[300,50,100], \"backgroundColor\":[\"rgb(255, 99, 132)\",\"rgb(54, 162, 235)\",\"rgb(255, 205, 86)\"] } ] }}{% endchart %} 效果・饼状图 var ctx = document.getElementById('chart8324').getContext('2d'); var options = { \"type\":\"pie\", \"data\":{ \"labels\":[\"Red\",\"Blue\",\"Yellow\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[300,50,100], \"backgroundColor\":[\"rgb(255, 99, 132)\",\"rgb(54, 162, 235)\",\"rgb(255, 205, 86)\"] } ] } }; new Chart(ctx, options); 示例用法・饼状图123456789101112131415{% chart 90% 300 %}{ \"type\":\"pie\", \"data\":{ \"labels\":[\"Red\",\"Blue\",\"Yellow\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[300,50,100], \"backgroundColor\":[\"rgb(255, 99, 132)\",\"rgb(54, 162, 235)\",\"rgb(255, 205, 86)\"] } ] }}{% endchart %} 相关属性 名称 类型 描述 label String 图例和提示中显示的标签名 backgroundColor Color[] 数据集中每个数据区域的填充色 borderColor Color[] 边框色 borderWidth Number[] 边框宽度 hoverBackgroundColor Color[] 鼠标悬浮时的填充色 hoverBorderColor Color[] 鼠标悬浮时边框色 hoverBorderWidth Number[] 鼠标悬浮时边框宽度 名称 类型 默认值 描述 cutoutPercentage Number 50 - for doughnut, 0 - for pie 从中间切出的图表的百分比。 rotation Number -0.5 * Math.PI 起始角度 circumference Number 2 * Math.PI 允许图形覆盖 animation.animateRotate Boolean true 如果为 true，则图表将使用旋转动画进行动画。该属性在 options.animation 对象中。 animation.animateScale Boolean false 如果为 true，则将动画从中心向外缩放图表。 极地图效果 var ctx = document.getElementById('chart5931').getContext('2d'); var options = { \"type\":\"polarArea\", \"data\":{ \"labels\":[\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[11,16,7,3,14], \"backgroundColor\":[\"rgb(255, 99, 132)\",\"rgb(75, 192, 192)\",\"rgb(255, 205, 86)\",\"rgb(201, 203, 207)\",\"rgb(54, 162, 235)\"] } ] } }; new Chart(ctx, options); 示例用法123456789101112131415{% chart 90% 300 %}{ \"type\":\"polarArea\", \"data\":{ \"labels\":[\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"], \"datasets\":[ { \"label\":\"My First Dataset\", \"data\":[11,16,7,3,14], \"backgroundColor\":[\"rgb(255, 99, 132)\",\"rgb(75, 192, 192)\",\"rgb(255, 205, 86)\",\"rgb(201, 203, 207)\",\"rgb(54, 162, 235)\"] } ] }}{% endchart %} 相关属性 名称 类型 描述 label String 在图例和工具提示中要显示数据集的标签 backgroundColor Color[] 填充色 borderColor Color[] 边框色 borderWidth Number[] 边框宽度 hoverBackgroundColor Color[] 鼠标悬浮时背景色 hoverBorderColor Color[] 鼠标悬浮时边框色 hoverBorderWidth Number[] 鼠标悬浮时边框宽度 气泡图效果 var ctx = document.getElementById('chart2100').getContext('2d'); var options = { \"type\":\"bubble\", \"data\":{ \"datasets\":[ { \"label\":\"First Dataset\", \"data\":[ {\"x\":20,\"y\":30,\"r\":15},{\"x\":40,\"y\":10,\"r\":10},{\"x\":24,\"y\":20,\"r\":10},{\"x\":28,\"y\":16,\"r\":15},{\"x\":36,\"y\":12,\"r\":10} ], \"backgroundColor\":\"rgb(255, 99, 132)\" } ] } }; new Chart(ctx, options); 示例用法12345678910111213141516{% chart 90% 300 %}{ \"type\":\"bubble\", \"data\":{ \"datasets\":[ { \"label\":\"First Dataset\", \"data\":[ {\"x\":20,\"y\":30,\"r\":15},{\"x\":40,\"y\":10,\"r\":10},{\"x\":24,\"y\":20,\"r\":10},{\"x\":28,\"y\":16,\"r\":15},{\"x\":36,\"y\":12,\"r\":10} ], \"backgroundColor\":\"rgb(255, 99, 132)\" } ] }}{% endchart %} 相关属性 名称 类型 可脚本化 可索引 默认值 backgroundColor Color Yes Yes 'rgba(0,0,0,0.1)' borderColor Color Yes Yes 'rgba(0,0,0,0.1)' borderWidth Number Yes Yes 3 data Object[] - - required hoverBackgroundColor Color Yes Yes undefined hoverBorderColor Color Yes Yes undefined hoverBorderWidth Number Yes Yes 1 hoverRadius Number Yes Yes 4 hitRadius Number Yes Yes 1 label String - - undefined pointStyle String Yes Yes circle radius Number Yes Yes 3 每个气泡的风格可以通过以下属性进行控制： 名称 描述 backgroundColor 七宝背景色 borderColor 气泡边框色 borderWidth 气泡边框宽度 (以像素为单位) pointStyle 气泡形状样式 radius 气泡半径（以像素为单位） 散点图效果 var ctx = document.getElementById('chart9599').getContext('2d'); var options = { type:'scatter', data:{ labels:['January','February','March','April','May','June','July'], datasets:[ { label:'My First dataset', borderColor:'rgb(255, 99, 132)', backgroundColor:'rgb(255, 99, 132)', data:[ {x:12,y:45,},{x:12,y:13,},{x:56,y:3,},{x:5,y:87,},{x:43,y:76,},{x:34,y:8,},{x:9,y:53,} ] }, { label:'My Second dataset', borderColor:'rgb(54, 162, 235)', backgroundColor:'rgb(54, 162, 235)', data:[ {x:56,y:12,},{x:7,y:12,},{x:87,y:24,},{x:34,y:45,},{x:65,y:27,},{x:8,y:37,},{x:24,y:89,} ] } ], options:{ title:{ display:true, text:'Chart.js Scatter Chart' }, } } }; new Chart(ctx, options); 示例用法1234567891011121314151617181920212223242526272829303132{% chart 90% 300 %}{ type:'scatter', data:{ labels:['January','February','March','April','May','June','July'], datasets:[ { label:'My First dataset', borderColor:'rgb(255, 99, 132)', backgroundColor:'rgb(255, 99, 132)', data:[ {x:12,y:45,},{x:12,y:13,},{x:56,y:3,},{x:5,y:87,},{x:43,y:76,},{x:34,y:8,},{x:9,y:53,} ] }, { label:'My Second dataset', borderColor:'rgb(54, 162, 235)', backgroundColor:'rgb(54, 162, 235)', data:[ {x:56,y:12,},{x:7,y:12,},{x:87,y:24,},{x:34,y:45,},{x:65,y:27,},{x:8,y:37,},{x:24,y:89,} ] } ], options:{ title:{ display:true, text:'Chart.js Scatter Chart' }, } }}{% endchart %} 相关属性 名称 类型 描述 borderColor Color/Color[] 点颜色 borderWidth Number/Number[] 线的宽度 (以像素为单位) borderDash Number[] 破折号的长度和间距。 参考 MDN borderDashOffset Number 偏移量 参考 MDN borderCapStyle String 线帽样式 参考 MDN borderJoinStyle String 线连接风格 参考 MDN cubicInterpolationMode String 离散的点之间的连接方式 fill Boolean/String 折线区域的填充方式 label String 在图例和工具提示中显示的数据集的标签。 lineTension Number 贝塞尔曲线张力。设置为 0 绘制直线。如果使用单调立方插值，则忽略此选项。 pointBackgroundColor Color/Color[] 点的填充色 pointBorderColor Color/Color[] 点的边框色 pointBorderWidth Number/Number[] 点边框宽度 (以像素为单位) pointRadius Number/Number[] 点的半径。如果设置为 0，则不显示。 pointStyle String/String[]/Image/Image[] 数据点的样式 pointHitRadius Number/Number[] 对鼠标事件作出响应的非显示点的像素大小。 pointHoverBackgroundColor Color/Color[] 鼠标悬浮时点背景颜色。 pointHoverBorderColor Color/Color[] 鼠标悬浮时点的边框色 pointHoverBorderWidth Number/Number[] 鼠标悬浮时点的边框宽度 pointHoverRadius Number/Number[] 鼠标悬浮时点的半径大小 showLine Boolean 如果设置 false，则不会为此数据集绘制线条。 spanGaps Boolean 如果为 true，则会在没有或为空数据的点之间绘制线条。如果为 false，则带有 NaN 数据的点会产生一个中断 steppedLine Boolean/String 是否显示为阶梯线 xAxisID String 绘制此数据集的 x 轴的 ID。如果未指定，则默认为第一个找到的 x 轴的 ID。 yAxisID String 绘制该数据集的 y 轴的 ID。如果未指定，则默认为第一个找到的 y 轴的 ID。 区域图效果 var ctx = document.getElementById('chart6137').getContext('2d'); var options = { \"type\":\"line\", \"data\":{ \"datasets\":[ { \"label\":\"Area Dataset\", \"data\":[10,40], \"fill\":1, \"borderColor\":\"rgb(54, 162, 235)\", \"backgroundColor\":\"rgba(255, 99, 132, 0.2)\", \"fill\":\"origin\" }, ] } }; new Chart(ctx, options); 示例用法1234567891011121314151617{% chart 90% 300 %}{ \"type\":\"line\", \"data\":{ \"datasets\":[ { \"label\":\"Area Dataset\", \"data\":[10,40], \"fill\":1, // 填充---&gt;区域图 \"borderColor\":\"rgb(54, 162, 235)\", \"backgroundColor\":\"rgba(255, 99, 132, 0.2)\", \"fill\":\"origin\" }, ] }}{% endchart %} 相关属性 模式 类型 值 绝对数据集索引 1 Number 1, 2, 3, ... 相对数据集索引 1 String '-1', '-2', '+1', ... 边界 2 String 'start', 'end', 'origin' 禁用 3 Boolean false 混合图表效果 var ctx = document.getElementById('chart6701').getContext('2d'); var options = { \"type\":\"bar\", \"data\":{ \"labels\":[\"January\",\"February\",\"March\",\"April\"], \"datasets\":[ { \"label\":\"Bar Dataset\", \"data\":[10,20,30,40], \"borderColor\":\"rgb(255, 99, 132)\", \"backgroundColor\":\"rgba(255, 99, 132, 0.2)\" }, { \"label\":\"Line Dataset\", \"data\":[10,20,30,40], \"type\":\"line\", \"fill\":false, \"borderColor\":\"rgb(54, 162, 235)\", }, { \"label\":\"Line Dataset2\", \"data\":[0,30,10,40], \"type\":\"line\", \"fill\":false, \"borderColor\":\"rgb(255, 0, 0)\", } ] }, \"options\":{ \"scales\":{ \"yAxes\":[ { \"ticks\":{ \"beginAtZero\":true } } ] } } }; new Chart(ctx, options); 示例用法1234567891011121314151617181920212223242526272829303132333435363738394041{% chart 90% 300 %}{ \"type\":\"bar\", \"data\":{ \"labels\":[\"January\",\"February\",\"March\",\"April\"], \"datasets\":[ { \"label\":\"Bar Dataset\", \"data\":[10,20,30,40], \"borderColor\":\"rgb(255, 99, 132)\", \"backgroundColor\":\"rgba(255, 99, 132, 0.2)\" }, { \"label\":\"Line Dataset\", \"data\":[10,20,30,40], \"type\":\"line\", \"fill\":false, \"borderColor\":\"rgb(54, 162, 235)\", }, { \"label\":\"Line Dataset2\", \"data\":[0,30,10,40], \"type\":\"line\", \"fill\":false, \"borderColor\":\"rgb(255, 0, 0)\", } ] }, \"options\":{ \"scales\":{ \"yAxes\":[ { \"ticks\":{ \"beginAtZero\":true } } ] } }}{% endchart %} 相关属性注意运用的 Chart 各自的属性即可。 申明文章基本转自shen-yu 大佬 shen-yuchatjs 中文文档 chatjs，并非原创，本人只是进行了总结和排版。","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://kangblogs.top/tags/Hexo/"},{"name":"Chart.js","slug":"Chart-js","permalink":"https://kangblogs.top/tags/Chart-js/"}]},{"title":"Vercel 托管博客","slug":"Blog-14","date":"2020-08-09T13:20:38.000Z","updated":"2021-07-27T07:21:32.000Z","comments":true,"path":"posts/eef3c540.html","link":"","permalink":"https://kangblogs.top/posts/eef3c540.html","excerpt":"","text":"前言 2021-07-27 时间飞逝，一年就这么过去了，Vercel 官网也更新了好几轮，但是大致操作流程并没有变化。该更新这篇文章了。 2020-08-09 本站已托管至 Vercel，但作为一名前端小白，昨天帮朋友托管博客到 Vercel 的过程中到处碰壁，就想写一篇博客记录一下。 注册登录点击 Vercel 官网 Vercel，并使用 GitHub 账户进行登录。 这里需要注意 GitHub 账户绑定的主邮箱📪，实测 QQ 邮箱会出现无法使用 GitHub 账户登陆 Vercel 的情况。 导入仓库登陆成功后进行静态界面的导入。 新建一个工程。 选择站点仓库。 配置团体或个人，直接跳过。 设置项目名称和框架，FRAMEWORK PRESET 选择 Other 并 Deploy。 等待导入成功，导入完成后会收到一封含有若干域名的邮件。 绑定并解析域名点击 Settings👉Domains👉输入自己的域名，并在域名提供商控制台进行域名解析（CNAME），值为 Vercel 提供的任一域名，并在 Vercel 中添加自己的域名。解析完成后即可通过自己的域名访问博客。 Congratulations!","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://kangblogs.top/tags/Hexo/"},{"name":"Vercel","slug":"Vercel","permalink":"https://kangblogs.top/tags/Vercel/"}]},{"title":"Butterfly 魔改 (涉及修改源码)","slug":"Blog-13","date":"2020-08-06T15:19:52.000Z","updated":"2020-08-09T12:39:20.000Z","comments":true,"path":"posts/4e36c581.html","link":"","permalink":"https://kangblogs.top/posts/4e36c581.html","excerpt":"","text":"此教程涉及修改源码 Butterfly 侧边栏引入一言背景在修改每页显示 7 篇文章后，出现了这种情况。这是完美主义（强迫症）的我所不能忍受的，有什么可以占据这里的呢？一言 开搞创建 card_hitokoto在主题配置文件 Butterfly/_config.yml 中的侧边栏设置中添加 card_hitokoto: enable: true 1234567891011121314151617181920212223242526272829303132333435aside: enable: true mobile: true # display on mobile position: right # left or right card_author: enable: true description: button: icon: fab fa-github text: Follow Me link: https://github.com/flipped-1121 card_announcement: enable: true content: “My love for &lt;font color=lime&gt;Ni&lt;/font&gt; cannot be measured with an &lt;font color=red&gt;int&lt;/font&gt;, not with a &lt;font color=deepskyblue&gt;long&lt;/font&gt;, and not even with an &lt;font color=gold&gt;array&lt;/font&gt;.&lt;font color=red&gt; It is out of bounds and infinite...&lt;/font&gt;” &lt;img src=\"https://cdn.jsdelivr.net/gh/flipped-1121/BlogPictures/flipped-1121-PIC/UFVAjx.gif\"&gt; card_recent_post: enable: true limit: 4 # if set 0 will show all sort: date # date or updated card_categories: enable: true limit: 8 # if set 0 will show all expand: none # none/true/false card_tags: enable: true limit: 40 # if set 0 will show all color: true card_archives: enable: true type: monthly # yearly or monthly format: MMMM YYYY # eg: YYYY年MM月 order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending limit: 8 # if set 0 will show all card_webinfo: true card_hitokoto: enable: true 添加 card_hitokoto在 Butterfly/layout/includes/widget/index.pug 末尾添加代码： 12if theme.aside.card_hitokoto.enable !=partial('includes/widget/card_hitokoto', {}, {cache:theme.fragment_cache}) 配置 card_hitokoto在 Butterfly/layout/includes/widget 目录下创建 card_hitokoto.pug 文件，内容为： 123456789101112131415161718192021222324.card-widget.card-hitokoto .card-content .item-headline i.fas.fa-quote-left span= _p('一言') #hitokoto :D 获取中... i#hitofrom :D 获取中... script(src='https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js') script(src='https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js') script. fetch('https://v1.hitokoto.cn') .then(function (res){ return res.json(); }) .then(function (data) { var hitokoto = document.getElementById('hitokoto'); hitokoto.innerText = data.hitokoto; var hitofrom = document.getElementById('hitofrom'); hitofrom.innerText = \" ——\" + data.from + ''; }) .catch(function (err) { console.error(err); }) 成功 小插曲一开始，用的接口为 https://api.uixsj.cn/hitokoto/w.php?code=js， 12345678910.card-widget.card-hitokoto .card-content .item-headline i.fas.fa-quote-left span= _p('一言') script(type='text/javascript' src='https://api.uixsj.cn/hitokoto/w.php?code=js') #xsjhitokoto script. xsjhitokoto() 由于此接口中含有 document.write()，前端小白的我通过一番百度、谷歌。。。。。。才知道 document.write() 向页面写入的时候，会将当前的页面清空。这就导致每次跳转界面的时候都会先出现此接口中的句子，必须手动刷新才会显示跳转界面。 自定义页面自定义页面的加载可能比 Hexo 渲染后的慢 本博客的导航、魔方、关于一级 Love 皆采用了自定义的页面，即跳过 Hexo 的渲染。 导航 魔方 关于 Love 以关于界面为例，找到并下载自己喜欢的界面的源码，在 /source/about/index.md 中的配置信息中添加 layout: false。 12345678---title: Aboutdate: 2020-06-16 23:47:54type: \"about\"layout: false 👈添加aside: falsecomments: false--- 再粘贴下载的源码，并在开头添加 {% raw %}，结尾处添加 {% endraw %}。 123456789{% raw %}......................................................................................界面源码.......................................................................................{% endraw %}","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://kangblogs.top/tags/Hexo/"},{"name":"Butterfly","slug":"Butterfly","permalink":"https://kangblogs.top/tags/Butterfly/"}]},{"title":"前端学习（六）","slug":"Blog-12","date":"2020-08-04T14:41:52.000Z","updated":"2020-08-04T14:41:52.000Z","comments":true,"path":"posts/7ded55b1.html","link":"","permalink":"https://kangblogs.top/posts/7ded55b1.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・CSS-01好久不见本着 “博客想写就写” 的原则（其实就是懒），终于点开了_posts 文件夹。 因本人习惯，笔记在 WebStorm 上呈现 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;CSS&lt;/title&gt; &lt;style&gt; p2 { color: cadetblue; } p3 { font-size: 26px; } &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;p1&gt;CSS&lt;/p1&gt;&lt;br&gt;&lt;p2&gt;CSS改变字体颜色&lt;/p2&gt;&lt;br&gt;&lt;p3&gt;CSS改变字体大小&lt;/p3&gt;&lt;/body&gt;&lt;/html&gt; 学习成果 初步认识 CSS（美化 HTML） style标签","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端学习（五）","slug":"Blog-11","date":"2020-07-21T15:47:54.000Z","updated":"2020-08-04T14:14:49.000Z","comments":true,"path":"posts/18e31e68.html","link":"","permalink":"https://kangblogs.top/posts/18e31e68.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・HTML-05因本人习惯，笔记在 WebStorm 上呈现 Form1.htmlForm2.html123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--使用表单目的是为了收集用户信息。在我们网页中，我们也需要跟用户进行交互,收集用户资料,此时就需要表单。--&gt;&lt;!--在HTML中,一个完整的表单通常由表单域、表单控件(也称为表单元素)和提示信息3个部分构成。--&gt;&lt;!--表单域是一个包含表单元素的区域。在HTML标签中，&lt;form&gt; 标签用于赵弹域,实现户信息的收集和传递。&lt;form&gt;会把它范围内的表单元素信息提交给服务器.--&gt;&lt;form action=\"index.html\"&gt; &lt;!--input表单元素--&gt; &lt;!-- button 定义可点击按钮(多数情况下,用于通过JavaScript启动脚本)。 checkbox 定义复选框（多选按钮）。 file 定义输入字段和“浏览\"按钮，供文件上传。 hidden 定义隐藏的输入字段。 image 定义图像形式的提交按钮。 password 定义密码字段。该字段中的字符被掩码。 radio 定义单选按钮。 reset 定义重置按钮。重置按钮会清除表单中的所有数据。 submit 定义提交按钮。提交按钮会把表单数据发送到服务器。 text 定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符。 color 创建一个允许用户使用颜色选择器，或输入兼容CSS语法的颜色代码的区域。 date 选取日、月、年。 datetime 选取时间、日、月、年。（UTC时间 | 世界统一时间、世界标准时间、国际协调时间） datetime-local 选取时间、日、月、年。（本地时间） month 选取月、年。 week 选取周和年。 time 选取时间。（小时和分钟） number 用于应该包含数值的输入域，还能够设定对所接受的数字的限定。 range 用于应该包含一定范围内数字值的输入域，range类型显示为滑动条，还能够设定对所接受的数字的限定。 search 用于搜索字段（搜索字段的表现类似常规文本字段）。 tel 用于应该包含电话号码的输入字段。 url 用于应该包含 URL 地址的输入字段。 email 用于应该包含电子邮件地址的输入字段。 --&gt; &lt;!-- 属性 属性值 描述 name 由用户自定义 定义input元素的名称 value 由用户自定义 规定input元素的值 checked checked 规定此input元素首次加载时应当被选中 maxlength 正整数 规定输入字段中的字符的最大长度 --&gt; &lt;input type=\"button\" onclick=\"alert('Hello World!')\" value=\"Click Me!\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 爱好 &lt;input type=\"checkbox\"&gt;篮球🏀 &lt;input type=\"checkbox\"&gt;游泳🏊 &lt;input type=\"checkbox\"&gt;跑步🏃 ‍&lt;br&gt;&lt;br&gt;&lt;br&gt; 上传头像 &lt;input type=\"file\" name=\"file\" value=\"HeadPortraits\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;input type=\"hidden\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;input type=\"image\" name=\"img\" value=\"wallpages\" src=\"https://cdn.jsdelivr.net/gh/flipped-1121/BlogPictures/flipped-1121-PIC/f059acc6ab8193a55cf3d30ad3a26133.png\" width=\"300px\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 密码 &lt;input type=\"password\" name=\"\" id=\"\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 性别 &lt;input type=\"radio\" name=\"sex\" value=\"male\" checked&gt;男 &lt;input type=\"radio\" name=\"sex\" value=\"female\"&gt;女 &lt;input type=\"radio\" name=\"sex\" value=\"unknown\"&gt;未知 &lt;br&gt;&lt;br&gt;&lt;br&gt; 重置 &lt;input type=\"reset\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 提交 &lt;input type=\"submit\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 用户名&lt;input type=\"text\" name=\"username\" value=\"\"&gt; &lt;!--&lt;input type=\"text\"&gt; 定义用于文本输入的单行输入字段--&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 颜色 &lt;input type=\"color\" value=\"#000000\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 日期 &lt;input type=\"date\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 本地时间 &lt;input type=\"datetime-local\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 年月 &lt;input type=\"month\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 年周 &lt;input type=\"week\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 时分 &lt;input type=\"time\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 数字 &lt;input type=\"number\" name=\"points\" min=\"1\" max=\"10\"&gt; &lt;!-- 属性 值 描述 max number 规定允许的最大值 min number 规定允许的最小值 step number 规定合法的数字间隔（如果 step=\"3\"，则合法的数是 -3,0,3,6 等） value number 规定默认值 --&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 范围 &lt;input type=\"range\" name=\"points\" min=\"1\" max=\"10\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 搜索 &lt;input type=\"search\"&gt; &lt;!--用于搜索域，比如站点搜索或 Google搜索，search域显示为常规的文本域。--&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 电话号码 &lt;input type=\"tel\"&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 网址 &lt;input type=\"url\"&gt; &lt;!-- 根据浏览器支持，在提交时能够自动验证 url 字段。 某些智能手机识别 url 类型，并向键盘添加 \".com\" 以匹配 url 输入。--&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; 邮箱 &lt;input type=\"email\"&gt; &lt;!-- 根据浏览器支持，能够在被提交时自动对电子邮件地址进行验证。 某些智能手机会识别 email 类型，并在键盘增加 \".com\" 以匹配电子邮件输入。--&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;表单&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--label标签--&gt;&lt;!--&lt;label&gt; 标签为 input 元素定义标注（标记）。label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。&lt;label&gt; 标签的 for 属性应当与相关元素的 id 属性相同。--&gt;&lt;form action=\"\"&gt;&lt;label for=\"work0\"&gt;C语言工程师&lt;/label&gt;&lt;input type=\"radio\" name=\"work\" id=\"work0\"&gt;&lt;br&gt;&lt;label for=\"work1\"&gt;Java工程师&lt;/label&gt;&lt;input type=\"radio\" name=\"work\" id=\"work1\"&gt;&lt;br&gt;&lt;label for=\"work2\"&gt;前端工程师&lt;/label&gt;&lt;input type=\"radio\" name=\"work\" id=\"work2\"&gt;&lt;/form&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;!--select标签--&gt;&lt;!--select 元素可创建单选或多选菜单。&lt;select&amp;&gt; 元素中的 &lt;option&gt; 标签用于定义列表中的可用选项。--&gt;&lt;form&gt;我是一名&lt;select name=\"work\" id=\"work3\"&gt; &lt;option value=\"1\"&gt;C语言工程师&lt;/option&gt; &lt;option value=\"1\"&gt;Java语言工程师&lt;/option&gt; &lt;option value=\"1\"&gt;Python工程师&lt;/option&gt; &lt;option value=\"1\"&gt;前端工程师&lt;/option&gt;&lt;/select&gt;&lt;/form&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;!--textarea标签--&gt;&lt;!--&lt;textarea&gt; 标签定义多行的文本输入控件。文本区中可容纳无限数量的文本，其中的文本的默认字体是等宽字体（通常是 Courier）。可以通过 cols 和 rows 属性来规定 textarea 的尺寸，不过更好的办法是使用 CSS 的 height 和 width 属性。注释：在文本输入区内的文本行间，用 \"%OD%OA\" （回车/换行）进行分隔。提示：可以通过 &lt;textarea&gt; 标签的 wrap 属性设置文本输入区内的换行模式。--&gt;&lt;form&gt; &lt;textarea name=\"guestbook\" id=\"1\" cols=\"30\" rows=\"10\"&gt;我想对你说：&lt;/textarea&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 学习成果","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端学习（四）","slug":"Blog-10","date":"2020-07-17T15:47:54.000Z","updated":"2020-07-17T15:47:54.000Z","comments":true,"path":"posts/777ddb2f.html","link":"","permalink":"https://kangblogs.top/posts/777ddb2f.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・HTML-04因本人习惯，笔记在 WebStorm 上呈现 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;列表&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--无序列表--&gt;&lt;!--无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。无序列表始于&lt;ul&gt;标签。每个列表项始于&lt;li&gt;--&gt;&lt;h2&gt;学习&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;准备阶段&lt;/li&gt; &lt;li&gt;理论学习&lt;/li&gt; &lt;li&gt;实际操作&lt;/li&gt; &lt;li&gt;实践总结&lt;/li&gt; &lt;li&gt;温故知新&lt;/li&gt;&lt;/ul&gt;&lt;!--有序列表--&gt;&lt;!--同样，有序列表也是一列项目，列表项目使用数字进行标记。有序列表始于&lt;ol&gt;标签。每个列表项始于&lt;li&gt;标签--&gt;&lt;h2&gt;学习&lt;/h2&gt;&lt;ol&gt; &lt;li&gt;准备阶段&lt;/li&gt; &lt;li&gt;理论学习&lt;/li&gt; &lt;li&gt;实际操作&lt;/li&gt; &lt;li&gt;实践总结&lt;/li&gt; &lt;li&gt;温故知新&lt;/li&gt;&lt;/ol&gt;&lt;!--1. &lt;ol&gt; &lt;/0l&gt;只能嵌套&lt;li&gt; &lt;/li&gt; ,直接在&lt;ol&gt; &lt;/0l&gt;标签中输入其他标签或者文字的做法是不被允许的。2. &lt;li&gt;与&lt;/li&gt;之间相当于- 个容器,可以容纳所有元素。3. 有序列表会带有自己样式属性,但在实际使用时, 我们会使用CSS来设置。--&gt;&lt;!--自定义列表--&gt;&lt;!--自定义列表不仅仅是一列项目，而是项目及其注释的组合。自定义列表以&lt;dl&gt;标签开始。每个自定义列表项以&lt;dt&gt;开始。每个自定义列表项的定义以&lt;dd&gt;开始--&gt;&lt;dl&gt; &lt;dt&gt;学习&lt;/dt&gt; &lt;dd&gt;准备阶段&lt;/dd&gt; &lt;dd&gt;理论学习&lt;/dd&gt; &lt;dd&gt;实际操作&lt;/dd&gt; &lt;dd&gt;实践总结&lt;/dd&gt; &lt;dd&gt;温故知新&lt;/dd&gt;&lt;/dl&gt;&lt;/body&gt;&lt;/html&gt; 学习心得","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端学习（三）","slug":"Blog-09","date":"2020-07-15T15:47:54.000Z","updated":"2020-07-15T15:47:54.000Z","comments":true,"path":"posts/c050c24a.html","link":"","permalink":"https://kangblogs.top/posts/c050c24a.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・HTML-03因本人习惯，笔记在 WebStorm 上呈现 Table1.htmlTable2.html123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;表格&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;王五&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;table align=\"center\"&gt; &lt;!--\"align\"属性规定表格相对于周围元素的对齐方式。 通常来说，HTML表格的前后都会出现折行。通过运用\"align\"属性，可实现其他HTML元素围绕表格的效果。--&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;王五&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;table align=\"center\" border=\"1\"&gt; &lt;!--\"border\"属性规定规定围绕表格的边框的宽度。 border 属性会为每个单元格应用边框，并用边框围绕表格。 如果\"border\"属性的值发生改变，那么只有表格周围边框的尺寸会发生变化。表格内部的边框则是 1 像素宽。 提示：设置 border=\"0\"，可以显示没有边框的表格。 从实用角度出发，最好不要规定边框，而是使用 CSS 来添加边框样式和颜色。--&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;王五&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;table align=\"center\" border=\"1\" cellpadding=\"10\"&gt; &lt;!--\"cellpadding\"属性规定单元边沿与其内容之间的空白。 注释：请勿将该属性与\"cellspacing\"属性相混淆，\"cellspacing\"属性规定的是单元之间的空间。 从实用角度出发，最好不要规定\"cellpadding\"，而是使用 CSS 来添加内边距。--&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;王五&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;table align=\"center\" border=\"1\" cellpadding=\"10\" cellspacing=\"10\"&gt; &lt;!--\"cellspacing\"属性规定单元格之间的空间。 注释：请勿将该属性与\"cellpadding\"属性相混淆，\"cellpadding\"属性规定的是单元边沿与单元内容之间的空间。--&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;王五&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;表格&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--合并单元格--&gt;&lt;!--1. 先确定是跨行还是跨列合并。 2.找到目标单元格.写上合并方式=合并的单元格数量。 3. 删除多余的单元格。--&gt;&lt;table border=\"1\" cellpadding=\"50\"&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;table border=\"1\" cellpadding=\"50\"&gt; &lt;tr&gt; &lt;td colspan=\"2\"&gt;&lt;/td&gt; &lt;!--colspan 属性规定单元格可横跨的列数。--&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;table border=\"1\" cellpadding=\"50\"&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=\"2\"&gt;&lt;/td&gt; &lt;!--rowspan 属性规定单元格可横跨的行数。--&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 学习心得 表格标签属性需多加练习","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端学习（二）","slug":"Blog-08","date":"2020-07-13T15:47:54.000Z","updated":"2020-07-13T15:47:54.000Z","comments":true,"path":"posts/8d4e6118.html","link":"","permalink":"https://kangblogs.top/posts/8d4e6118.html","excerpt":"记录前端学习","text":"记录前端学习 学习之路・HTML-02因本人习惯，笔记在 WebStorm 上呈现 Img.htmlHref.htmlDemo.html1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;图像标签&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--键值对形式--&gt;&lt;!--当图片无法显示时，显示\"alt\"的值--&gt;&lt;!--alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。假设由于下列原因用户无法查看图像，alt 属性可以为图像提供替代的信息： 1.网速太慢 2.src 属性中的错误 3.浏览器禁用图像 4.用户使用的是屏幕阅读器--&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一段话，仅此而已\"&gt;&lt;!--当鼠标放至图片上，显示\"title\"的值--&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一段话，仅此而已\" title=\"一段话，仅此而已\"&gt;&lt;!--图片宽度\"width\"(像素)--&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一段话，仅此而已\" title=\"一段话，仅此而已\" width=\"520\"&gt;&lt;!--图片高度\"height\"(像素)--&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一段话，仅此而已\" title=\"一段话，仅此而已\" height=\"520\"&gt;&lt;!--图片边框\"border\"(像素)--&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一段话，仅此而已\" title=\"一段话，仅此而已\" border=\"30\"&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\" xmlns=\"http://www.w3.org/1999/html\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;超链接标签&lt;/title&gt;&lt;/head&gt;&lt;br&gt;&lt;!--外部链接--&gt;&lt;!--需追加\"http://\"--&gt;&lt;!--默认当前页面打开--&gt;&lt;a href=\"https://kangblogs.top\"&gt;Kang's Blog&lt;/a&gt;&lt;!--新窗口打开链接\"target=_blank\"--&gt;&lt;a href=\"https://kangblogs.top\" target = _blank&gt;Kang's Blog&lt;/a&gt;&lt;!--内部链接--&gt;&lt;a href=\"Img.html\"&gt;这是一个内部链接&lt;/a&gt;&lt;!--空链接 --&gt;&lt;a href=\"#\"&gt;这是一个空链接&lt;/a&gt;&lt;!--网页元素连接 将图片插入网页元素中--&gt;&lt;a href=\"https://kangblogs.top\"&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一张图片\"&gt;&lt;/a&gt;&lt;!--下载链接 点击下载文件--&gt;&lt;a href=\"IDM免注册码.zip\"&gt;点击下载&lt;/a&gt;&lt;!--锚点链接 点击跳转到指定位置--&gt;&lt;a href=\"#背景\" id=\"1\"&gt;背景&lt;/a&gt;&lt;a href=\"#准备\"&gt;准备工作&lt;/a&gt;&lt;a href=\"#初步\"&gt;初步学习&lt;/a&gt;&lt;a href=\"#分析\"&gt;分析问题&lt;/a&gt;&lt;a href=\"#深入\"&gt;深入学习&lt;/a&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;h3 id=\"背景\"&gt;我不知道背景应该写些啥，所以我就乱写一通，但是我猜你应该跳转到这了&lt;/h3&gt;&lt;a href=\"#1\"&gt;返回顶部&lt;/a&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;h3 id=\"准备\"&gt;我不知道准备应该写些啥，所以我就乱写一通，但是我猜你应该跳转到这了&lt;/h3&gt;&lt;a href=\"#1\"&gt;返回顶部&lt;/a&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;h3 id=\"初步\"&gt;我不知道初步应该写些啥，所以我就乱写一通，但是我猜你应该跳转到这了&lt;/h3&gt;&lt;a href=\"#1\"&gt;返回顶部&lt;/a&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;h3 id=\"分析\"&gt;我不知道分析应该写些啥，所以我就乱写一通，但是我猜你应该跳转到这了&lt;/h3&gt;&lt;a href=\"#1\"&gt;返回顶部&lt;/a&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;h3 id=\"深入\"&gt;我不知道深入应该写些啥，所以我就乱写一通，但是我猜你应该跳转到这了&lt;/h3&gt;&lt;a href=\"#1\"&gt;返回顶部&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;阶段练习&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;a href=\"#2016\"&gt;元旦晚会&lt;/a&gt;&lt;h1 id=\"1\"&gt;Love Story&lt;/h1&gt;We were both young when I first saw you.&lt;br&gt;你我初遇时都还年轻，&lt;br&gt;I close my eyes and the flashbackstarts:&lt;br&gt;我闭上眼睛，往事又在脑海中重现：&lt;br&gt;I'm standing there on a balcony in summer air.&lt;br&gt;站在阳台上，空气里弥漫着是夏天的味道。&lt;br&gt;See thelights, see the party, the ball gowns.&lt;br&gt;看着灯火弥漫，看着舞会繁华，看着盛装华丽；&lt;br&gt;See you make your way through the crowd&lt;br&gt;也看着你从人群中挤出来，&lt;br&gt;and say hello;&lt;br&gt;腼腆一笑，说声你好；&lt;br&gt;Little did I know&lt;br&gt;至少让我知道&lt;br&gt;That you were Romeo;you were throwing pebbles,&lt;br&gt;你就是我心中的“罗密欧”。你悄悄朝我家扔石子，&lt;br&gt;And my daddy said, \"Stay away from Juliet.\"&lt;br&gt;我刚要出来，却听父亲说：“不要去招惹‘朱丽叶’”！&lt;br&gt;AndI was crying on the staircase,&lt;br&gt;我只好躲在楼梯旁呜咽，&lt;br&gt;begging you, 'Please, don't go.'&lt;br&gt;祈祷着“你不要走！”&lt;br&gt;And Isaid,&lt;br&gt;所以我说：&lt;br&gt;\"Romeo, take me somewhere we can be alone.&lt;br&gt;“罗密欧，让我们私奔去一个能独处的地方吧，&lt;br&gt;I'll be waiting; allthere's left to do is run.&lt;br&gt;我会一直等待，因为只有逃离才能补救这次机会；&lt;br&gt;You'll be the prince and I'll be the princess&lt;br&gt;那时你就是王子，而我就成为你的公主，&lt;br&gt;It'sa love story baby just say 'Yes.'&lt;br&gt;这是一个爱情故事，亲爱你会答应！”&lt;br&gt;So I sneak out to the garden to see you.&lt;br&gt;于是，我在黑夜偷偷溜到小花园去见你，&lt;br&gt;Wekeep quiet 'cause we're dead if they knew.&lt;br&gt;我们互相压低声响，被他们发现可就完蛋了！&lt;br&gt;So close your eyes; escape this town for alittle while.&lt;br&gt;闭上你的眼睛吧，离开这喧嚣的小镇，去往我们的世外桃源。&lt;br&gt;'Cause you were Romeo, I was a scarlet letter,&lt;br&gt;”正因有你，我才能在生命中释放光彩，&lt;br&gt;Andmy daddy said \"Stay away from Juliet,\"&lt;br&gt;可我爸爸却气急败坏地叫你离我远一点，&lt;br&gt;But you were everything to me; I was beggingyou, 'Please, don't go,'&lt;br&gt;但我又怎能承受没有你的痛苦？所以我默默祈祷着你不要走。”&lt;br&gt;And I said,&lt;br&gt;然后我悄悄说：&lt;br&gt;\"Romeo, take me somewherewe can be alone.&lt;br&gt;“罗密欧，让我们私奔去一个能独处的地方吧，&lt;br&gt;I'll be waiting; all there's left to do is run.&lt;br&gt;我会在这等待着你，因为这才能逃出他们束缚的牢笼！&lt;br&gt;You'llbe the prince and I'll be the princess&lt;br&gt;那时你就是王子，而我是公主，&lt;br&gt;It's a love story baby just say 'Yes.'&lt;br&gt;这是一个爱情故事，亲爱的你能答应我么？”&lt;br&gt;Romeosave me; they're tryin' to tell me how to feel.&lt;br&gt;亲爱的，拯救我这痛苦的灵魂吧，他们总是要左右我的思想，&lt;br&gt;This love is difficult, butit's real.&lt;br&gt;这场恋爱虽有别人的干涉，却是真真切切的！&lt;br&gt;Don't be afraid; we'll make it out of this mess.&lt;br&gt;不要担惊受怕，我们终究会打破困境；&lt;br&gt;It'sa love story baby just say 'Yes.'&lt;br&gt;这是一个爱情故事，亲爱的只能说是！&lt;br&gt;I got tired of waiting,&lt;br&gt;有时我会厌倦等待，&lt;br&gt;Wonderingif you were ever comin' around.&lt;br&gt;渐渐的怀疑你还会出现现在我身旁吗？&lt;br&gt;My faith in you was fading&lt;br&gt;坚定的信念，仿佛也开始动摇；&lt;br&gt;When Imet you on the outskirts of town.&lt;br&gt;但当我在小镇再和你一次约会时，&lt;br&gt;And I said,&lt;br&gt;我却说：&lt;br&gt;\"Romeo save me I've been feelingso alone.&lt;br&gt;“亲爱的，救救我！我不能忍受片刻孤独的感觉！&lt;br&gt;I keep waiting for you but you never come.&lt;br&gt;我会等待你，虽然你无影无踪。&lt;br&gt;Is thisin my head? I don't know what to think\"&lt;br&gt;这是我的大脑吗？虽然我不知我在想些什么，&lt;br&gt;He knelt to the ground and pulled out a ringand said,&lt;br&gt;可他却单膝跪地，虔诚地说：&lt;br&gt;\"Marry me, Juliet. you'll never have to bealone.&lt;br&gt;“嫁给我吧，亲爱的朱丽叶，你此时永不会感到孤独寂寞；&lt;br&gt;I love you and that's all I really know.&lt;br&gt;你我都知道我深爱着你；&lt;br&gt;I talked toyour dad, go pick out a white dress;&lt;br&gt;我已经和你爸爸谈过了，现在换上一条白裙子吧！&lt;br&gt;It's a love story baby just say 'Yes.'&lt;br&gt;这是一个爱情故事，亲爱的，你不要离开我！&lt;br&gt;Oh,oh.&lt;br&gt;哦，这一切都不可思议，&lt;br&gt;We were both young when I first saw you&lt;br&gt;但初遇时你我都还年轻。&lt;br&gt;&lt;a href=\"#1\"&gt;点击返回顶部&lt;/a&gt;&lt;h2 id=\"2016\"&gt;2016年底的元旦晚会&lt;/h2&gt;&lt;img src=\"0ff466031165937ed271df681897d215.jpg\" alt=\"一张图片\" title=\"一张图片\"&gt;&lt;p&gt;清晰地记得那&lt;strong&gt;耳机&lt;/strong&gt;，那&lt;i&gt;略显&lt;/i&gt;昏暗的环境&lt;/p&gt;&lt;p&gt;那人，&lt;u&gt;那电影&lt;/u&gt;，&lt;s&gt;可谁又在乎&lt;/s&gt;&lt;/p&gt;&lt;a href=\"https://cdn.jsdelivr.net/gh/flipped-1121/BlogPictures/flipped-1121-PIC/Blog6.png\" target=\"_blank\"&gt;谁又在乎呢&lt;/a&gt;&lt;div&gt;今天是2020/07/03&lt;/div&gt;&lt;span&gt;现在是19:51&lt;/span&gt;&lt;a href=\"#\"&gt;这是一个空链接&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; 学习心得 Get 两个标签 逐渐熟练标签规则","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端学习（一）","slug":"Blog-07","date":"2020-07-11T15:47:54.000Z","updated":"2020-07-11T15:47:54.000Z","comments":true,"path":"posts/bd588dc0.html","link":"","permalink":"https://kangblogs.top/posts/bd588dc0.html","excerpt":"记录前端学习","text":"记录前端学习 背景二十天搭建博客的经历，让我深知自己前端知识之贫乏，盯一下午大佬的魔改教程也是经常的事，到处碰壁让我意识到，应该要系统地学习前端知识。 准备 学习渠道：B 站 开发工具：WebStorm 学习之路・HTML-01因本人习惯，笔记在 WebStorm 呈现 Hpbr.htmlCharacter.htmlBox.html12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;HelloWorld&lt;/title&gt;&lt;/head&gt;&lt;br&gt;&lt;!--标题标签--&gt;&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h3&gt;三级标题&lt;/h3&gt;&lt;h4&gt;四级标题&lt;/h4&gt;&lt;h5&gt;五级标题&lt;/h5&gt;&lt;h6&gt;六级标题&lt;/h6&gt;&lt;!--段落标签--&gt;&lt;p&gt;当杨花落尽 马失前蹄 与其感叹世事无常 时节交替 不如忘却身后的影子 面对那属于你的太阳 当你面朝大海 心向暖阳 春已到 花即开 当星河璀璨 万籁俱寂 与其无奈闲人几何 美景无人赏 不如拭去眼角的秋霜 微笑于那醉人的月光 当你身临空域 胸中涌浪 星已亮 光即照 当花草皆烬 雁过雪飘 与其感伤情错于人 世故弄今糟 不如拈灰造墨 潇洒看今朝 当你手握枯笔 思绪横跳 文已成 情即烧&lt;/p&gt;&lt;!--换行标签--&gt;&lt;br&gt;当杨花落尽&lt;/br&gt;马失前蹄&lt;/br&gt; 与其感叹世事无常 时节交替 不如忘却身后的影子 面对那属于你的太阳 当你面朝大海 心向暖阳 春已到 花即开&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;文本格式化&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--加粗标签--&gt;&lt;p&gt;这是&lt;strong&gt;加粗&lt;/strong&gt;标签&lt;/p&gt;&lt;p&gt;这是&lt;b&gt;加粗&lt;/b&gt;标签&lt;/p&gt;&lt;!--斜体标签--&gt;&lt;p&gt;这是&lt;em&gt;斜体&lt;/em&gt;标签&lt;/p&gt;&lt;p&gt;这是&lt;i&gt;斜体&lt;/i&gt;标签&lt;/p&gt;&lt;!--删除线标签--&gt;&lt;p&gt;这是&lt;del&gt;删除线&lt;/del&gt;标签&lt;/p&gt;&lt;p&gt;这是&lt;s&gt;删除线&lt;/s&gt;标签&lt;/p&gt;&lt;!--下划线标签--&gt;&lt;p&gt;这是&lt;ins&gt;下划线&lt;/ins&gt;标签&lt;/p&gt;&lt;p&gt;这是&lt;u&gt;下划线&lt;/u&gt;标签&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html lang=\"zh-CN\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;盒子标签&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--div标签--&gt;&lt;div&gt;大盒子，占一行&lt;/div&gt;&lt;div&gt;大盒子，占一行&lt;/div&gt;&lt;div&gt;大盒子，占一行&lt;/div&gt;&lt;!--span标签--&gt;&lt;span&gt;小盒子&lt;/span&gt;&lt;span&gt;小盒子&lt;/span&gt;&lt;span&gt;小盒子&lt;/span&gt;&lt;/body&gt;&lt;/html&gt; 学习心得 标签语言，学习成本较低 Error 几率小 有兴趣，有乐趣","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"心想随记 (二)","slug":"Blog-06","date":"2020-06-30T15:47:54.000Z","updated":"2020-06-30T15:47:54.000Z","comments":true,"path":"posts/baf674c1.html","link":"","permalink":"https://kangblogs.top/posts/baf674c1.html","excerpt":"二十岁，一个尴尬的年龄","text":"二十岁，一个尴尬的年龄 &nbsp; &nbsp; 又到了做什么都是一个人的年龄 在错误的时间遇到自以为对的人 不要太认真，会输得很惨 永远不要以为自己有多了解一个人 学会微笑","categories":[],"tags":[{"name":"感悟","slug":"感悟","permalink":"https://kangblogs.top/tags/%E6%84%9F%E6%82%9F/"},{"name":"壁纸","slug":"壁纸","permalink":"https://kangblogs.top/tags/%E5%A3%81%E7%BA%B8/"}]},{"title":"800 字？手写？不可能！！！","slug":"Blog-05","date":"2020-06-20T15:47:54.000Z","updated":"2020-06-20T15:47:54.000Z","comments":true,"path":"posts/d6980725.html","link":"","permalink":"https://kangblogs.top/posts/d6980725.html","excerpt":"小伙儿参加了学校的一个学时活动，原以为水水就过去了，报名后发现事实并没那么简单","text":"小伙儿参加了学校的一个学时活动，原以为水水就过去了，报名后发现事实并没那么简单 &nbsp; &nbsp; 利用 Word 宏 实现手写效果 背景2019 年 9 月，我第一次背上行囊离开生我养我的家乡，开启美好的大学生活，原以为高中老师嘴中那自由的新天地在向我疯狂招手，在得知【学时】制度 (大学四年一共要修满 240 个学时 ——&gt; 及格；400——&gt; 满分) 后，我宛如再次被 “囚禁” 的鸟儿，“什么，参加活动才有学时？！还计分？？🤬🤬🤬”，自此以后 六月是我国的安全生产月，但由于疫情的影响，学时活动都只能在网上进行，原以为可以水水学时，但是但是但是 &nbsp; 开始操作【不少于 800 字】、【纸质扫描版】…… 让原本不富裕的家庭雪上加霜。要说科技改变生活，不无道理。 懒人改变生活 快速地打开百毒，优雅地输入 “手写体”，下载 ——&gt; 解压 ——&gt; 安装字体，兴致冲冲地打开 Word，嘴角疯狂上扬，就这？一番捣鼓后，800 多字的读后感完成了，但是又出现了问题 再次操作写得太整齐了。办法总是有的，一顿操作后，在知乎上发现了前人栽的树 UncleSugar 的回答 通过 “UncleSugar” 大佬的方法完成 “手写 800 字” 任务，附上最终成品 [一张]。 我一共下载了三款字体【** 陈静的字完整版】、【萌妹子字体】、【李国夫手写字体 **】。也可以根据自己的需要和喜好去下载，字体相似度越高越好。 疯狂操作打开 Word，【左下角 “选项”】——&gt;【左侧 “信任中心”】——&gt;【信任中心设置】——&gt; 勾选【启用所有宏】 &nbsp; 创建宏 删除自动生成的代码 1234567Sub 字体修改()'' 字体修改 宏''End Sub 添加代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162Sub 字体修改()'' 字体修改 宏' Dim R_Character As Range Dim FontSize(5) ' 字体大小在5个值之间进行波动，可以改写 FontSize(1) = \"21\" FontSize(2) = \"21.5\" FontSize(3) = \"22\" FontSize(4) = \"22.5\" FontSize(5) = \"23\" Dim FontName(3) '字体名称在三种字体之间进行波动，可改写，但需要保证系统拥有下列字体 FontName(1) = \"陈静的字完整版\" FontName(2) = \"萌妹子体\" FontName(3) = \"liguofu\" Dim ParagraphSpace(5) '行间距 在一定以下值中均等分布，可改写 ParagraphSpace(1) = \"12\" ParagraphSpace(2) = \"13\" ParagraphSpace(3) = \"20\" ParagraphSpace(4) = \"7\" ParagraphSpace(5) = \"12\" '不懂原理的话，不建议修改下列代码 For Each R_Character In ActiveDocument.Characters VBA.Randomize R_Character.Font.Name = FontName(Int(VBA.Rnd * 3) + 1) R_Character.Font.Size = FontSize(Int(VBA.Rnd * 5) + 1) R_Character.Font.Position = Int(VBA.Rnd * 3) + 1 R_Character.Font.Spacing = 0 Next Application.ScreenUpdating = True For Each Cur_Paragraph In ActiveDocument.Paragraphs Cur_Paragraph.LineSpacing = ParagraphSpace(Int(VBA.Rnd * 5) + 1) Next Application.ScreenUpdating = TrueEnd Sub 快捷键 F5，运行，即可返回 Word 查看效果，可以在调整调整字体大小，使其更加自然。大功告成！ “ 我是此间少年郎，你是天上明月光。 ”","categories":[],"tags":[{"name":"分享","slug":"分享","permalink":"https://kangblogs.top/tags/%E5%88%86%E4%BA%AB/"}]},{"title":"心想随记 (一)","slug":"Blog-04","date":"2020-06-19T15:47:54.000Z","updated":"2020-06-19T15:47:54.000Z","comments":true,"path":"posts/15c7efa3.html","link":"","permalink":"https://kangblogs.top/posts/15c7efa3.html","excerpt":"夜深了，就容易多想🎈🎈🎈","text":"夜深了，就容易多想🎈🎈🎈 &nbsp; &nbsp; 可以回头看，别往回走 删除心灵的垃圾，每天刷新自己，这样才能重获新生！ 对过去，要淡；对现在，要惜；对未来，要信。 活得简单不难，只需懂得为自己而活，为美好而生，为幸福而做。 看淡一些，好善一点 不念过往，做好自己","categories":[],"tags":[{"name":"感悟","slug":"感悟","permalink":"https://kangblogs.top/tags/%E6%84%9F%E6%82%9F/"},{"name":"壁纸","slug":"壁纸","permalink":"https://kangblogs.top/tags/%E5%A3%81%E7%BA%B8/"}]},{"title":"✏Java 笔记 ——IO 流📑","slug":"Blog-03","date":"2020-06-15T15:47:54.000Z","updated":"2020-06-15T15:47:54.000Z","comments":true,"path":"posts/e34f2128.html","link":"","permalink":"https://kangblogs.top/posts/e34f2128.html","excerpt":"Java 学习 ——IO 流🌦🌦🌦","text":"Java 学习 ——IO 流🌦🌦🌦 &nbsp; &nbsp; Tips什么是字节流？字节流 —— 传输过程中，传输数据的最基本单位是字节的流。 什么是字符流？字符流 —— 传输过程中，传输数据的最基本单位是字符的流。 字符编码方式不同，有时候一个字符使用的字节数也不一样，比如 ASCLL 方式编码的字符，占一个字节；而 UTF-8 方式编码的字符，一个英文字符需要一个字节，一个中文需要三个字节。 字节数据是二进制形式的，要转成我们能识别的正常字符，需要选择正确的编码方式。我们生活中遇到的乱码问题就是字节数据没有选择正确的编码方式来显示成字符。 从本质上来讲，写数据（即输出）的时候，字节也好，字符也好，本质上都是没有标识符的，需要去指定编码方式。 但读数据的时候，如果我们需要去 “看数据”，那么字节流的数据需要指定字符编码方式，这样我们才能看到我们能识别的字符；而字符流，因为已经选择好了字符编码方式，通常不需要再改了（除非定义的字符编码方式与数据原有的编码方式不一致！） 在传输方面上，由于计算机的传输本质都是字节，而一个字符由多个字节组成，转成字节之前先要去查表转成字节，所以传输时有时候会使用缓冲区。 字节输入流 InputStream FileInputStream BufferedInputStream【BufferedInputStream 不是 InputStream 的直接实现子类，是 FilterInputStream 的子类】 区别与用途 InputStream 是字节输入流的抽象基类，InputStream 作为基类，给它的基类定义了几个通用的函数： read (byte [] b)：从流中读取 b 的长度个字节的数据存储到 b 中，返回结果是读取的字节个数（当再次读时，如果返回 **-1** 说明到了结尾，没有了数据） read (byte [] b, int off, int len)：从流中从 off 的位置开始读取 len 个字节的数据存储到 b 中，返回结果是实际读取到的字节个数（当再次读时，如果返回 - 1 说明到了结尾，没有了数据） close ()：关闭流，释放资源。 FileInputStream 主要用来操作文件输入流，它除了可以使用基类定义的函数外，它还实现了基类的 read () 函数（无参的）： read (): 从流中读取 1 个字节的数据，返回结果是一个 int，（如果编码是以一个字节一个字符的，可以尝试转成 char，用来查看数据）。 BufferedInputStream 带有缓冲的意思，普通的读是从硬盘里面读，而带有缓冲区之后，BufferedInputStream 已经提前将数据封装到内存中，内存中操作数据要快，所以它的效率要要非缓冲的要高。它除了可以使用基类定义的函数外，它还实现了基类的 read () 函数（无参的）： read (): 从流中读取 1 个字节的数据，返回结果是一个 int，（如果编码是以一个字节一个字符的，可以尝试转成 char，用来查看数据）。 使用 InputStream 是抽象基类，所以它不可以创建对象，但它可以用来 “接口化编程”，因为大部分子类的函数基类都有定义，所以利用基类来调用函数。 FileInputStream 是用来读文件数据的流，所以它需要一个文件对象用来实例化，这个文件可以是一个 File 对象，也可以是文件名路径字符串。 BufferedInputStream 是一种封装别的流以提高效率的流，所以它的初始化需要一个的 InputStream 流对象。 字节输出流 OutputStream FileOutputStream BufferedOutputStream【BufferedOutputStream 不是 OutputStream 的直接实现子类，是 FilterOutputStream 的子类】 区别与用途 OutputStream 是字节输出流的基类，OutputStream 作为基类，给它的基类定义了几个通用的函数： write (byte [] b): 将 b 的长度个字节数据写到输出流中。 write (byte [] b,int off,int len): 从 b 的 off 位置开始，获取 len 个字节数据，写到输出流中。 flush (): 刷新输出流，把数据马上写到输出流中。 close (): 关闭流，释放系统资源。 FileOutputStream 是用于写文件的输出流，它除了可以使用基类定义的函数外，还实现了 OutputStream 的抽象函数 write (int b): write (int b): 将 b 转成一个字节数据，写到输出流中。 BufferedOutputStream 像上面那个 BufferedInputStream 一样，都可以提高效率。它除了可以使用基类定义的函数外，它还实现了 OutputStream 的抽象函数 write (int b): write (int b): 将 b 转成一个字节数据，写到输出流中。 使用 OutputStream 是抽象基类，所以它不能实例化，但它可以用于接口化编程。 FileOutputStream 是用于写文件的输出流，所以它需要一个文件作为实例化参数，这个文件可以是 File 对象，也可以是文件路径字符串。【如果文件不存在，那么将自动创建】【FileOutputStream 实例化时可以给第二个参数，第二个参数是是否使用追加写入默认，为 true 时代表在原有文件内容后面追加写入数据，默认为 false】 BufferedOutputStream 需要一个输出流作为实例化参数。 字符输入流 Reader InputStreamReader FileReader BufferedReader 区别与用途 Reader 是字符输入流的抽象基类，它定义了以下几个函数： read ()：读取单个字符，返回结果是一个 int，需要转成 char; 到达流的末尾时，返回 - 1 read (char [] cbuf): 读取 cbuf 的长度个字符到 cbuf 这种，返回结果是读取的字符数，到达流的末尾时，返回 - 1 close ()：关闭流，释放占用的系统资源。 InputStreamReader 可以把 InputStream 中的字节数据流根据字符编码方式转成字符数据流。它除了可以使用基类定义的函数，它自己还实现了以下函数： read (char [] cbuf, int offset, int length) ：从 offset 位置开始，读取 length 个字符到 cbuf 中，返回结果是实际读取的字符数，到达流的末尾时，返回 - 1 FileReader 可以把 FileInputStream 中的字节数据转成根据字符编码方式转成字符数据流。 BufferedReader 可以把字符输入流进行封装，将数据进行缓冲，提高读取效率。它除了可以使用基类定义的函数，它自己还实现了以下函数： read (char [] cbuf, int offset, int length) ：从 offset 位置开始，读取 length 个字符到 cbuf 中，返回结果是实际读取的字符数，到达流的末尾时，返回 - 1 readLine ()：读取一个文本行，以行结束符作为末尾，返回结果是读取的字符串。如果已到达流末尾，则返回 null 使用 Reader 是一个抽象基类，不能实例化，但可以用于接口化编程。 InputStreamReader 需要一个字节输入流对象作为实例化参数。还可以指定第二个参数，第二个参数是字符编码方式，可以是编码方式的字符串形式，也可以是一个字符集对象。 FileReader 需要一个文件对象作为实例化参数，可以是 File 类对象，也可以是文件的路径字符串。 BufferReader 需要一个字符输入流对象作为实例化参数。 字符输出流 Writer OutputStreamWriter FileWriter BufferedWriter 区别与用途 Writer 是字符输出流的抽象基类， , 它定义了以下几个函数 write (char [] cbuf): 往输出流写入一个字符数组。 write (int c)：往输出流写入一个字符。 write (String str)：往输出流写入一串字符串。 write (String str, int off,int len) : 往输出流写入字符串的一部分。 close () ：关闭流，释放资源。【这个还是抽象的，写出来是说明有这个关闭功能】 flush ()：刷新输出流，把数据马上写到输出流中。【这个还是抽象的，写出来是说明有这个关闭功能】 OutputStreamWriter 可以使我们直接往流中写字符串数据，它里面会帮我们根据字符编码方式来把字符数据转成字节数据再写给输出流，它相当于一个中介 \\ 桥梁。 FileWriter 与 OutputStreamWriter 功能类似，我们可以直接往流中写字符串数据，FileWriter 内部会根据字符编码方式来把字符数据转成字节数据再写给输出流。 BufferedWriter 比 FileWriter 还高级一点，它利用了缓冲区来提高写的效率。它还多出了一个函数：newLine ()：写入一个换行符。 使用 Writer 是一个抽象基类，不能实例化，但可以用于接口化编程。 OutputStreamWriter 需要一个输入流对象作为实例化参数。 FileWriter 需要一个文件对象来实例化，可以是 File 类对象，也可以是文件的路径字符串。 BufferWriter 需要一个字符输出流对象作为实例化参数。 具体代码格式FileInputStream1234567891011121314151617181920212223242526272829import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;public class IOTest01 { public static void main(String[] args) { FileInputStream fis = null; try { fis = new FileInputStream(\"F:\\\\Java\\\\code\\\\Java-13\\\\src\\\\File01\"); byte[] b = new byte[4]; int i = 0; while((i = fis.read(b)) != -1) { // \"流\"--&gt;一步完成 System.out.print(new String(b,0,i)); } } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } finally { if (fis != null) { try { fis.close(); } catch (IOException e) { e.printStackTrace(); } } } }} FileOutputStream1234567891011121314151617181920212223242526272829303132import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;public class IOTest02 { public static void main(String[] args) { FileOutputStream fos = null; try { fos = new FileOutputStream(\"F:\\\\Java\\\\code\\\\Java-13\\\\src\\\\File02\",true); // \"true\"---&gt;不清空文件添加内容 // 不加\"true\",默认为\"false\"，即清空文件添加内容 String s = \"不要在一切还来得及的时候，不着急；又在一切来不及的时候，选择放弃。\" + \"\\n\" + \"别在一切都还来得及的时候，不着急；又在一切都来不及的时候，选择放弃。\" + \"\\n\"; fos.write(s.getBytes()); fos.flush(); } catch (FileNotFoundException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } catch (IOException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } finally { if (fos != null) { try { fos.close(); } catch (IOException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } } } }} FileReader1234567891011121314151617181920212223242526272829303132import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;public class IOTest03 { public static void main(String[] args) { FileReader fr = null; try { fr = new FileReader(\"F:\\\\Java\\\\code\\\\Java-13\\\\src\\\\File03\"); int i = 0; char[] c = new char[4]; while((i = fr.read(c)) != -1) { System.out.print(c); } } catch (FileNotFoundException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } catch (IOException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } finally { if (fr != null) { try { fr.close(); } catch (IOException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } } } }} FileWriter12345678910111213141516171819202122232425import java.io.FileWriter;import java.io.IOException;public class IOTest04 { public static void main(String[] args) { FileWriter fw = null; try { fw = new FileWriter(\"F:\\\\Java\\\\code\\\\Java-13\\\\src\\\\File04\",true); fw.write(\"那晚，我们都很开心。\"); fw.flush(); } catch (IOException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } finally { if (fw != null) { try { fw.close(); } catch (IOException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } } } }} 总结📋【Java】学习之路可谓倒悬之危，课时较少，网课吸收较差，成功的把自己的未来寄托到了【B 站】, 顺利解锁 “我在 B 站上大学” 成就，该笔记内容绝大多数来自网络，以备后期复习。 都说 “不要重复造轮子”，那如果连 “造轮子” 的本事都没有，何谈 “重复” 呢？ &nbsp; 愿一切都好！！！👌","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://kangblogs.top/tags/Java/"},{"name":"IO流","slug":"IO流","permalink":"https://kangblogs.top/tags/IO%E6%B5%81/"}]},{"title":"IDM 多线程下载器","slug":"Blog-02","date":"2020-06-11T15:47:54.000Z","updated":"2020-06-11T15:47:54.000Z","comments":true,"path":"posts/4cd7304b.html","link":"","permalink":"https://kangblogs.top/posts/4cd7304b.html","excerpt":"今天填上一篇的坑","text":"今天填上一篇的坑 &nbsp; &nbsp; IDM 多线程下载器🌙🌙🌙 在上一篇中出现了这张图： &nbsp; 在【KinhDown 免费版】解析 Aria 链接后，自动弹出并请求下载，对！就是这么简单。这就是大名鼎鼎的【IDM】(Internet Download Manager) 安装下载，解压后安装，Windows 式” 下一步 “安装即可。 破解Patches📂中解压与电脑操作系统位数对应的压缩包 (解压密码：123)，右击 Patch 可执行程序，以管理员身份运行，继续【next】。再次点击 IDM，若界面出现 ⚡开始奔放⚡ 诚然，钱包鼓的话，可以去官网 IDM 官网支持一下！那它为什么这么快呢？说白了就是【多线程】。我们将下载一个文件这件事比作为接一桶水，按平常下载的情况就相当于开一个水龙头向桶里放水；当使用上 IDM，就相当于同时打开了多个水龙头往桶里放水，速度当然快起来了。【注】IDM 最大支持 32 线程。至此，电脑上的下载任务，IDM 就可以全局代理。","categories":[],"tags":[{"name":"分享","slug":"分享","permalink":"https://kangblogs.top/tags/%E5%88%86%E4%BA%AB/"},{"name":"IDM","slug":"IDM","permalink":"https://kangblogs.top/tags/IDM/"}]},{"title":"First Blog","slug":"Blog-01","date":"2020-06-09T15:47:54.000Z","updated":"2020-06-09T15:47:54.000Z","comments":true,"path":"posts/a30a3587.html","link":"","permalink":"https://kangblogs.top/posts/a30a3587.html","excerpt":"这是我的第一篇博客，很高兴能与大家分享！一来向大家安利一个好东西👀，二来锻炼我的 Markdown 编辑能力。","text":"这是我的第一篇博客，很高兴能与大家分享！一来向大家安利一个好东西👀，二来锻炼我的 Markdown 编辑能力。 &nbsp; &nbsp; 分享・毒盘不限速下载⚡⚡⚡ 准备工作 软件一款【KinhDown 免费版】 浏览器插件一个【网盘万能助手】 脑子一个【🧠】 使用教程 安装 【KinhDown 免费版】我更愿意叫它为 “KinhDown 绿色版”，因为该软件无需安装，双击即可运行。 【网盘万能助手】插件的安装，这里以 Microsoft Edge 为例，打开浏览器。 &nbsp; 确保打开 “开发人员模式”。 &nbsp; 将下载好的【网盘万能助手 v2.3.2.zip】直接拖入浏览器面板。 具体使用 点击【网盘万能助手】扩展，并【启用当前 UA】； 打开毒盘文件分享链接，点击【下载助手】—&gt;【显示 Aria 链接】。 &nbsp; 并【复制全部默认链接】，此时主角就要登场了，打开【KinhDown 免费版】，将复制的链接粘贴进去并解析。 &nbsp; [注意] 一定要在分享链接中复制 Aria 链接。🐷🐷🐷 &nbsp; 奔放下载中。。。。。。（可以跑满带宽） 实现原理 很深奥，很深奥。。。。。。（其实我也我不知道） 毒盘不限速下载的方法还有很多，譬如，【亿寻】、【Pandownload 复活版】等等，在各大电报群搜罗了一番，本着【互联网分享精神】介绍这一种目前还比较稳定的方法。","categories":[],"tags":[{"name":"分享","slug":"分享","permalink":"https://kangblogs.top/tags/%E5%88%86%E4%BA%AB/"},{"name":"百度","slug":"百度","permalink":"https://kangblogs.top/tags/%E7%99%BE%E5%BA%A6/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-09T14:32:28.000Z","updated":"2021-10-08T13:15:23.500Z","comments":true,"path":"posts/4a17b156.html","link":"","permalink":"https://kangblogs.top/posts/4a17b156.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"数电","slug":"数电","permalink":"https://kangblogs.top/tags/%E6%95%B0%E7%94%B5/"},{"name":"格雷码","slug":"格雷码","permalink":"https://kangblogs.top/tags/%E6%A0%BC%E9%9B%B7%E7%A0%81/"},{"name":"Python","slug":"Python","permalink":"https://kangblogs.top/tags/Python/"},{"name":"今日校园","slug":"今日校园","permalink":"https://kangblogs.top/tags/%E4%BB%8A%E6%97%A5%E6%A0%A1%E5%9B%AD/"},{"name":"云函数","slug":"云函数","permalink":"https://kangblogs.top/tags/%E4%BA%91%E5%87%BD%E6%95%B0/"},{"name":"Java","slug":"Java","permalink":"https://kangblogs.top/tags/Java/"},{"name":"前端","slug":"前端","permalink":"https://kangblogs.top/tags/%E5%89%8D%E7%AB%AF/"},{"name":"Hexo","slug":"Hexo","permalink":"https://kangblogs.top/tags/Hexo/"},{"name":"Chart.js","slug":"Chart-js","permalink":"https://kangblogs.top/tags/Chart-js/"},{"name":"Vercel","slug":"Vercel","permalink":"https://kangblogs.top/tags/Vercel/"},{"name":"Butterfly","slug":"Butterfly","permalink":"https://kangblogs.top/tags/Butterfly/"},{"name":"感悟","slug":"感悟","permalink":"https://kangblogs.top/tags/%E6%84%9F%E6%82%9F/"},{"name":"壁纸","slug":"壁纸","permalink":"https://kangblogs.top/tags/%E5%A3%81%E7%BA%B8/"},{"name":"分享","slug":"分享","permalink":"https://kangblogs.top/tags/%E5%88%86%E4%BA%AB/"},{"name":"IO流","slug":"IO流","permalink":"https://kangblogs.top/tags/IO%E6%B5%81/"},{"name":"IDM","slug":"IDM","permalink":"https://kangblogs.top/tags/IDM/"},{"name":"百度","slug":"百度","permalink":"https://kangblogs.top/tags/%E7%99%BE%E5%BA%A6/"}]}